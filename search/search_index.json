{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Costa's Docspace \u2728 Here are my personal note about Computer Science, software... notes. What you can get from here. Algorithms and data structures Operating system, computer network, Linux, etc Infrastructure, such as mysql, redis, etcd, k8s, docker, etc Programming language, such as golang, trust, JavaScript, etc and my personal translation plans. About Me I'm a Go and Javascript developer. \ud83d\udd2d I\u2019m currently studying at China University of Geoscience(Wuhan) \ud83c\udf31 I\u2019m currently majoying in Software Engneering \ud83d\udceb How to reach me: Via Email: aschen@cug.edu.cn \ud83d\ude08 Via Wechat: iiiinev Find Me https://github.com/aschenmaker https://cqs.es Site Url via Tencent Cloud Webfiy https://doc.lyneee.com Powered by Cloudbase Webify via Github Pages https://docs.cqs.es via Tencent Oss https://docs.lyneee.com faster access CDN","title":"\u9996\u9875"},{"location":"#costas-docspace","text":"Here are my personal note about Computer Science, software... notes. What you can get from here. Algorithms and data structures Operating system, computer network, Linux, etc Infrastructure, such as mysql, redis, etcd, k8s, docker, etc Programming language, such as golang, trust, JavaScript, etc and my personal translation plans.","title":"Costa's Docspace  \u2728"},{"location":"#about-me","text":"I'm a Go and Javascript developer. \ud83d\udd2d I\u2019m currently studying at China University of Geoscience(Wuhan) \ud83c\udf31 I\u2019m currently majoying in Software Engneering \ud83d\udceb How to reach me: Via Email: aschen@cug.edu.cn \ud83d\ude08 Via Wechat: iiiinev","title":"About Me"},{"location":"#find-me","text":"https://github.com/aschenmaker https://cqs.es","title":"Find Me"},{"location":"#site-url","text":"via Tencent Cloud Webfiy https://doc.lyneee.com Powered by Cloudbase Webify via Github Pages https://docs.cqs.es via Tencent Oss https://docs.lyneee.com faster access CDN","title":"Site Url"},{"location":"todo/","text":"LRU \u5185\u5b58\u6c70\u6362\u7b97\u6cd5 rsa\u7b97\u6cd5 \u8f6f\u8fde\u63a5\u548c\u786c\u8fde\u63a5","title":"Todo"},{"location":"algo/alg/heap/","text":"\u5806-go\u5b9e\u73b0 \u5806(heap)\u662f\u4e00\u79cd\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u5b9e\u73b0\u4f18\u5148\u961f\u5217\u7684\u9996\u5148\u6570\u636e\u7ed3\u6784\u3002\u5806\u6709\u5f88\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e8c\u9879\u5f0f\u5806\u3001\u6590\u6ce2\u62c9\u5951\u5806\uff0c\u4ee5\u53ca\u4e8c\u53c9\u5806\u3002 1.\u5806heap \u5b9e\u73b0\u4e00\u4e2a\u5806\u6709\u4e24\u4e2a\u8981\u6c42 \u5806\u662f\u4e00\u4e2a \u5b8c\u5168\u4e8c\u53c9\u6811 \uff1b \u5806\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e\uff08\u6216\u8005\u5c0f\u4e8e\u7b49\u4e8e\uff09\u67d0\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u6240\u6709\u503c \u6839\u636e\u5806\u7684\u6027\u8d28\uff0c\u4f5c\u4e3a\u6839\u7684\u503c\u662f\u6700\u5927\u6216\u8005\u6700\u5c0f\u5206\u4e3a\u5927\u6839\u5806\u548c\u5c0f\u6839\u5806\u3002\u4e5f\u5c31\u662f\u5b57\u8282\u70b9 \u6211\u4eec\u5c06\u8fd9\u79cd\u7ed3\u6784\uff0c\u6620\u5c04\u5230\u6570\u7ec4\u4e2d\u53ef\u4ee5\u6709\uff0c // \u5927\u6839\u5806 [ 50 , 45 , 40 , 20 , 25 , 35 , 30 , 10 , 15 ] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] // \u5c0f\u6839\u5806 [ 10 , 20 , 15 , 25 , 50 , 30 , 40 , 35 , 45 ] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5b9a\u4e49\uff1a \u5927\u6839\u5806: arr[i] >= arr[2i+1] && arr[i] >= arr[2i+2] \u5c0f\u6839\u5806: arr[i] <= arr[2i+1] && arr[i] <= arr[2i+2] 1.1\u63d2\u5165\u5143\u7d20 \u4e00\u4e2a\u5927\u6839\u5806\uff0c\u5927\u81f4\u7684\u8fc7\u7a0b\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a \u5c06\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u5230\u961f\u5c3e\uff0c \u5982\u679c\u5b50\u8282\u70b9\u7684\u503c\uff0c\u6bd4\u7236\u8282\u70b9\u5927\u5219\u8fdb\u884c\u4ea4\u6362 \u8fd9\u662f\u4e00\u4e2a\u4ece\u5806\u5e95\u5411\u4e0a\u5192\u6ce1\u7684\u8fc7\u7a0b\uff1a type Heap struct { data [] int // \u6570\u636e length int // \u5806\u7684\u957f\u5ea6 count int // \u5806\u5df2\u7ecf\u5b58\u5165\u7684\u6570\u91cf } func HeapConstructor ( capacity int ) * Heap { data := make ([] int , 0 , capacity ) return & Heap { data : data , length : capacity , count : 0 , } } func ( h * Heap ) Insert ( i int ) { h . data = append ( h . data , i ) h . count ++ h . Up () } func ( h * Heap ) Up () { i := h . count - 1 for i / 2 >= 0 && h . data [ i ] > h . data [ i / 2 ] { // \u5982\u679c\u5f53\u524d\u8282\u70b9\uff08\u5b50\u8282\u70b9\uff09\u6bd4\u7236\u8282\u70b9\u5927\uff0c\u90a3\u4e48\u5219\u4ea4\u6362\u4e24\u4e2a\u8282\u70b9 h . Swap ( i , i / 2 ) i /= 2 } } 1.3\u5220\u9664\u5806\u9876\u5143\u7d20 \u5bf9\u4e8e\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u5220\u9664\u5806\u9876\u5143\u7d20\u7684\u7684\u8fc7\u7a0b\uff1a \u79fb\u9664\u5806\u9876\u5143\u7d20 \u4e3a\u4e86\u4fdd\u6301\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u548c\u5806\u9876\u5143\u7d20\u8fdb\u884c\u4ea4\u6362 \u79fb\u9664\u5806\u5c3e\u5143\u7d20 \u4ece\u9876\u5411\u4e0b\u8fdb\u884c\u5806\u5316 // PopMax: \u5f39\u51fa\u6700\u5927\u5143\u7d20 func ( h * Heap ) PopMax () int { max := h . data [ 0 ] h . Swap ( 0 , h . count - 1 ) h . count -- h . data = h . data [: h . count ] h . Down ( 0 , h . count ) return max } // Down: \u4ece\u6839\u5143\u7d20\u5411\u5b50\u5143\u7d20\u8fdb\u884c\u5806\u5316 func ( h * Heap ) Down ( i0 , count int ) { i := i0 for { j1 := i * 2 + 1 if j1 >= count || j1 < 0 { break } j := j1 // \u672c\u6b21\u5b9e\u73b0\u7684\u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u627e\u5230\uff0c\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u8f83\u5927\u7684\u90a3\u4e2a\u8282\u70b9 if j2 := j1 + 1 ; j2 < count && h . data [ j1 ] < h . data [ j2 ] { j = j2 } // \u5982\u679c\u6b64\u65f6\u7684\u6839\u8282\u70b9\uff0c\u6bd4\u5b57\u8282\u70b9\u90fd\u8981\u5927\uff0c\u90a3\u4e48\u5219\u4e0d\u7528\u8fdb\u884c\u4ea4\u6362 if h . data [ j ] < h . data [ i ] { break } // \u8fdb\u884c\u4ea4\u6362 h . Swap ( i , j ) // \u5bf9\u4ea4\u6362\u540e\u7684\u8282\u70b9\u7ee7\u7eed\uff0c\u8fdb\u884c\u6bd4\u8f83\u548c\u4ea4\u6362\uff0c\u76f4\u5230\u4e0d\u9700\u8981\u4ea4\u6362\u4e3a\u6b62 i = j } } 1.3 \u6784\u5efa\u5806 \u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u5806\u5462\uff0c\u8fd9\u662f\u4e00\u4e2a\u5927\u6839\u5806\u3002 // Init: \u8fdb\u884c\u5806\u5316 func ( h * Heap ) Init ( nums ... int ) { h . data = append ( h . data , nums ... ) h . count += len ( nums ) // \u56e0\u4e3a\u5927\u4e8ecount/2 - 1 \u7684\u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u6240\u4ee5\u4e0d\u7528\u8fdb\u884c\u5806\u5316 for i := h . count / 2 - 1 ; i >= 0 ; i -- { h . Down ( i , h . count ) } } // Down: \u4ece\u6839\u5143\u7d20\u5411\u5b50\u5143\u7d20\u8fdb\u884c\u5806\u5316 func ( h * Heap ) Down ( i0 , count int ) { i := i0 for { j1 := i * 2 + 1 if j1 >= count || j1 < 0 { break } j := j1 // \u672c\u6b21\u5b9e\u73b0\u7684\u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u627e\u5230\uff0c\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u8f83\u5927\u7684\u90a3\u4e2a\u8282\u70b9 if j2 := j1 + 1 ; j2 < count && h . data [ j1 ] < h . data [ j2 ] { j = j2 } // \u5982\u679c\u6b64\u65f6\u7684\u6839\u8282\u70b9\uff0c\u6bd4\u5b57\u8282\u70b9\u90fd\u8981\u5927\uff0c\u90a3\u4e48\u5219\u4e0d\u7528\u8fdb\u884c\u4ea4\u6362 if h . data [ j ] < h . data [ i ] { break } // \u8fdb\u884c\u4ea4\u6362 h . Swap ( i , j ) // \u5bf9\u4ea4\u6362\u540e\u7684\u8282\u70b9\u7ee7\u7eed\uff0c\u8fdb\u884c\u6bd4\u8f83\u548c\u4ea4\u6362\uff0c\u76f4\u5230\u4e0d\u9700\u8981\u4ea4\u6362\u4e3a\u6b62 i = j } } 2. \u4f7f\u7528golang \u63d0\u4f9b\u7684 heap\u8fdb\u884c\u5b9e\u73b0 \u4e3b\u8981\u662f\u5b9e\u73b0\u63d0\u4f9b\u7684\u4e94\u4e2a\u63a5\u53e3\uff0c\u8c03\u7528heap.Init\u6765\u8fdb\u884c\u6784\u5efa\u5806 3.\u5806\u6392\u5e8f\u548c\u5feb\u6392 3.1\u5806\u6392\u5e8f\u6570\u636e\u8bbf\u95ee\u6ca1\u6709\u5feb\u6392\u53cb\u597d \u5feb\u6392\u7684\u6570\u636e\u662f\u987a\u5e8f\u8bbf\u95ee\u7684 \u5806\u6392\u5e8f\u7684\u6570\u636e\u662f\u8df3\u8dc3\u8bbf\u95ee\u7684 \u8fd9\u4e00\u70b9\u5bfc\u81f4\u5728\u5806\u6392\u5e8f\u7684\u65f6\u5019\uff0cCPU\u5728\u8fdb\u884c\u8bfb\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u5982\u679c\u8df3\u8dc3\u8ddd\u79bb\u8fc7\u5927\uff0c\u9700\u8981\u8fdb\u884c\u591a\u6b21\u8bfb\u53d6\u3002\u53e6\u5916\uff0c\u8df3\u8dc3\u8bfb\u4e0d\u5229\u4e8eCPU cache\u3002 3.2\u5806\u6392\u5e8f\u7684\u4ea4\u6362\u6b21\u6570\u4f1a\u6bd4\u5feb\u901f\u6392\u5e8f\u7684\u6570\u636e\u4ea4\u6362\u6b21\u6570\u66f4\u591a 4.\u5e94\u7528 4.1topK\u95ee\u9898 \u6bd4\u5982\uff0c\u6570\u636e\u4e2d\u524dK\u4e2a\u6700\u5927\u5143\u7d20\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u548c\u5806\u9876\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5927\u6216\u8005\u5c0f\u5219\u5f39\u51fa\u5806\u9876\uff0c\u538b\u5165\u65b0\u7684\u5143\u7d20 4.2\u6c42\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570 -> https://leetcode-cn.com/problems/find-median-from-data-stream/ 4.3\u4f18\u5148\u961f\u5217\u7684\u5b9e\u73b0 5\u6700\u540e\u8d34\u4e0a\u4ee3\u7801 https://gist.github.com/aschenmaker/e81419898e4f12cc475c83eab68e2a21","title":"\u5806\u4ee5\u53ca\u7528go\u5b9e\u73b0"},{"location":"algo/alg/heap/#-go","text":"\u5806(heap)\u662f\u4e00\u79cd\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u5b9e\u73b0\u4f18\u5148\u961f\u5217\u7684\u9996\u5148\u6570\u636e\u7ed3\u6784\u3002\u5806\u6709\u5f88\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e8c\u9879\u5f0f\u5806\u3001\u6590\u6ce2\u62c9\u5951\u5806\uff0c\u4ee5\u53ca\u4e8c\u53c9\u5806\u3002","title":"\u5806-go\u5b9e\u73b0"},{"location":"algo/alg/heap/#1heap","text":"\u5b9e\u73b0\u4e00\u4e2a\u5806\u6709\u4e24\u4e2a\u8981\u6c42 \u5806\u662f\u4e00\u4e2a \u5b8c\u5168\u4e8c\u53c9\u6811 \uff1b \u5806\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e\uff08\u6216\u8005\u5c0f\u4e8e\u7b49\u4e8e\uff09\u67d0\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u6240\u6709\u503c \u6839\u636e\u5806\u7684\u6027\u8d28\uff0c\u4f5c\u4e3a\u6839\u7684\u503c\u662f\u6700\u5927\u6216\u8005\u6700\u5c0f\u5206\u4e3a\u5927\u6839\u5806\u548c\u5c0f\u6839\u5806\u3002\u4e5f\u5c31\u662f\u5b57\u8282\u70b9 \u6211\u4eec\u5c06\u8fd9\u79cd\u7ed3\u6784\uff0c\u6620\u5c04\u5230\u6570\u7ec4\u4e2d\u53ef\u4ee5\u6709\uff0c // \u5927\u6839\u5806 [ 50 , 45 , 40 , 20 , 25 , 35 , 30 , 10 , 15 ] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] // \u5c0f\u6839\u5806 [ 10 , 20 , 15 , 25 , 50 , 30 , 40 , 35 , 45 ] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5b9a\u4e49\uff1a \u5927\u6839\u5806: arr[i] >= arr[2i+1] && arr[i] >= arr[2i+2] \u5c0f\u6839\u5806: arr[i] <= arr[2i+1] && arr[i] <= arr[2i+2]","title":"1.\u5806heap"},{"location":"algo/alg/heap/#11","text":"\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u5927\u81f4\u7684\u8fc7\u7a0b\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a \u5c06\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u5230\u961f\u5c3e\uff0c \u5982\u679c\u5b50\u8282\u70b9\u7684\u503c\uff0c\u6bd4\u7236\u8282\u70b9\u5927\u5219\u8fdb\u884c\u4ea4\u6362 \u8fd9\u662f\u4e00\u4e2a\u4ece\u5806\u5e95\u5411\u4e0a\u5192\u6ce1\u7684\u8fc7\u7a0b\uff1a type Heap struct { data [] int // \u6570\u636e length int // \u5806\u7684\u957f\u5ea6 count int // \u5806\u5df2\u7ecf\u5b58\u5165\u7684\u6570\u91cf } func HeapConstructor ( capacity int ) * Heap { data := make ([] int , 0 , capacity ) return & Heap { data : data , length : capacity , count : 0 , } } func ( h * Heap ) Insert ( i int ) { h . data = append ( h . data , i ) h . count ++ h . Up () } func ( h * Heap ) Up () { i := h . count - 1 for i / 2 >= 0 && h . data [ i ] > h . data [ i / 2 ] { // \u5982\u679c\u5f53\u524d\u8282\u70b9\uff08\u5b50\u8282\u70b9\uff09\u6bd4\u7236\u8282\u70b9\u5927\uff0c\u90a3\u4e48\u5219\u4ea4\u6362\u4e24\u4e2a\u8282\u70b9 h . Swap ( i , i / 2 ) i /= 2 } }","title":"1.1\u63d2\u5165\u5143\u7d20"},{"location":"algo/alg/heap/#13","text":"\u5bf9\u4e8e\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u5220\u9664\u5806\u9876\u5143\u7d20\u7684\u7684\u8fc7\u7a0b\uff1a \u79fb\u9664\u5806\u9876\u5143\u7d20 \u4e3a\u4e86\u4fdd\u6301\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u548c\u5806\u9876\u5143\u7d20\u8fdb\u884c\u4ea4\u6362 \u79fb\u9664\u5806\u5c3e\u5143\u7d20 \u4ece\u9876\u5411\u4e0b\u8fdb\u884c\u5806\u5316 // PopMax: \u5f39\u51fa\u6700\u5927\u5143\u7d20 func ( h * Heap ) PopMax () int { max := h . data [ 0 ] h . Swap ( 0 , h . count - 1 ) h . count -- h . data = h . data [: h . count ] h . Down ( 0 , h . count ) return max } // Down: \u4ece\u6839\u5143\u7d20\u5411\u5b50\u5143\u7d20\u8fdb\u884c\u5806\u5316 func ( h * Heap ) Down ( i0 , count int ) { i := i0 for { j1 := i * 2 + 1 if j1 >= count || j1 < 0 { break } j := j1 // \u672c\u6b21\u5b9e\u73b0\u7684\u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u627e\u5230\uff0c\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u8f83\u5927\u7684\u90a3\u4e2a\u8282\u70b9 if j2 := j1 + 1 ; j2 < count && h . data [ j1 ] < h . data [ j2 ] { j = j2 } // \u5982\u679c\u6b64\u65f6\u7684\u6839\u8282\u70b9\uff0c\u6bd4\u5b57\u8282\u70b9\u90fd\u8981\u5927\uff0c\u90a3\u4e48\u5219\u4e0d\u7528\u8fdb\u884c\u4ea4\u6362 if h . data [ j ] < h . data [ i ] { break } // \u8fdb\u884c\u4ea4\u6362 h . Swap ( i , j ) // \u5bf9\u4ea4\u6362\u540e\u7684\u8282\u70b9\u7ee7\u7eed\uff0c\u8fdb\u884c\u6bd4\u8f83\u548c\u4ea4\u6362\uff0c\u76f4\u5230\u4e0d\u9700\u8981\u4ea4\u6362\u4e3a\u6b62 i = j } }","title":"1.3\u5220\u9664\u5806\u9876\u5143\u7d20"},{"location":"algo/alg/heap/#13_1","text":"\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u5806\u5462\uff0c\u8fd9\u662f\u4e00\u4e2a\u5927\u6839\u5806\u3002 // Init: \u8fdb\u884c\u5806\u5316 func ( h * Heap ) Init ( nums ... int ) { h . data = append ( h . data , nums ... ) h . count += len ( nums ) // \u56e0\u4e3a\u5927\u4e8ecount/2 - 1 \u7684\u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u6240\u4ee5\u4e0d\u7528\u8fdb\u884c\u5806\u5316 for i := h . count / 2 - 1 ; i >= 0 ; i -- { h . Down ( i , h . count ) } } // Down: \u4ece\u6839\u5143\u7d20\u5411\u5b50\u5143\u7d20\u8fdb\u884c\u5806\u5316 func ( h * Heap ) Down ( i0 , count int ) { i := i0 for { j1 := i * 2 + 1 if j1 >= count || j1 < 0 { break } j := j1 // \u672c\u6b21\u5b9e\u73b0\u7684\u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u627e\u5230\uff0c\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u8f83\u5927\u7684\u90a3\u4e2a\u8282\u70b9 if j2 := j1 + 1 ; j2 < count && h . data [ j1 ] < h . data [ j2 ] { j = j2 } // \u5982\u679c\u6b64\u65f6\u7684\u6839\u8282\u70b9\uff0c\u6bd4\u5b57\u8282\u70b9\u90fd\u8981\u5927\uff0c\u90a3\u4e48\u5219\u4e0d\u7528\u8fdb\u884c\u4ea4\u6362 if h . data [ j ] < h . data [ i ] { break } // \u8fdb\u884c\u4ea4\u6362 h . Swap ( i , j ) // \u5bf9\u4ea4\u6362\u540e\u7684\u8282\u70b9\u7ee7\u7eed\uff0c\u8fdb\u884c\u6bd4\u8f83\u548c\u4ea4\u6362\uff0c\u76f4\u5230\u4e0d\u9700\u8981\u4ea4\u6362\u4e3a\u6b62 i = j } }","title":"1.3 \u6784\u5efa\u5806"},{"location":"algo/alg/heap/#2-golang-heap","text":"\u4e3b\u8981\u662f\u5b9e\u73b0\u63d0\u4f9b\u7684\u4e94\u4e2a\u63a5\u53e3\uff0c\u8c03\u7528heap.Init\u6765\u8fdb\u884c\u6784\u5efa\u5806","title":"2. \u4f7f\u7528golang \u63d0\u4f9b\u7684 heap\u8fdb\u884c\u5b9e\u73b0"},{"location":"algo/alg/heap/#3","text":"","title":"3.\u5806\u6392\u5e8f\u548c\u5feb\u6392"},{"location":"algo/alg/heap/#31","text":"\u5feb\u6392\u7684\u6570\u636e\u662f\u987a\u5e8f\u8bbf\u95ee\u7684 \u5806\u6392\u5e8f\u7684\u6570\u636e\u662f\u8df3\u8dc3\u8bbf\u95ee\u7684 \u8fd9\u4e00\u70b9\u5bfc\u81f4\u5728\u5806\u6392\u5e8f\u7684\u65f6\u5019\uff0cCPU\u5728\u8fdb\u884c\u8bfb\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u5982\u679c\u8df3\u8dc3\u8ddd\u79bb\u8fc7\u5927\uff0c\u9700\u8981\u8fdb\u884c\u591a\u6b21\u8bfb\u53d6\u3002\u53e6\u5916\uff0c\u8df3\u8dc3\u8bfb\u4e0d\u5229\u4e8eCPU cache\u3002","title":"3.1\u5806\u6392\u5e8f\u6570\u636e\u8bbf\u95ee\u6ca1\u6709\u5feb\u6392\u53cb\u597d"},{"location":"algo/alg/heap/#32","text":"","title":"3.2\u5806\u6392\u5e8f\u7684\u4ea4\u6362\u6b21\u6570\u4f1a\u6bd4\u5feb\u901f\u6392\u5e8f\u7684\u6570\u636e\u4ea4\u6362\u6b21\u6570\u66f4\u591a"},{"location":"algo/alg/heap/#4","text":"","title":"4.\u5e94\u7528"},{"location":"algo/alg/heap/#41topk","text":"\u6bd4\u5982\uff0c\u6570\u636e\u4e2d\u524dK\u4e2a\u6700\u5927\u5143\u7d20\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u548c\u5806\u9876\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5927\u6216\u8005\u5c0f\u5219\u5f39\u51fa\u5806\u9876\uff0c\u538b\u5165\u65b0\u7684\u5143\u7d20","title":"4.1topK\u95ee\u9898"},{"location":"algo/alg/heap/#42","text":"-> https://leetcode-cn.com/problems/find-median-from-data-stream/","title":"4.2\u6c42\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570"},{"location":"algo/alg/heap/#43","text":"","title":"4.3\u4f18\u5148\u961f\u5217\u7684\u5b9e\u73b0"},{"location":"algo/alg/heap/#5","text":"https://gist.github.com/aschenmaker/e81419898e4f12cc475c83eab68e2a21","title":"5\u6700\u540e\u8d34\u4e0a\u4ee3\u7801"},{"location":"algo/sort/sort/","text":"\u6392\u5e8f\u7b97\u6cd5 \u672c\u6587\u4ee3\u7801\u5b9e\u73b0\u4f7f\u7528golang 0\u6982\u8ff0 0.1 \u5206\u7c7b \u5341\u79cd\u7b97\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a \u6bd4\u8f83\u6392\u5e8f\uff1a\u901a\u8fc7\u6bd4\u8f83\u5143\u7d20\u7684\u76f8\u5bf9\u6b21\u5e8f\uff0c\u7531\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u80fd\u7a81\u7834 O(nlogn) O(nlogn) \uff0c\u4e5f\u88ab\u53eb\u505a\u975e\u7ebf\u6027\u65f6\u95f4\u6bd4\u8f83\u6392\u5e8f \u975e\u6bd4\u8f83\u6392\u5e8f\uff1a\u4e0d\u901a\u8fc7\u6bd4\u8f83\u6765\u89c9\u5143\u7d20\u95f4\u7684\u76f8\u5bf9\u6b21\u5e8f 0.2 \u7b97\u6cd5\u590d\u6742\u5ea6 0.3 \u76f8\u5173\u6982\u5ff5 \u7a33\u5b9a \uff1aa\u672c\u6765\u5728b\u524d\u9762\uff0c\u6392\u5e8f\u5b8c\u6210\u540e\uff0ca\u548cb\u7684\u4f4d\u7f6e\u6ca1\u6709\u53d1\u751f\u53d8\u5316 \u4e0d\u7a33\u5b9a \uff1aa\u672c\u6765\u5728b\u524d\u9762\uff0ca=b\uff0c\u6392\u5e8f\u4e4b\u540e\uff0ca\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728b\u7684\u540e\u9762 \u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 1\u5192\u6ce1\u6392\u5e8f \u7a33\u5b9a\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N^{2}) O(N^{2}) \uff0c\u6700\u597d\u7684\u60c5\u51b5\u4e0b\u5df2\u7ecf\u662f\u6392\u597d\u5e8f\u7684\uff0c\u4e3a O(N) O(N) 1.1 \u7b97\u6cd5\u63cf\u8ff0 \u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u6bd4\u7b2c\u4e8c\u4e2a\u5927\uff0c\u5c31\u4ea4\u6362\u5b83\u4eec\u4e24\u4e2a\uff1b \u5bf9\u6bcf\u4e00\u5bf9\u76f8\u90bb\u5143\u7d20\u4f5c\u540c\u6837\u7684\u5de5\u4f5c\uff0c\u4ece\u5f00\u59cb\u7b2c\u4e00\u5bf9\u5230\u7ed3\u5c3e\u7684\u6700\u540e\u4e00\u5bf9\uff0c\u8fd9\u6837\u5728\u6700\u540e\u7684\u5143\u7d20\u5e94\u8be5\u4f1a\u662f\u6700\u5927\u7684\u6570\uff1b \u9488\u5bf9\u6240\u6709\u7684\u5143\u7d20\u91cd\u590d\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2a\uff1b \u91cd\u590d\u6b65\u9aa41~3\uff0c\u76f4\u5230\u6392\u5e8f\u5b8c\u6210\u3002 1.2 \u6f14\u793a 1.3 \u4ee3\u7801\u5b9e\u73b0 // bubbleSort func bubbleSort ( slice [] int ) [] int { swap := true for swap { swap = false for i := 0 ; i < len ( slice ) - 1 ; i ++ { if slice [ i ] > slice [ i + 1 ] { slice [ i + 1 ], slice [ i ] = slice [ i ], slice [ i + 1 ] swap = true } } } return slice } 2\u9009\u62e9\u6392\u5e8f \u9009\u62e9\u6392\u5e8f(Selection-sort)\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u9996\u5148\u5728\u672a\u6392\u5e8f\u5e8f\u5217\u4e2d\u627e\u5230\u6700\u5c0f\uff08\u5927\uff09\u5143\u7d20\uff0c\u5b58\u653e\u5230\u6392\u5e8f\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7136\u540e\uff0c\u518d\u4ece\u5269\u4f59\u672a\u6392\u5e8f\u5143\u7d20\u4e2d\u7ee7\u7eed\u5bfb\u627e\u6700\u5c0f\uff08\u5927\uff09\u5143\u7d20\uff0c\u7136\u540e\u653e\u5230\u5df2\u6392\u5e8f\u5e8f\u5217\u7684\u672b\u5c3e\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u5747\u6392\u5e8f\u5b8c\u6bd5\u3002 2.1 \u7b97\u6cd5\u63cf\u8ff0 n\u4e2a\u8bb0\u5f55\u7684\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u53ef\u7ecf\u8fc7n-1\u8d9f\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u5f97\u5230\u6709\u5e8f\u7ed3\u679c\u3002\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a \u521d\u59cb\u72b6\u6001\uff1a\u65e0\u5e8f\u533a\u4e3aR[1..n]\uff0c\u6709\u5e8f\u533a\u4e3a\u7a7a\uff1b \u7b2ci\u8d9f\u6392\u5e8f(i=1,2,3\u2026n-1)\u5f00\u59cb\u65f6\uff0c\u5f53\u524d\u6709\u5e8f\u533a\u548c\u65e0\u5e8f\u533a\u5206\u522b\u4e3aR[1..i-1]\u548cR(i..n\uff09\u3002\u8be5\u8d9f\u6392\u5e8f\u4ece\u5f53\u524d\u65e0\u5e8f\u533a\u4e2d-\u9009\u51fa\u5173\u952e\u5b57\u6700\u5c0f\u7684\u8bb0\u5f55 R[k]\uff0c\u5c06\u5b83\u4e0e\u65e0\u5e8f\u533a\u7684\u7b2c1\u4e2a\u8bb0\u5f55R\u4ea4\u6362\uff0c\u4f7fR[1..i]\u548cR[i+1..n)\u5206\u522b\u53d8\u4e3a\u8bb0\u5f55\u4e2a\u6570\u589e\u52a01\u4e2a\u7684\u65b0\u6709\u5e8f\u533a\u548c\u8bb0\u5f55\u4e2a\u6570\u51cf\u5c111\u4e2a\u7684\u65b0\u65e0\u5e8f\u533a\uff1b n-1\u8d9f\u7ed3\u675f\uff0c\u6570\u7ec4\u6709\u5e8f\u5316\u4e86\u3002 2.2 \u6f14\u793a 2.3 \u4ee3\u7801\u5b9e\u73b0 // selectionSort func selectionSort ( slice [] int ) [] int { for i := 0 ; i < len ( slice ); i ++ { min := i for j := i + 1 ; j < len ( slice ); j ++ { if slice [ j ] < slice [ min ] { min = j } } slice [ i ], slice [ min ] = slice [ min ], slice [ i ] } return slice } 2.4 \u7b97\u6cd5\u5206\u6790 \u65e0\u8bba\u4ec0\u4e48\u6570\u636e\u8fdb\u53bb\u90fd\u662f O(N^{2}) O(N^{2}) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002 3\u63d2\u5165\u6392\u5e8f \u63d2\u5165\u6392\u5e8f\uff08Insertion-Sort\uff09\u7684\u7b97\u6cd5\u63cf\u8ff0\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u901a\u8fc7\u6784\u5efa\u6709\u5e8f\u5e8f\u5217\uff0c\u5bf9\u4e8e\u672a\u6392\u5e8f\u6570\u636e\uff0c\u5728\u5df2\u6392\u5e8f\u5e8f\u5217\u4e2d\u4ece\u540e\u5411\u524d\u626b\u63cf\uff0c\u627e\u5230\u76f8\u5e94\u4f4d\u7f6e\u5e76\u63d2\u5165\u3002 3.1 \u7b97\u6cd5\u63cf\u8ff0 \u4e00\u822c\u6765\u8bf4\uff0c\u63d2\u5165\u6392\u5e8f\u90fd\u91c7\u7528in-place\u5728\u6570\u7ec4\u4e0a\u5b9e\u73b0\u3002\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a \u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u8be5\u5143\u7d20\u53ef\u4ee5\u8ba4\u4e3a\u5df2\u7ecf\u88ab\u6392\u5e8f\uff1b \u53d6\u51fa\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u5df2\u7ecf\u6392\u5e8f\u7684\u5143\u7d20\u5e8f\u5217\u4e2d\u4ece\u540e\u5411\u524d\u626b\u63cf\uff1b \u5982\u679c\u8be5\u5143\u7d20\uff08\u5df2\u6392\u5e8f\uff09\u5927\u4e8e\u65b0\u5143\u7d20\uff0c\u5c06\u8be5\u5143\u7d20\u79fb\u5230\u4e0b\u4e00\u4f4d\u7f6e\uff1b \u91cd\u590d\u6b65\u9aa43\uff0c\u76f4\u5230\u627e\u5230\u5df2\u6392\u5e8f\u7684\u5143\u7d20\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u65b0\u5143\u7d20\u7684\u4f4d\u7f6e\uff1b \u5c06\u65b0\u5143\u7d20\u63d2\u5165\u5230\u8be5\u4f4d\u7f6e\u540e\uff1b \u91cd\u590d\u6b65\u9aa42~5\u3002 3.2 \u6f14\u793a 3.3 \u4ee3\u7801\u5b9e\u73b0 // insertionSort func insertionSort ( slice [] int ) [] int { for currentIndex := 1 ; currentIndex < len ( slice ); currentIndex ++ { iterator := currentIndex tmp := slice [ currentIndex ] for ; iterator > 0 && slice [ iterator - 1 ] > tmp ; iterator -- { slice [ iterator ] = slice [ iterator - 1 ] } slice [ iterator ] = tmp } return slice } 3.4 \u7b97\u6cd5\u5206\u6790 \u539f\u5730\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u6570\u7ec4\u7684\u72b6\u6001\uff0c\u5982\u679c\u662f\u5df2\u7ecf\u6709\u5e8f\u7684\u6570\u7ec4\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N) O(N) \uff0c\u4e00\u822c\u60c5\u51b5\u90fd\u662f O(N^{2}) O(N^{2}) \u65f6\u95f4\u590d\u6742\u5ea6\u3002 4\u5e0c\u5c14\u6392\u5e8f 1959\u5e74Shell\u53d1\u660e\uff0c\u7b2c\u4e00\u4e2a\u7a81\u7834 O(N^{2}) O(N^{2}) \u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u662f\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u7684\u6539\u8fdb\u7248\uff0c\uff08\u5206\u7ec4\u63d2\u5165\u6392\u5e8f\uff09\u3002\u5b83\u4e0e\u63d2\u5165\u6392\u5e8f\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u4f1a\u4f18\u5148\u6bd4\u8f83\u8ddd\u79bb\u8f83\u8fdc\u7684\u5143\u7d20\u3002\u5e0c\u5c14\u6392\u5e8f\u53c8\u53eb**\u7f29\u5c0f\u589e\u91cf\u6392\u5e8f**\u3002 4.1 \u7b97\u6cd5\u63cf\u8ff0 \u901a\u8fc7\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u5bf9\u95f4\u9694d\u7684\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\u3002 \u901a\u8fc7\u4e0d\u65ad\u8f83\u5c11d\uff0c\u6700\u540ed=1\uff0c\u4f7f\u5f97\u6574\u4e2a\u6570\u7ec4\u662f\u6709\u5e8f\u7684\u3002 4.2 \u6f14\u793a 4.3 \u4ee3\u7801\u5b9e\u73b0 // shellSort func shellSort ( slice [] int ) [] int { for d := int ( len ( slice ) / 2 ); d > 0 ; d /= 2 { for i := d ; i < len ( slice ); i ++ { for j := i ; j >= d && slice [ j - d ] > slice [ j ]; j -= d { slice [ j ], slice [ j - d ] = slice [ j - d ], slice [ j ] fmt . Println ( slice ) } } } return slice } // INPUT:[8, 3, 4, 5, 6, 7, 8, 9] // [6 3 4 5 8 7 8 9] d == 4 // [4 3 6 5 8 7 8 9] d == 2 // [3 4 6 5 8 7 8 9] d == 1 // [3 4 5 6 8 7 8 9] d == 1 // [3 4 5 6 7 8 8 9] d == 1 4.4 \u7b97\u6cd5\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6 O(dM*N) O(dM*N) \uff0cM\u8868\u793a\u5df2\u7ecf\u6392\u5e8f\u4e86\u7684\u957f\u5ea6\uff0cd\u8868\u793a\u95f4\u9694\uff0c N\u8868\u793a\u82e5\u5e72\u500d\u4e58\u9012\u589e\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u4e3a\u4e0d\u7a33\u5b9a\u6392\u5e8f\u3002 5\u5f52\u5e76\u6392\u5e8f \u5f52\u5e76\u6392\u5e8f\u662f\u5efa\u7acb\u5728\u5f52\u5e76\u64cd\u4f5c\u4e0a\u7684\u4e00\u79cd\u6709\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u662f\u91c7\u7528\u5206\u6cbb\u6cd5\uff08Divide and Conquer\uff09\u7684\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u5e94\u7528\u3002 \u53ef\u53c2\u8003\u4e00\u5230\u7ecf\u5178\u9898\u76ee\uff0c \u5251\u6307offer51 5.1 \u7b97\u6cd5\u63cf\u8ff0 \u628a\u957f\u5ea6\u4e3an\u7684\u8f93\u5165\u5e8f\u5217\u5206\u6210\u4e24\u4e2a\u957f\u5ea6\u4e3an/2\u7684\u5b50\u5e8f\u5217\uff1b \u5bf9\u8fd9\u4e24\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u91c7\u7528\u5f52\u5e76\u6392\u5e8f\uff1b \u5c06\u4e24\u4e2a\u6392\u5e8f\u597d\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u6210\u4e00\u4e2a\u6700\u7ec8\u7684\u6392\u5e8f\u5e8f\u5217\u3002 5.2 \u6f14\u793a 5.3 \u4ee3\u7801\u5b9e\u73b0 // mergeSort func mergeSort ( nums [] int , start , end int ) [] int { if start >= end { return } mid := start + ( end - start ) / 2 mergeSort ( nums , start , mid ) mergeSort ( nums , mid + 1 , end ) i , j := start , mid + 1 tmp := [] int {} for i <= mid && j <= end { if nums [ i ] > nums [ j ] { tmp = append ( tmp , nums [ j ]) j ++ } else { tmp = append ( tmp , nums [ i ]) i ++ } } for ; i <= mid ; i ++ { tmp = append ( tmp , nums [ i ]) } for ; j <= end ; j ++ { tmp = append ( tmp , nums [ j ]) } for i := start ; i <= end ; i ++ { nums [ i ] = tmp [ i - start ] } } 5.4 \u7b97\u6cd5\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N \\log N) O(N \\log N) 6\u5feb\u901f\u6392\u5e8f \u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\uff1a\u901a\u8fc7\u4e00\u8d9f\u6392\u5e8f\u5c06\u5f85\u6392\u8bb0\u5f55\u5206\u9694\u6210\u72ec\u7acb\u7684\u4e24\u90e8\u5206\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u8bb0\u5f55\u7684\u5173\u952e\u5b57\u5747\u6bd4\u53e6\u4e00\u90e8\u5206\u7684\u5173\u952e\u5b57\u5c0f\uff0c\u5219\u53ef\u5206\u522b\u5bf9\u8fd9\u4e24\u90e8\u5206\u8bb0\u5f55\u7ee7\u7eed\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u8fbe\u5230\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002 6.1 \u7b97\u6cd5\u63cf\u8ff0 \u5feb\u901f\u6392\u5e8f\u4f7f\u7528\u5206\u6cbb\u6cd5\u6765\u628a\u4e00\u4e2a\u4e32\uff08list\uff09\u5206\u4e3a\u4e24\u4e2a\u5b50\u4e32\uff08sub-lists\uff09\u3002\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a \u4ece\u6570\u5217\u4e2d\u6311\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u79f0\u4e3a \u201c\u57fa\u51c6\u201d\uff08pivot\uff09\uff1b \u91cd\u65b0\u6392\u5e8f\u6570\u5217\uff0c\u6240\u6709\u5143\u7d20\u6bd4\u57fa\u51c6\u503c\u5c0f\u7684\u6446\u653e\u5728\u57fa\u51c6\u524d\u9762\uff0c\u6240\u6709\u5143\u7d20\u6bd4\u57fa\u51c6\u503c\u5927\u7684\u6446\u5728\u57fa\u51c6\u7684\u540e\u9762\uff08\u76f8\u540c\u7684\u6570\u53ef\u4ee5\u5230\u4efb\u4e00\u8fb9\uff09\u3002\u5728\u8fd9\u4e2a\u5206\u533a\u9000\u51fa\u4e4b\u540e\uff0c\u8be5\u57fa\u51c6\u5c31\u5904\u4e8e\u6570\u5217\u7684\u4e2d\u95f4\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u79f0\u4e3a\u5206\u533a\uff08partition\uff09\u64cd\u4f5c\uff1b \u9012\u5f52\u5730\uff08recursive\uff09\u628a\u5c0f\u4e8e\u57fa\u51c6\u503c\u5143\u7d20\u7684\u5b50\u6570\u5217\u548c\u5927\u4e8e\u57fa\u51c6\u503c\u5143\u7d20\u7684\u5b50\u6570\u5217\u6392\u5e8f\u3002 6.2 \u6f14\u793a 6.3 \u4ee3\u7801\u5b9e\u73b0 func quickSort ( slice [] int , start , end int ) { if start < end { i , j := start , end pivot := slice [ start + ( end - start ) / 2 ] for i <= j { for slice [ i ] < pivot { i ++ } for slice [ j ] > pivot { j -- } if i <= j { slice [ i ], slice [ j ] = slice [ j ], slice [ i ] i ++ j -- } } if start < j { quickSort ( slice , start , j ) } if end > i { quickSort ( slice , i , end ) } } } 6.4 \u7b97\u6cd5\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a n \\log n n \\log n \uff0c\u539f\u5730\u6392\u5e8f,\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^{2}) O(n^{2}) 7\u5806\u6392\u5e8f \u5806\u6392\u5e8f\uff08Heapsort\uff09\u662f\u6307\u5229\u7528\u5806\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u6240\u8bbe\u8ba1\u7684\u4e00\u79cd\u6392\u5e8f\u7b97\u6cd5\u3002\u5806\u79ef\u662f\u4e00\u4e2a\u8fd1\u4f3c\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\uff0c\u5e76\u540c\u65f6\u6ee1\u8db3\u5806\u79ef\u7684\u6027\u8d28\uff1a\u5373\u5b50\u7ed3\u70b9\u7684\u952e\u503c\u6216\u7d22\u5f15\u603b\u662f\u5c0f\u4e8e\uff08\u6216\u8005\u5927\u4e8e\uff09\u5b83\u7684\u7236\u8282\u70b9\u3002 7.1 \u7b97\u6cd5\u63cf\u8ff0 \u5c06\u521d\u59cb\u5f85\u6392\u5e8f\u5173\u952e\u5b57\u5e8f\u5217(R1,R2\u2026.Rn)\u6784\u5efa\u6210\u5927\u9876\u5806\uff0c\u6b64\u5806\u4e3a\u521d\u59cb\u7684\u65e0\u5e8f\u533a\uff1b \u5c06\u5806\u9876\u5143\u7d20R[1]\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20R[n]\u4ea4\u6362\uff0c\u6b64\u65f6\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a(R1,R2,\u2026\u2026Rn-1)\u548c\u65b0\u7684\u6709\u5e8f\u533a(Rn),\u4e14\u6ee1\u8db3R[1,2\u2026n-1]<=R[n]\uff1b \u7531\u4e8e\u4ea4\u6362\u540e\u65b0\u7684\u5806\u9876R[1]\u53ef\u80fd\u8fdd\u53cd\u5806\u7684\u6027\u8d28\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u5f53\u524d\u65e0\u5e8f\u533a(R1,R2,\u2026\u2026Rn-1)\u8c03\u6574\u4e3a\u65b0\u5806\uff0c\u7136\u540e\u518d\u6b21\u5c06R[1]\u4e0e\u65e0\u5e8f\u533a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a(R1,R2\u2026.Rn-2)\u548c\u65b0\u7684\u6709\u5e8f\u533a(Rn-1,Rn)\u3002\u4e0d\u65ad\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u5230\u6709\u5e8f\u533a\u7684\u5143\u7d20\u4e2a\u6570\u4e3an-1\uff0c\u5219\u6574\u4e2a\u6392\u5e8f\u8fc7\u7a0b\u5b8c\u6210\u3002 7.2 \u6f14\u793a","title":"\u6392\u5e8f"},{"location":"algo/sort/sort/#_1","text":"\u672c\u6587\u4ee3\u7801\u5b9e\u73b0\u4f7f\u7528golang","title":"\u6392\u5e8f\u7b97\u6cd5"},{"location":"algo/sort/sort/#0","text":"","title":"0\u6982\u8ff0"},{"location":"algo/sort/sort/#01","text":"\u5341\u79cd\u7b97\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a \u6bd4\u8f83\u6392\u5e8f\uff1a\u901a\u8fc7\u6bd4\u8f83\u5143\u7d20\u7684\u76f8\u5bf9\u6b21\u5e8f\uff0c\u7531\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u80fd\u7a81\u7834 O(nlogn) O(nlogn) \uff0c\u4e5f\u88ab\u53eb\u505a\u975e\u7ebf\u6027\u65f6\u95f4\u6bd4\u8f83\u6392\u5e8f \u975e\u6bd4\u8f83\u6392\u5e8f\uff1a\u4e0d\u901a\u8fc7\u6bd4\u8f83\u6765\u89c9\u5143\u7d20\u95f4\u7684\u76f8\u5bf9\u6b21\u5e8f","title":"0.1 \u5206\u7c7b"},{"location":"algo/sort/sort/#02","text":"","title":"0.2 \u7b97\u6cd5\u590d\u6742\u5ea6"},{"location":"algo/sort/sort/#03","text":"\u7a33\u5b9a \uff1aa\u672c\u6765\u5728b\u524d\u9762\uff0c\u6392\u5e8f\u5b8c\u6210\u540e\uff0ca\u548cb\u7684\u4f4d\u7f6e\u6ca1\u6709\u53d1\u751f\u53d8\u5316 \u4e0d\u7a33\u5b9a \uff1aa\u672c\u6765\u5728b\u524d\u9762\uff0ca=b\uff0c\u6392\u5e8f\u4e4b\u540e\uff0ca\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728b\u7684\u540e\u9762 \u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6","title":"0.3 \u76f8\u5173\u6982\u5ff5"},{"location":"algo/sort/sort/#1","text":"\u7a33\u5b9a\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N^{2}) O(N^{2}) \uff0c\u6700\u597d\u7684\u60c5\u51b5\u4e0b\u5df2\u7ecf\u662f\u6392\u597d\u5e8f\u7684\uff0c\u4e3a O(N) O(N)","title":"1\u5192\u6ce1\u6392\u5e8f"},{"location":"algo/sort/sort/#11","text":"\u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u6bd4\u7b2c\u4e8c\u4e2a\u5927\uff0c\u5c31\u4ea4\u6362\u5b83\u4eec\u4e24\u4e2a\uff1b \u5bf9\u6bcf\u4e00\u5bf9\u76f8\u90bb\u5143\u7d20\u4f5c\u540c\u6837\u7684\u5de5\u4f5c\uff0c\u4ece\u5f00\u59cb\u7b2c\u4e00\u5bf9\u5230\u7ed3\u5c3e\u7684\u6700\u540e\u4e00\u5bf9\uff0c\u8fd9\u6837\u5728\u6700\u540e\u7684\u5143\u7d20\u5e94\u8be5\u4f1a\u662f\u6700\u5927\u7684\u6570\uff1b \u9488\u5bf9\u6240\u6709\u7684\u5143\u7d20\u91cd\u590d\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2a\uff1b \u91cd\u590d\u6b65\u9aa41~3\uff0c\u76f4\u5230\u6392\u5e8f\u5b8c\u6210\u3002","title":"1.1 \u7b97\u6cd5\u63cf\u8ff0"},{"location":"algo/sort/sort/#12","text":"","title":"1.2 \u6f14\u793a"},{"location":"algo/sort/sort/#13","text":"// bubbleSort func bubbleSort ( slice [] int ) [] int { swap := true for swap { swap = false for i := 0 ; i < len ( slice ) - 1 ; i ++ { if slice [ i ] > slice [ i + 1 ] { slice [ i + 1 ], slice [ i ] = slice [ i ], slice [ i + 1 ] swap = true } } } return slice }","title":"1.3 \u4ee3\u7801\u5b9e\u73b0"},{"location":"algo/sort/sort/#2","text":"\u9009\u62e9\u6392\u5e8f(Selection-sort)\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u9996\u5148\u5728\u672a\u6392\u5e8f\u5e8f\u5217\u4e2d\u627e\u5230\u6700\u5c0f\uff08\u5927\uff09\u5143\u7d20\uff0c\u5b58\u653e\u5230\u6392\u5e8f\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7136\u540e\uff0c\u518d\u4ece\u5269\u4f59\u672a\u6392\u5e8f\u5143\u7d20\u4e2d\u7ee7\u7eed\u5bfb\u627e\u6700\u5c0f\uff08\u5927\uff09\u5143\u7d20\uff0c\u7136\u540e\u653e\u5230\u5df2\u6392\u5e8f\u5e8f\u5217\u7684\u672b\u5c3e\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u5747\u6392\u5e8f\u5b8c\u6bd5\u3002","title":"2\u9009\u62e9\u6392\u5e8f"},{"location":"algo/sort/sort/#21","text":"n\u4e2a\u8bb0\u5f55\u7684\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u53ef\u7ecf\u8fc7n-1\u8d9f\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u5f97\u5230\u6709\u5e8f\u7ed3\u679c\u3002\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a \u521d\u59cb\u72b6\u6001\uff1a\u65e0\u5e8f\u533a\u4e3aR[1..n]\uff0c\u6709\u5e8f\u533a\u4e3a\u7a7a\uff1b \u7b2ci\u8d9f\u6392\u5e8f(i=1,2,3\u2026n-1)\u5f00\u59cb\u65f6\uff0c\u5f53\u524d\u6709\u5e8f\u533a\u548c\u65e0\u5e8f\u533a\u5206\u522b\u4e3aR[1..i-1]\u548cR(i..n\uff09\u3002\u8be5\u8d9f\u6392\u5e8f\u4ece\u5f53\u524d\u65e0\u5e8f\u533a\u4e2d-\u9009\u51fa\u5173\u952e\u5b57\u6700\u5c0f\u7684\u8bb0\u5f55 R[k]\uff0c\u5c06\u5b83\u4e0e\u65e0\u5e8f\u533a\u7684\u7b2c1\u4e2a\u8bb0\u5f55R\u4ea4\u6362\uff0c\u4f7fR[1..i]\u548cR[i+1..n)\u5206\u522b\u53d8\u4e3a\u8bb0\u5f55\u4e2a\u6570\u589e\u52a01\u4e2a\u7684\u65b0\u6709\u5e8f\u533a\u548c\u8bb0\u5f55\u4e2a\u6570\u51cf\u5c111\u4e2a\u7684\u65b0\u65e0\u5e8f\u533a\uff1b n-1\u8d9f\u7ed3\u675f\uff0c\u6570\u7ec4\u6709\u5e8f\u5316\u4e86\u3002","title":"2.1 \u7b97\u6cd5\u63cf\u8ff0"},{"location":"algo/sort/sort/#22","text":"","title":"2.2 \u6f14\u793a"},{"location":"algo/sort/sort/#23","text":"// selectionSort func selectionSort ( slice [] int ) [] int { for i := 0 ; i < len ( slice ); i ++ { min := i for j := i + 1 ; j < len ( slice ); j ++ { if slice [ j ] < slice [ min ] { min = j } } slice [ i ], slice [ min ] = slice [ min ], slice [ i ] } return slice }","title":"2.3 \u4ee3\u7801\u5b9e\u73b0"},{"location":"algo/sort/sort/#24","text":"\u65e0\u8bba\u4ec0\u4e48\u6570\u636e\u8fdb\u53bb\u90fd\u662f O(N^{2}) O(N^{2}) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002","title":"2.4 \u7b97\u6cd5\u5206\u6790"},{"location":"algo/sort/sort/#3","text":"\u63d2\u5165\u6392\u5e8f\uff08Insertion-Sort\uff09\u7684\u7b97\u6cd5\u63cf\u8ff0\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u901a\u8fc7\u6784\u5efa\u6709\u5e8f\u5e8f\u5217\uff0c\u5bf9\u4e8e\u672a\u6392\u5e8f\u6570\u636e\uff0c\u5728\u5df2\u6392\u5e8f\u5e8f\u5217\u4e2d\u4ece\u540e\u5411\u524d\u626b\u63cf\uff0c\u627e\u5230\u76f8\u5e94\u4f4d\u7f6e\u5e76\u63d2\u5165\u3002","title":"3\u63d2\u5165\u6392\u5e8f"},{"location":"algo/sort/sort/#31","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u63d2\u5165\u6392\u5e8f\u90fd\u91c7\u7528in-place\u5728\u6570\u7ec4\u4e0a\u5b9e\u73b0\u3002\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a \u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u8be5\u5143\u7d20\u53ef\u4ee5\u8ba4\u4e3a\u5df2\u7ecf\u88ab\u6392\u5e8f\uff1b \u53d6\u51fa\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u5df2\u7ecf\u6392\u5e8f\u7684\u5143\u7d20\u5e8f\u5217\u4e2d\u4ece\u540e\u5411\u524d\u626b\u63cf\uff1b \u5982\u679c\u8be5\u5143\u7d20\uff08\u5df2\u6392\u5e8f\uff09\u5927\u4e8e\u65b0\u5143\u7d20\uff0c\u5c06\u8be5\u5143\u7d20\u79fb\u5230\u4e0b\u4e00\u4f4d\u7f6e\uff1b \u91cd\u590d\u6b65\u9aa43\uff0c\u76f4\u5230\u627e\u5230\u5df2\u6392\u5e8f\u7684\u5143\u7d20\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u65b0\u5143\u7d20\u7684\u4f4d\u7f6e\uff1b \u5c06\u65b0\u5143\u7d20\u63d2\u5165\u5230\u8be5\u4f4d\u7f6e\u540e\uff1b \u91cd\u590d\u6b65\u9aa42~5\u3002","title":"3.1 \u7b97\u6cd5\u63cf\u8ff0"},{"location":"algo/sort/sort/#32","text":"","title":"3.2 \u6f14\u793a"},{"location":"algo/sort/sort/#33","text":"// insertionSort func insertionSort ( slice [] int ) [] int { for currentIndex := 1 ; currentIndex < len ( slice ); currentIndex ++ { iterator := currentIndex tmp := slice [ currentIndex ] for ; iterator > 0 && slice [ iterator - 1 ] > tmp ; iterator -- { slice [ iterator ] = slice [ iterator - 1 ] } slice [ iterator ] = tmp } return slice }","title":"3.3 \u4ee3\u7801\u5b9e\u73b0"},{"location":"algo/sort/sort/#34","text":"\u539f\u5730\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u6570\u7ec4\u7684\u72b6\u6001\uff0c\u5982\u679c\u662f\u5df2\u7ecf\u6709\u5e8f\u7684\u6570\u7ec4\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N) O(N) \uff0c\u4e00\u822c\u60c5\u51b5\u90fd\u662f O(N^{2}) O(N^{2}) \u65f6\u95f4\u590d\u6742\u5ea6\u3002","title":"3.4 \u7b97\u6cd5\u5206\u6790"},{"location":"algo/sort/sort/#4","text":"1959\u5e74Shell\u53d1\u660e\uff0c\u7b2c\u4e00\u4e2a\u7a81\u7834 O(N^{2}) O(N^{2}) \u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u662f\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u7684\u6539\u8fdb\u7248\uff0c\uff08\u5206\u7ec4\u63d2\u5165\u6392\u5e8f\uff09\u3002\u5b83\u4e0e\u63d2\u5165\u6392\u5e8f\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u4f1a\u4f18\u5148\u6bd4\u8f83\u8ddd\u79bb\u8f83\u8fdc\u7684\u5143\u7d20\u3002\u5e0c\u5c14\u6392\u5e8f\u53c8\u53eb**\u7f29\u5c0f\u589e\u91cf\u6392\u5e8f**\u3002","title":"4\u5e0c\u5c14\u6392\u5e8f"},{"location":"algo/sort/sort/#41","text":"\u901a\u8fc7\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u5bf9\u95f4\u9694d\u7684\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\u3002 \u901a\u8fc7\u4e0d\u65ad\u8f83\u5c11d\uff0c\u6700\u540ed=1\uff0c\u4f7f\u5f97\u6574\u4e2a\u6570\u7ec4\u662f\u6709\u5e8f\u7684\u3002","title":"4.1 \u7b97\u6cd5\u63cf\u8ff0"},{"location":"algo/sort/sort/#42","text":"","title":"4.2 \u6f14\u793a"},{"location":"algo/sort/sort/#43","text":"// shellSort func shellSort ( slice [] int ) [] int { for d := int ( len ( slice ) / 2 ); d > 0 ; d /= 2 { for i := d ; i < len ( slice ); i ++ { for j := i ; j >= d && slice [ j - d ] > slice [ j ]; j -= d { slice [ j ], slice [ j - d ] = slice [ j - d ], slice [ j ] fmt . Println ( slice ) } } } return slice } // INPUT:[8, 3, 4, 5, 6, 7, 8, 9] // [6 3 4 5 8 7 8 9] d == 4 // [4 3 6 5 8 7 8 9] d == 2 // [3 4 6 5 8 7 8 9] d == 1 // [3 4 5 6 8 7 8 9] d == 1 // [3 4 5 6 7 8 8 9] d == 1","title":"4.3 \u4ee3\u7801\u5b9e\u73b0"},{"location":"algo/sort/sort/#44","text":"\u65f6\u95f4\u590d\u6742\u5ea6 O(dM*N) O(dM*N) \uff0cM\u8868\u793a\u5df2\u7ecf\u6392\u5e8f\u4e86\u7684\u957f\u5ea6\uff0cd\u8868\u793a\u95f4\u9694\uff0c N\u8868\u793a\u82e5\u5e72\u500d\u4e58\u9012\u589e\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u4e3a\u4e0d\u7a33\u5b9a\u6392\u5e8f\u3002","title":"4.4 \u7b97\u6cd5\u5206\u6790"},{"location":"algo/sort/sort/#5","text":"\u5f52\u5e76\u6392\u5e8f\u662f\u5efa\u7acb\u5728\u5f52\u5e76\u64cd\u4f5c\u4e0a\u7684\u4e00\u79cd\u6709\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u662f\u91c7\u7528\u5206\u6cbb\u6cd5\uff08Divide and Conquer\uff09\u7684\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u5e94\u7528\u3002 \u53ef\u53c2\u8003\u4e00\u5230\u7ecf\u5178\u9898\u76ee\uff0c \u5251\u6307offer51","title":"5\u5f52\u5e76\u6392\u5e8f"},{"location":"algo/sort/sort/#51","text":"\u628a\u957f\u5ea6\u4e3an\u7684\u8f93\u5165\u5e8f\u5217\u5206\u6210\u4e24\u4e2a\u957f\u5ea6\u4e3an/2\u7684\u5b50\u5e8f\u5217\uff1b \u5bf9\u8fd9\u4e24\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u91c7\u7528\u5f52\u5e76\u6392\u5e8f\uff1b \u5c06\u4e24\u4e2a\u6392\u5e8f\u597d\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u6210\u4e00\u4e2a\u6700\u7ec8\u7684\u6392\u5e8f\u5e8f\u5217\u3002","title":"5.1 \u7b97\u6cd5\u63cf\u8ff0"},{"location":"algo/sort/sort/#52","text":"","title":"5.2 \u6f14\u793a"},{"location":"algo/sort/sort/#53","text":"// mergeSort func mergeSort ( nums [] int , start , end int ) [] int { if start >= end { return } mid := start + ( end - start ) / 2 mergeSort ( nums , start , mid ) mergeSort ( nums , mid + 1 , end ) i , j := start , mid + 1 tmp := [] int {} for i <= mid && j <= end { if nums [ i ] > nums [ j ] { tmp = append ( tmp , nums [ j ]) j ++ } else { tmp = append ( tmp , nums [ i ]) i ++ } } for ; i <= mid ; i ++ { tmp = append ( tmp , nums [ i ]) } for ; j <= end ; j ++ { tmp = append ( tmp , nums [ j ]) } for i := start ; i <= end ; i ++ { nums [ i ] = tmp [ i - start ] } }","title":"5.3 \u4ee3\u7801\u5b9e\u73b0"},{"location":"algo/sort/sort/#54","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N \\log N) O(N \\log N)","title":"5.4 \u7b97\u6cd5\u5206\u6790"},{"location":"algo/sort/sort/#6","text":"\u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\uff1a\u901a\u8fc7\u4e00\u8d9f\u6392\u5e8f\u5c06\u5f85\u6392\u8bb0\u5f55\u5206\u9694\u6210\u72ec\u7acb\u7684\u4e24\u90e8\u5206\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u8bb0\u5f55\u7684\u5173\u952e\u5b57\u5747\u6bd4\u53e6\u4e00\u90e8\u5206\u7684\u5173\u952e\u5b57\u5c0f\uff0c\u5219\u53ef\u5206\u522b\u5bf9\u8fd9\u4e24\u90e8\u5206\u8bb0\u5f55\u7ee7\u7eed\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u8fbe\u5230\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\u3002","title":"6\u5feb\u901f\u6392\u5e8f"},{"location":"algo/sort/sort/#61","text":"\u5feb\u901f\u6392\u5e8f\u4f7f\u7528\u5206\u6cbb\u6cd5\u6765\u628a\u4e00\u4e2a\u4e32\uff08list\uff09\u5206\u4e3a\u4e24\u4e2a\u5b50\u4e32\uff08sub-lists\uff09\u3002\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a \u4ece\u6570\u5217\u4e2d\u6311\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u79f0\u4e3a \u201c\u57fa\u51c6\u201d\uff08pivot\uff09\uff1b \u91cd\u65b0\u6392\u5e8f\u6570\u5217\uff0c\u6240\u6709\u5143\u7d20\u6bd4\u57fa\u51c6\u503c\u5c0f\u7684\u6446\u653e\u5728\u57fa\u51c6\u524d\u9762\uff0c\u6240\u6709\u5143\u7d20\u6bd4\u57fa\u51c6\u503c\u5927\u7684\u6446\u5728\u57fa\u51c6\u7684\u540e\u9762\uff08\u76f8\u540c\u7684\u6570\u53ef\u4ee5\u5230\u4efb\u4e00\u8fb9\uff09\u3002\u5728\u8fd9\u4e2a\u5206\u533a\u9000\u51fa\u4e4b\u540e\uff0c\u8be5\u57fa\u51c6\u5c31\u5904\u4e8e\u6570\u5217\u7684\u4e2d\u95f4\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u79f0\u4e3a\u5206\u533a\uff08partition\uff09\u64cd\u4f5c\uff1b \u9012\u5f52\u5730\uff08recursive\uff09\u628a\u5c0f\u4e8e\u57fa\u51c6\u503c\u5143\u7d20\u7684\u5b50\u6570\u5217\u548c\u5927\u4e8e\u57fa\u51c6\u503c\u5143\u7d20\u7684\u5b50\u6570\u5217\u6392\u5e8f\u3002","title":"6.1 \u7b97\u6cd5\u63cf\u8ff0"},{"location":"algo/sort/sort/#62","text":"","title":"6.2 \u6f14\u793a"},{"location":"algo/sort/sort/#63","text":"func quickSort ( slice [] int , start , end int ) { if start < end { i , j := start , end pivot := slice [ start + ( end - start ) / 2 ] for i <= j { for slice [ i ] < pivot { i ++ } for slice [ j ] > pivot { j -- } if i <= j { slice [ i ], slice [ j ] = slice [ j ], slice [ i ] i ++ j -- } } if start < j { quickSort ( slice , start , j ) } if end > i { quickSort ( slice , i , end ) } } }","title":"6.3 \u4ee3\u7801\u5b9e\u73b0"},{"location":"algo/sort/sort/#64","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a n \\log n n \\log n \uff0c\u539f\u5730\u6392\u5e8f,\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^{2}) O(n^{2})","title":"6.4 \u7b97\u6cd5\u5206\u6790"},{"location":"algo/sort/sort/#7","text":"\u5806\u6392\u5e8f\uff08Heapsort\uff09\u662f\u6307\u5229\u7528\u5806\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u6240\u8bbe\u8ba1\u7684\u4e00\u79cd\u6392\u5e8f\u7b97\u6cd5\u3002\u5806\u79ef\u662f\u4e00\u4e2a\u8fd1\u4f3c\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\uff0c\u5e76\u540c\u65f6\u6ee1\u8db3\u5806\u79ef\u7684\u6027\u8d28\uff1a\u5373\u5b50\u7ed3\u70b9\u7684\u952e\u503c\u6216\u7d22\u5f15\u603b\u662f\u5c0f\u4e8e\uff08\u6216\u8005\u5927\u4e8e\uff09\u5b83\u7684\u7236\u8282\u70b9\u3002","title":"7\u5806\u6392\u5e8f"},{"location":"algo/sort/sort/#71","text":"\u5c06\u521d\u59cb\u5f85\u6392\u5e8f\u5173\u952e\u5b57\u5e8f\u5217(R1,R2\u2026.Rn)\u6784\u5efa\u6210\u5927\u9876\u5806\uff0c\u6b64\u5806\u4e3a\u521d\u59cb\u7684\u65e0\u5e8f\u533a\uff1b \u5c06\u5806\u9876\u5143\u7d20R[1]\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20R[n]\u4ea4\u6362\uff0c\u6b64\u65f6\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a(R1,R2,\u2026\u2026Rn-1)\u548c\u65b0\u7684\u6709\u5e8f\u533a(Rn),\u4e14\u6ee1\u8db3R[1,2\u2026n-1]<=R[n]\uff1b \u7531\u4e8e\u4ea4\u6362\u540e\u65b0\u7684\u5806\u9876R[1]\u53ef\u80fd\u8fdd\u53cd\u5806\u7684\u6027\u8d28\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u5f53\u524d\u65e0\u5e8f\u533a(R1,R2,\u2026\u2026Rn-1)\u8c03\u6574\u4e3a\u65b0\u5806\uff0c\u7136\u540e\u518d\u6b21\u5c06R[1]\u4e0e\u65e0\u5e8f\u533a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u5f97\u5230\u65b0\u7684\u65e0\u5e8f\u533a(R1,R2\u2026.Rn-2)\u548c\u65b0\u7684\u6709\u5e8f\u533a(Rn-1,Rn)\u3002\u4e0d\u65ad\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u5230\u6709\u5e8f\u533a\u7684\u5143\u7d20\u4e2a\u6570\u4e3an-1\uff0c\u5219\u6574\u4e2a\u6392\u5e8f\u8fc7\u7a0b\u5b8c\u6210\u3002","title":"7.1 \u7b97\u6cd5\u63cf\u8ff0"},{"location":"algo/sort/sort/#72","text":"","title":"7.2 \u6f14\u793a"},{"location":"algo/sort/sort/#_2","text":"","title":""},{"location":"cs/distributed/alo/","text":"Paxos\u3001Zab\u548cRaft \u8fd9\u4e09\u8005\u90fd\u662f\u5f3a\u4e00\u81f4\u6027\uff0c\u800cGossip\u7b49\u534f\u8bae\u662f\u5f31\u4e00\u81f4\u6027\u3002 Paxos \u662f\u9996\u4e2a\u5f97\u5230\u8bc1\u660e\u5e76\u88ab\u5e7f\u6cdb\u5e94\u7528\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u539f\u7406\u7c7b\u4f3c \u4e24\u9636\u6bb5\u63d0\u4ea4 \u7b97\u6cd5\uff0c\u8fdb\u884c\u4e86\u6cdb\u5316\u548c\u6269\u5c55\uff0c\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u6765\u9010\u6b65\u6d88\u9664\u7cfb\u7edf\u4e2d\u7684\u4e0d\u786e\u5b9a\u72b6\u6001\u3002\u4f5c\u4e3a\u540e\u6765\u5f88\u591a\u5171\u8bc6\u7b97\u6cd5\uff08\u5982 Raft\u3001ZAB \u7b49\uff09\u7684\u57fa\u7840\uff0c\u53d8\u5f97\u66f4\u52a0\u7b80\u7ec3\u548c\u53ef\u5b9e\u73b0\uff0c\u4ece\u800c\u5e94\u7528\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u3002 Paxos Paxos \u95ee\u9898\u662f\u6307\u5206\u5e03\u5f0f\u7684\u7cfb\u7edf\u4e2d\u5b58\u5728\u6545\u969c\uff08crash fault\uff09\uff0c\u4f46\u4e0d\u5b58\u5728\u6076\u610f\uff08corrupt\uff09\u6d88\u606f\u8282\u70b9\u7684\u573a\u666f\uff08\u5373\u53ef\u80fd\u6d88\u606f\u4e22\u5931\u6216\u91cd\u590d\uff0c\u4f46\u65e0\u9519\u8bef\u6d88\u606f\uff09\u4e0b\u7684\u5171\u8bc6\u8fbe\u6210\u95ee\u9898\u3002\u8fd9\u4e5f\u662f\u5206\u5e03\u5f0f\u5171\u8bc6\u9886\u57df\u6700\u4e3a\u5e38\u89c1\u7684\u95ee\u9898\u3002 1990 \u5e74\u7531 Leslie Lamport \u5728\u8bba\u6587\u300aThe Part-time Parliament\u300b\u4e2d\u63d0\u51fa\u7684 Paxos \u5171\u8bc6\u7b97\u6cd5\uff0c\u5728\u5de5\u7a0b\u89d2\u5ea6\u5b9e\u73b0\u4e86\u4e00\u79cd\u6700\u5927\u5316\u4fdd\u969c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e00\u81f4\u6027\uff08\u5b58\u5728\u6781\u5c0f\u7684\u6982\u7387\u65e0\u6cd5\u5b9e\u73b0\u4e00\u81f4\uff09\u7684\u673a\u5236\u3002 \u8bba\u6587\u4e2d\u4e3a\u4e86\u63cf\u8ff0\u95ee\u9898\u7f16\u9020\u4e86\u4e00\u4e2a\u865a\u6784\u6545\u4e8b\uff1a\u5728\u53e4\u4ee3\u7231\u7434\u6d77\u7684 Paxos \u5c9b\uff0c\u8bae\u4f1a\u5982\u4f55\u901a\u8fc7\u8868\u51b3\u6765\u8fbe\u6210\u5171\u8bc6\u3002\u8bae\u5458\u4eec\u901a\u8fc7\u4fe1\u4f7f\u4f20\u9012\u6d88\u606f\u6765\u5bf9\u8bae\u6848\u8fdb\u884c\u8868\u51b3\u3002\u4f46\u8bae\u5458\u53ef\u80fd\u79bb\u5f00\uff0c\u4fe1\u4f7f\u53ef\u80fd\u8d70\u4e22\uff0c\u751a\u81f3\u91cd\u590d\u4f20\u9012\u6d88\u606f\u3002 \u539f\u7406 \u7b97\u6cd5\u4e2d\u5b58\u5728\u4e09\u79cd\u57fa\u672c\u7684\u903b\u8f91\u89d2\u8272\uff0c\u5b9e\u73b0\u4e2d\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u62c5\u4efb\u591a\u4e2a\u89d2\u8272\u3002 \u63d0\u6848\u8005Proposer\uff1a\u63d0\u51fa\u4e00\u4e2a\u63d0\u6848\u7b49\u5f85\u5927\u5bb6\u6279\u51c6\uff0c\u7136\u540e\u7ed3\u6848\u3002\u7cfb\u7edf\u4e2d\u6bcf\u4e00\u4e2a\u63d0\u6848\u90fd\u7528\u4e00\u4e2a\u5b57\u8d60\u5e8f\u53f7\u8fdb\u884c\u6807\u8bc6\u3002\u8fd9\u4e00\u89d2\u8272\u4e00\u822c\u7531\u5ba2\u6237\u7aef\u6765\u62c5\u4efb\u3002 \u63a5\u53d7\u8005Accepter\uff1a\u8d1f\u8d23\u5bf9\u63d0\u6848\u8fdb\u884c\u6295\u7968\uff0c\u63a5\u53d7\u63d0\u6848\u3002\u4e00\u822c\u7531\u670d\u52a1\u7aef\u6765\u62c5\u4efb\u3002 \u5b66\u4e60\u8005Learner\uff1a\u83b7\u5f97\u6279\u51c6\uff0c\u63a5\u53d7\u5b58\u50a8\u8fbe\u6210\u5171\u8bc6\u7684\u503c\uff0c\u5e2e\u5fd9\u4f20\u64ad\uff0c\u4e0d\u53c2\u4e0e\u6295\u7968\u8fc7\u7a0b\u3002\u53ef\u4ee5\u4e3a\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u7aef\u3002 \u7b97\u6cd5\u9700\u8981\u5bf9 \u5b89\u5168\u6027 \u548c \u5b58\u6d3b\u6027 \u8fdb\u884c\u4fdd\u8bc1\u3002 \u5b89\u5168\u6027\uff1a \u51b3\u8bae\u7684\u7ed3\u679c\u662f\u5bf9\u7684\uff0c\u65e0\u6b67\u4e49\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef\u60c5\u51b5\u3002 \u5728\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u4f1a\u5904\u7406\u4e00\u4e2a\u63d0\u6848\uff0c\u53ea\u6279\u51c6\u4e00\u4e2a\u6700\u7ec8\u51b3\u8bae\uff0c\u88ab\u591a\u6570\u63a5\u53d7\u8005\u63a5\u53d7\u7684\u7ed3\u679c\u6210\u4e3a\u51b3\u8bae \u5b58\u6d3b\u6027\uff1a\u4fdd\u8bc1\u51b3\u8bae\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u5b8c\u6210 \u51b3\u8bae\u603b\u662f\u4f1a\u4ea7\u751f\uff0c\u5b66\u4e60\u8005\u4f1a\u83b7\u5f97\u6700\u540e\u6279\u51c6\u7684\u51b3\u8bae \u57fa\u672c\u601d\u8def\u7c7b\u4f3c\u4e24\u9636\u6bb5\u63d0\u4ea4\uff1a\u591a\u4e2a\u63d0\u6848\u8005\u5148\u8981\u4e89\u53d6\u5230\u63d0\u6848\u7684\u6743\u5229\uff08\u5f97\u5230\u5927\u591a\u6570\u63a5\u53d7\u8005\u7684\u652f\u6301\uff09\uff1b\u6210\u529f\u7684\u63d0\u6848\u8005\u53d1\u9001\u63d0\u6848\u7ed9\u6240\u6709\u4eba\u8fdb\u884c\u786e\u8ba4\uff0c\u5f97\u5230\u5927\u90e8\u5206\u4eba\u786e\u8ba4\u7684\u63d0\u6848\u6210\u4e3a\u6279\u51c6\u7684\u7ed3\u6848\u3002 \u5982\u679c\u63d0\u6848\u8005\u6545\u969c\uff0c\u4ece\u96c6\u7fa4\u4e2d\u9009\u51fa\u65b0\u7684\u63d0\u6848\u8005\u5373\u53ef\uff1b\u5982\u679c\u63a5\u53d7\u8005\u6545\u969c\uff0c\u8868\u51b3\u65f6\u80fd\u591f\u8fbe\u6210\u591a\u6570\u6d3e\u4e5f\u6ca1\u6709\u95ee\u9898\u3002 \u6f5c\u5728\u7684\u95ee\u9898 \u662f\u53ef\u80fd\u5f62\u6210 \u6d3b\u9501 \uff0c\u5982\u679c\u591a\u4e2a\u63d0\u6848\u8005\u4e0d\u65ad\u7684\u5411\u63a5\u6536\u8005\u53d1\u9001\u63d0\u6848\uff0c\u8fd8\u6ca1\u6709\u7b49\u5f85\u4e0a\u4e00\u4e2a\u63d0\u6848\u8fbe\u5230\u591a\u6570\u4e0b\u4e00\u4e2a\u63d0\u6848\u53c8\u6765\u4e86\uff0c\u5bfc\u81f4\u63a5\u53d7\u8fd9\u8f6c\u5411\u5904\u7406\u65b0\u7684\u63d0\u6848\uff0c\u6240\u6709\u7684\u90fd\u6ca1\u6709\u529e\u6cd5\u901a\u8fc7\u3002 \u63a2\u8ba8 \u4e00\u4e2a\u63d0\u6848\u8005+\u591a\u4e2a\u63a5\u53d7\u8005 \u5982\u679c\u7cfb\u7edf\u4e2d\u9650\u5b9a\u53ea\u5141\u8bb8\u67d0\u4e2a\u7279\u5b9a\u8282\u70b9\u662f\u63d0\u6848\u8005\uff0c\u90a3\u4e48\u5171\u8bc6\u7ed3\u679c\u5f88\u5bb9\u6613\u80fd\u8fbe\u6210\uff08\u53ea\u6709\u4e00\u4e2a\u65b9\u6848\uff0c\u8981\u4e48\u8fbe\u6210\uff0c\u8981\u4e48\u5931\u8d25\uff09\u3002\u63d0\u6848\u8005\u53ea\u8981\u6536\u5230\u4e86\u6765\u81ea\u591a\u6570\u63a5\u53d7\u8005\u7684\u6295\u7968\uff0c\u5373\u53ef\u8ba4\u4e3a\u901a\u8fc7\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4e2d\u4e0d\u5b58\u5728\u5176\u4ed6\u7684\u63d0\u6848\u3002 \u4f46\u6b64\u65f6 \u4e00\u65e6\u63d0\u6848\u8005\u6545\u969c \uff0c\u5219\u6574\u4e2a\u7cfb\u7edf\u65e0\u6cd5\u5de5\u4f5c\u3002 \u591a\u4e2a\u63d0\u6848\u8005+\u4e00\u4e2a\u63a5\u53d7\u8005 \u9650\u5b9a\u67d0\u4e2a\u7279\u5b9a\u8282\u70b9\u4f5c\u4e3a\u63a5\u53d7\u8005\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5171\u8bc6\u4e5f\u5f88\u5bb9\u6613\u8fbe\u6210\uff0c\u63a5\u53d7\u8005\u6536\u5230\u591a\u4e2a\u63d0\u6848\uff0c\u9009\u7b2c\u4e00\u4e2a\u63d0\u6848\u4f5c\u4e3a\u51b3\u8bae\uff0c\u53d1\u9001\u7ed9\u5176\u5b83\u63d0\u6848\u8005\u5373\u53ef\u3002\u7f3a\u9677\u4e5f\u662f\u5bb9\u6613\u53d1\u751f\u5355\u70b9\u6545\u969c\uff0c\u5305\u62ec\u63a5\u53d7\u8005\u6545\u969c\u6216\u9996\u4e2a\u63d0\u6848\u8005\u8282\u70b9\u6545\u969c\u3002\u4ee5\u4e0a\u4e24\u79cd\u60c5\u5f62\u5176\u5b9e\u7c7b\u4f3c\u4e3b\u4ece\u6a21\u5f0f\uff0c\u867d\u7136\u4e0d\u90a3\u4e48\u53ef\u9760\uff0c\u4f46\u56e0\u4e3a\u539f\u7406\u7b80\u5355\u800c\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002 \u591a\u4e2a\u63d0\u6848\u8005+\u591a\u4e2a\u63a5\u53d7\u8005 \u4e00\u79cd\u60c5\u51b5\u662f \u540c\u4e00\u65f6\u95f4\u7247\u6bb5\uff08\u5982\u4e00\u4e2a\u63d0\u6848\u5468\u671f\uff09\u5185\u53ea\u6709\u4e00\u4e2a\u63d0\u6848\u8005 \uff0c\u8fd9\u65f6\u53ef\u4ee5\u9000\u5316\u5230\u5355\u63d0\u6848\u8005\u7684\u60c5\u5f62\u3002\u9700\u8981\u8bbe\u8ba1\u4e00\u79cd\u673a\u5236\u6765\u4fdd\u969c\u63d0\u6848\u8005\u7684\u6b63\u786e\u4ea7\u751f\uff0c\u4f8b\u5982\u6309\u7167\u65f6\u95f4\u3001\u5e8f\u5217\u4e4b\u7c7b\u3002\u8003\u8651\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u8981\u5904\u7406\u7684\u5de5\u4f5c\u91cf\u5f88\u5927\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u8981\u5c3d\u91cf\u9ad8\u6548\uff0c\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u7684\u673a\u5236\u975e\u5e38\u96be\u8bbe\u8ba1\u3002 \u53e6\u4e00\u79cd\u60c5\u51b5\u662f \u5141\u8bb8\u540c\u4e00\u65f6\u95f4\u7247\u6bb5\u5185\u53ef\u4ee5\u51fa\u73b0\u591a\u4e2a\u63d0\u6848\u8005 \u3002\u90a3\u540c\u4e00\u4e2a\u8282\u70b9\u53ef\u80fd\u6536\u5230\u591a\u4efd\u63d0\u6848\uff0c\u600e\u4e48\u5bf9\u4ed6\u4eec\u8fdb\u884c\u533a\u5206\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u91c7\u7528\u53ea\u63a5\u53d7\u7b2c\u4e00\u4e2a\u63d0\u6848\u800c\u62d2\u7edd\u540e\u7eed\u63d0\u6848\u7684\u65b9\u6cd5\u4e5f\u4e0d\u9002\u7528\u3002\u5f88\u81ea\u7136\u7684\uff0c\u63d0\u6848\u9700\u8981\u5e26\u4e0a\u4e0d\u540c\u7684\u5e8f\u53f7\u3002\u8282\u70b9\u9700\u8981\u6839\u636e\u63d0\u6848\u5e8f\u53f7\u6765\u5224\u65ad\u63a5\u53d7\u54ea\u4e2a\u3002\u6bd4\u5982\u63a5\u53d7\u5176\u4e2d\u5e8f\u53f7\u8f83\u5927\uff08\u5f80\u5f80\u610f\u5473\u7740\u662f\u63a5\u53d7\u65b0\u63d0\u51fa\u7684\uff0c\u56e0\u4e3a\u65e7\u63d0\u6848\u8005\u6545\u969c\u6982\u7387\u66f4\u5927\uff09\u7684\u63d0\u6848\u3002 \u540c\u65f6\u5141\u8bb8\u591a\u4e2a\u63d0\u6848\uff0c\u610f\u5473\u7740\u5f88\u53ef\u80fd\u5355\u4e2a\u63d0\u6848\u4eba\u65e0\u6cd5\u96c6\u9f50\u8db3\u591f\u591a\u7684\u6295\u7968\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u63d0\u6848\u8005\u5373\u4fbf\u6536\u5230\u4e86\u591a\u6570\u63a5\u53d7\u8005\u7684\u6295\u7968\uff0c\u4e5f\u4e0d\u6562\u8bf4\u5c31\u4e00\u5b9a\u901a\u8fc7\u3002\u56e0\u4e3a\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6295\u7968\u8005\u65e0\u6cd5\u83b7\u77e5\u5176\u5b83\u6295\u7968\u4eba\u7684\u7ed3\u679c\uff0c\u4e5f\u65e0\u6cd5\u786e\u8ba4\u63d0\u6848\u4eba\u662f\u5426\u6536\u5230\u4e86\u81ea\u5df1\u7684\u6295\u7968\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5b9e\u73b0\u4e24\u4e2a\u9636\u6bb5\u7684\u63d0\u4ea4\u8fc7\u7a0b\u3002 \u4e24\u9636\u6bb5\u7684\u63d0\u4ea4 \u63d0\u6848\u8005\u53d1\u51fa\u63d0\u6848\u7533\u8bf7\u4e4b\u540e\uff0c\u4f1a\u6536\u5230\u6765\u81ea\u63a5\u53d7\u8005\u7684\u53cd\u9988\u3002\u4e00\u79cd\u7ed3\u679c\u662f\u63d0\u6848\u88ab\u5927\u591a\u6570\u63a5\u53d7\u8005\u63a5\u53d7\u4e86\uff0c\u4e00\u79cd\u7ed3\u679c\u662f\u6ca1\u88ab\u63a5\u53d7\u3002\u6ca1\u88ab\u63a5\u53d7\u7684\u8bdd\uff0c\u53ef\u4ee5\u8fc7\u4f1a\u518d\u91cd\u8bd5\u3002\u5373\u4fbf\u6536\u5230\u6765\u81ea\u5927\u591a\u6570\u63a5\u53d7\u8005\u7684\u7b54\u590d\uff0c\u4e5f\u4e0d\u80fd\u8ba4\u4e3a\u5c31\u6700\u7ec8\u786e\u8ba4\u4e86\u3002\u56e0\u4e3a\u8fd9\u4e9b\u63a5\u53d7\u8005\u81ea\u5df1\u5e76\u4e0d\u77e5\u9053\u81ea\u5df1\u521a\u7b54\u590d\u7684\u63d0\u6848\u53ef\u4ee5\u6784\u6210\u5927\u591a\u6570\u7684\u4e00\u81f4\u610f\u89c1\u3002 \u5f88\u81ea\u7136\u7684\uff0c\u9700\u8981\u5f15\u5165\u65b0\u7684\u4e00\u4e2a\u9636\u6bb5\uff0c\u5373\u63d0\u6848\u8005\u5728\u7b2c\u4e00\u9636\u6bb5\u62ff\u5230\u6240\u6709\u7684\u53cd\u9988\u540e\uff0c\u9700\u8981\u518d\u6b21\u5224\u65ad\u8fd9\u4e2a\u63d0\u6848\u662f\u5426\u5f97\u5230\u5927\u591a\u6570\u7684\u652f\u6301\uff0c\u5982\u679c\u652f\u6301\u5219\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6700\u7ec8\u786e\u8ba4\u3002 Paxos \u91cc\u9762\u5bf9\u8fd9\u4e24\u4e2a\u9636\u6bb5\u5206\u522b\u547d\u540d\u4e3a \u51c6\u5907\uff08Prepare\uff09 \u548c \u63d0\u4ea4\uff08Commit\uff09 \u3002\u51c6\u5907\u9636\u6bb5\u901a\u8fc7\u9501\u6765\u89e3\u51b3\u5bf9\u54ea\u4e2a\u63d0\u6848\u5185\u5bb9\u8fdb\u884c\u786e\u8ba4\u7684\u95ee\u9898\uff0c\u63d0\u4ea4\u9636\u6bb5\u89e3\u51b3\u5927\u591a\u6570\u786e\u8ba4\u6700\u7ec8\u503c\u7684\u95ee\u9898\u3002 \u51c6\u5907\u9636\u6bb5 \uff1a \u63d0\u6848\u8005\u53d1\u9001\u81ea\u5df1\u8ba1\u5212\u63d0\u4ea4\u7684\u63d0\u6848\u7684\u7f16\u53f7\u5230\u591a\u4e2a\u63a5\u53d7\u8005\uff0c\u8bd5\u63a2\u662f\u5426\u53ef\u4ee5\u9501\u5b9a\u591a\u6570\u63a5\u53d7\u8005\u7684\u652f\u6301\u3002 \u63a5\u53d7\u8005\u65f6\u523b\u4fdd\u7559\u6536\u5230\u8fc7\u63d0\u6848\u7684\u6700\u5927\u7f16\u53f7\u548c\u63a5\u53d7\u7684\u6700\u5927\u63d0\u6848\u3002\u5982\u679c\u6536\u5230\u63d0\u6848\u53f7\u6bd4\u76ee\u524d\u4fdd\u7559\u7684\u6700\u5927\u63d0\u6848\u53f7\u8fd8\u5927\uff0c\u5219\u8fd4\u56de\u81ea\u5df1\u5df2\u63a5\u53d7\u7684\u63d0\u6848\u503c\uff08\u5982\u679c\u8fd8\u672a\u63a5\u53d7\u8fc7\u4efb\u4f55\u63d0\u6848\uff0c\u5219\u4e3a\u7a7a\uff09\u7ed9\u63d0\u6848\u8005\uff0c\u66f4\u65b0\u5f53\u524d\u6700\u5927\u63d0\u6848\u53f7\uff0c\u5e76\u8bf4\u660e\u4e0d\u518d\u63a5\u53d7\u5c0f\u4e8e\u6700\u5927\u63d0\u6848\u53f7\u7684\u63d0\u6848\u3002 \u63d0\u4ea4\u9636\u6bb5 \uff1a \u63d0\u6848\u8005\u5982\u679c\u6536\u5230\u5927\u591a\u6570\u7684\u56de\u590d\uff08\u8868\u793a\u5927\u90e8\u5206\u4eba\u542c\u5230\u5b83\u7684\u8bf7\u6c42\uff09\uff0c\u5219\u53ef\u51c6\u5907\u53d1\u51fa\u5e26\u6709\u521a\u624d\u63d0\u6848\u53f7\u7684\u63a5\u53d7\u6d88\u606f\u3002\u5982\u679c\u6536\u5230\u7684\u56de\u590d\u4e2d\u4e0d\u5e26\u6709\u65b0\u7684\u63d0\u6848\uff0c\u8bf4\u660e\u9501\u5b9a\u6210\u529f\u3002\u5219\u4f7f\u7528\u81ea\u5df1\u7684\u63d0\u6848\u5185\u5bb9\uff1b\u5982\u679c\u8fd4\u56de\u4e2d\u6709\u63d0\u6848\u5185\u5bb9\uff0c\u5219\u66ff\u6362\u63d0\u6848\u503c\u4e3a\u8fd4\u56de\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u63d0\u6848\u503c\u3002\u5982\u679c\u6ca1\u6536\u5230\u8db3\u591f\u591a\u7684\u56de\u590d\uff0c\u5219\u9700\u8981\u518d\u6b21\u53d1\u51fa\u8bf7\u6c42\u3002 \u63a5\u53d7\u8005\u6536\u5230\u63a5\u53d7\u6d88\u606f\u540e\uff0c\u5982\u679c\u53d1\u73b0\u63d0\u6848\u53f7\u4e0d\u5c0f\u4e8e\u5df2\u63a5\u53d7\u7684\u6700\u5927\u63d0\u6848\u53f7\uff0c\u5219\u63a5\u53d7\u8be5\u63d0\u6848\uff0c\u5e76\u66f4\u65b0\u63a5\u53d7\u7684\u6700\u5927\u63d0\u6848\u3002 \u4e00\u65e6\u591a\u6570\u63a5\u53d7\u8005\u63a5\u53d7\u4e86\u5171\u540c\u7684\u63d0\u6848\u503c\uff0c\u5219\u5f62\u6210\u51b3\u8bae\uff0c\u6210\u4e3a\u6700\u7ec8\u786e\u8ba4\u3002 Note \u4f46\u662fPaxos\u534f\u8bae\u5e76\u4e0d\u5bb9\u6613\u5b9e\u73b0\uff0czab\u548craft\u5bf9Paxos\u7b97\u6cd5\u8fdb\u884c\u4e86\u7b80\u5316\u548c\u6539\u8fdb\u3002 Multi Paxos \u5bf9\u63a5\u53d7\u8005\u8bbe\u7f6e\u4e3b\u4ece\u8282\u70b9\u3002 Raft \u4e09\u4e2a\u5b50\u95ee\u9898\uff1a 1. \u9886\u5bfc\u8005\u9009\u4e3e\uff1b 2.\u65e5\u5fd7\u590d\u5236\uff1b3.\u5b89\u5168\u4ee5\u53ca\u6062\u590d\u3002 \u91cd\u65b0\u5b9a\u4e49\u4e86\u72b6\u6001\uff0c\u9886\u5bfc\u8005\u3001\u8ddf\u968f\u8005\u4ee5\u53ca\u53c2\u9009\u8005\u3002 raft\u4e2d\u6709\u4e24\u79cd\u8d85\u65f6\u65f6\u95f4\u3002 \u9886\u5bfc\u8005\u9009\u4e3e \u9996\u5148\uff0c\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u88ab\u8bbe\u7f6e\u968f\u673a\u8bbe\u7f6e\u4e00\u4e2a\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4ece150ms-300ms\u3002\u5728\u8d85\u65f6\u65f6\u95f4\u7ed3\u675f\u540e\uff0cfollower\u4f1a\u53d8\u6210\u53c2\u9009\u8005\u72b6\u6001\u3002\u4f1a\u7ed9\u81ea\u5df1\u5148\u6295\u4e00\u7968\uff0c\u7136\u540e\u7ed9\u5176\u4ed6\u8282\u70b9\u53d1\u9001\u6295\u7968\u8bf7\u6c42\u3002\u5176\u4ed6\u8282\u70b9\u7684\u5c06\u4f1a\u91cd\u7f6e\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4 reset election timeout\u3002\u53c2\u9009\u8005\u6536\u5230\u5927\u4e8e\u4e00\u534a\u7684\u9009\u7968\u540e\uff0c\u4f1a\u6210\u4e3a\u4e3b\u8282\u70b9\u3002\u5e76\u5f00\u59cb\u5411\u4ece\u8282\u70b9\u95f4\u9694\u53d1\u9001\u5fc3\u8df3\u5305\uff0c\u95f4\u9694\u65f6\u95f4\u88ab\u79f0\u4e3a heartbeat timeout\u3002\u4ece\u8282\u70b9\u4e5f\u4f1a\u56de\u590d\u4e00\u4e2a\u5fc3\u8df3\u5305\u7ed9leader\u8282\u70b9 \u5982\u679c\uff0c\u662f\u5076\u6570\u8282\u70b9\uff0c\u4e14\u4e24\u4e2a\u8282\u70b9\u7684\u5e73\u7968\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u518d\u6b21\u8fdb\u884c\u6295\u7968\u3002 \u65e5\u5fd7\u590d\u5236 \u5982\u679c\u5199\u5165\u4e86\u4e00\u4e2a\u503c\u5230\u4e3b\u8282\u70b9\u4e0a\uff0c\u4fee\u6539\u503c\u4f1a\u8ddf\u968f\u7740\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5305\u5230\u8fbefollower\u8282\u70b9\u4e0a\uff0c\u5982\u679c\u7edd\u5927\u591a\u6570\u4ece\u8282\u70b9\u56de\u590d\u6536\u5230\u4e86\u8fd9\u4e2a\u4fee\u6539\u503c\u64cd\u4f5c\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76f8\u5e94\u7ed9\u5ba2\u6237\u7aef\uff0c\u540c\u65f6\u5c06\u503c\u4fee\u6539\u63d0\u4ea4\u5230\u4ece\u8282\u70b9\u4e0a\u3002\uff08\u4e24\u9636\u6bb5\u63d0\u4ea4\uff09 \u8111\u88c2\uff1f \u5f53\u7f51\u7edc\u53d1\u751f\u5206\u533a\u540e\uff0c\u4e0d\u540c\u7684\u5206\u533a\u4f1a\u4ea7\u751f\u65b0\u7684leader\uff0c\u8fd9\u65f6\u5019\u4f1a\u51fa\u73b0\u591a\u4e2aleader\u7684\u60c5\u51b5\u3002 \u8fd9\u65f6\u5019\u8fdb\u884c\u53ea\u5199\u5165\uff0c\u5ba2\u6237\u7aef\u53ef\u80fd\u8fde\u63a5\u5230\u4e86\u4e0d\u540c\u7684leader\u4e0a\u53bb\uff0c\u5982\u679c\u53d1\u9001\u5230\u5c11\u6570\u7684AB\u8282\u70b9\u7684\u5206\u533a\u4e0a\u53bb\uff0c\u7531\u4e8e\u8fd4\u56de\u7684\u7968\u6570\u5c11\u4e8e\u8282\u70b9\u503c\u7684\u4e00\u822c\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8fdb\u884c\u7b2c\u4e8c\u9636\u6bb5\u7684\u63d0\u4ea4\uff0c\u8bbe\u7f6e\u5931\u8d25\u3002 \u5982\u679c\u8fde\u63a5\u5230\u4e0a\u65b9\u7684\u96c6\u7fa4\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u503c\u7684\u5f97\u7968\u6570\u5927\u4e8e\u4e86\u8282\u70b9\u6570\u7684\u4e00\u534a\uff0c\u5219\u8bbe\u7f6e\u6210\u529f\u4e86\u3002 \u5b89\u5168\u4ee5\u53ca\u6062\u590d \u5206\u533a\u9694\u79bb\u6062\u590d\u65f6\u9009\u62e9\u66f4\u9ad8\u7684election term\u7684\u8282\u70b9\uff0cterm\u4f4e\u7684\u8282\u70b9\u5c06\u8fdb\u884c\u56de\u6eda\uff0c\u7136\u540e\u5339\u914d\u65b0leader\u7684\u65e5\u5fd7\u3002 \u9009\u62e9\u65e5\u5fd7\u6570\u91cf\u66f4\u9ad8\u7684\u8282\u70b9\u3002 Zab Zab\uff08zookeeper atomic broadcast\uff09\u662f\u5b9e\u73b0zookeeper\u7684\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\u3002 \u9009\u62e9\u4e3b\u8282\u70b9 zab\u9009\u62e9\u4e3b\u8282\u70b9\u5206\u4e3a\u4e86\u4e24\u4e2a\u9636\u6bb5 discovery\u9636\u6bb5\u901a\u8fc7\u591a\u6570follower\u7684cepoch\u6765\u786e\u4fdd\u6709\u6700\u65b0\u7684commit\u548chistory synchronization\u9636\u6bb5\u786e\u4fddleader\u5c06\u6700\u65b0\u7684commit\u548chistory\u540c\u6b65\u5230\u4e86\u591a\u6570\u8282\u70b9 \u5e7f\u64ad\u903b\u8f91broadcast \u4f1a\u53c2\u7167discovery\u9636\u6bb5\u9009\u62e9\u6240\u6709\u8282\u70b9\u4e2d\u6700\u65b0\u7684history\u3002 \u5199\u5165\u5931\u8d25\u4e0d\u4e00\u5b9a\u5931\u8d25\uff0c\u4f46\u662f\u5199\u5165\u6210\u529f\u53ef\u4ee5\u786e\u4fdd\u6210\u529f\u3002 zab\u548craft \u76f8\u540c\uff1a \u4e3b\u4ece\u6a21\u5f0f \u4efb\u671f\u6982\u5ff5 raft\uff08term\uff09\u4ee5\u53cazab\uff08epoch\uff09 \u4e0d\u540c\u70b9\uff1a \u9009\u62e9\u4e3b\u8282\u70b9\u7684\u903b\u8f91\u4e0d\u4e00\u6837 raft\uff1a\u8d85\u65f6\u89e6\u53d1\u9009\u62e9\u4e3b\u8282\u70b9 zab\uff1a\u4f7f\u7528\u4e24\u9636\u6bb5\u9009\u62e9\u4e3b\u8282\u70b9 \u5b9e\u73b0\u4e0araft\u8003\u8651\u4e86\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u65e5\u5fd7\u538b\u7f29\u7b49\u7b49\u3002 \u53c2\u8003\u7f51\u7ad9\uff1a https://raft.github.io/ http://thesecretlivesofdata.com/raft/#replication","title":"\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5"},{"location":"cs/distributed/alo/#paxoszabraft","text":"\u8fd9\u4e09\u8005\u90fd\u662f\u5f3a\u4e00\u81f4\u6027\uff0c\u800cGossip\u7b49\u534f\u8bae\u662f\u5f31\u4e00\u81f4\u6027\u3002 Paxos \u662f\u9996\u4e2a\u5f97\u5230\u8bc1\u660e\u5e76\u88ab\u5e7f\u6cdb\u5e94\u7528\u7684\u5171\u8bc6\u7b97\u6cd5\uff0c\u5176\u539f\u7406\u7c7b\u4f3c \u4e24\u9636\u6bb5\u63d0\u4ea4 \u7b97\u6cd5\uff0c\u8fdb\u884c\u4e86\u6cdb\u5316\u548c\u6269\u5c55\uff0c\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u6765\u9010\u6b65\u6d88\u9664\u7cfb\u7edf\u4e2d\u7684\u4e0d\u786e\u5b9a\u72b6\u6001\u3002\u4f5c\u4e3a\u540e\u6765\u5f88\u591a\u5171\u8bc6\u7b97\u6cd5\uff08\u5982 Raft\u3001ZAB \u7b49\uff09\u7684\u57fa\u7840\uff0c\u53d8\u5f97\u66f4\u52a0\u7b80\u7ec3\u548c\u53ef\u5b9e\u73b0\uff0c\u4ece\u800c\u5e94\u7528\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u3002","title":"Paxos\u3001Zab\u548cRaft"},{"location":"cs/distributed/alo/#paxos","text":"Paxos \u95ee\u9898\u662f\u6307\u5206\u5e03\u5f0f\u7684\u7cfb\u7edf\u4e2d\u5b58\u5728\u6545\u969c\uff08crash fault\uff09\uff0c\u4f46\u4e0d\u5b58\u5728\u6076\u610f\uff08corrupt\uff09\u6d88\u606f\u8282\u70b9\u7684\u573a\u666f\uff08\u5373\u53ef\u80fd\u6d88\u606f\u4e22\u5931\u6216\u91cd\u590d\uff0c\u4f46\u65e0\u9519\u8bef\u6d88\u606f\uff09\u4e0b\u7684\u5171\u8bc6\u8fbe\u6210\u95ee\u9898\u3002\u8fd9\u4e5f\u662f\u5206\u5e03\u5f0f\u5171\u8bc6\u9886\u57df\u6700\u4e3a\u5e38\u89c1\u7684\u95ee\u9898\u3002 1990 \u5e74\u7531 Leslie Lamport \u5728\u8bba\u6587\u300aThe Part-time Parliament\u300b\u4e2d\u63d0\u51fa\u7684 Paxos \u5171\u8bc6\u7b97\u6cd5\uff0c\u5728\u5de5\u7a0b\u89d2\u5ea6\u5b9e\u73b0\u4e86\u4e00\u79cd\u6700\u5927\u5316\u4fdd\u969c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e00\u81f4\u6027\uff08\u5b58\u5728\u6781\u5c0f\u7684\u6982\u7387\u65e0\u6cd5\u5b9e\u73b0\u4e00\u81f4\uff09\u7684\u673a\u5236\u3002 \u8bba\u6587\u4e2d\u4e3a\u4e86\u63cf\u8ff0\u95ee\u9898\u7f16\u9020\u4e86\u4e00\u4e2a\u865a\u6784\u6545\u4e8b\uff1a\u5728\u53e4\u4ee3\u7231\u7434\u6d77\u7684 Paxos \u5c9b\uff0c\u8bae\u4f1a\u5982\u4f55\u901a\u8fc7\u8868\u51b3\u6765\u8fbe\u6210\u5171\u8bc6\u3002\u8bae\u5458\u4eec\u901a\u8fc7\u4fe1\u4f7f\u4f20\u9012\u6d88\u606f\u6765\u5bf9\u8bae\u6848\u8fdb\u884c\u8868\u51b3\u3002\u4f46\u8bae\u5458\u53ef\u80fd\u79bb\u5f00\uff0c\u4fe1\u4f7f\u53ef\u80fd\u8d70\u4e22\uff0c\u751a\u81f3\u91cd\u590d\u4f20\u9012\u6d88\u606f\u3002","title":"Paxos"},{"location":"cs/distributed/alo/#_1","text":"\u7b97\u6cd5\u4e2d\u5b58\u5728\u4e09\u79cd\u57fa\u672c\u7684\u903b\u8f91\u89d2\u8272\uff0c\u5b9e\u73b0\u4e2d\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u62c5\u4efb\u591a\u4e2a\u89d2\u8272\u3002 \u63d0\u6848\u8005Proposer\uff1a\u63d0\u51fa\u4e00\u4e2a\u63d0\u6848\u7b49\u5f85\u5927\u5bb6\u6279\u51c6\uff0c\u7136\u540e\u7ed3\u6848\u3002\u7cfb\u7edf\u4e2d\u6bcf\u4e00\u4e2a\u63d0\u6848\u90fd\u7528\u4e00\u4e2a\u5b57\u8d60\u5e8f\u53f7\u8fdb\u884c\u6807\u8bc6\u3002\u8fd9\u4e00\u89d2\u8272\u4e00\u822c\u7531\u5ba2\u6237\u7aef\u6765\u62c5\u4efb\u3002 \u63a5\u53d7\u8005Accepter\uff1a\u8d1f\u8d23\u5bf9\u63d0\u6848\u8fdb\u884c\u6295\u7968\uff0c\u63a5\u53d7\u63d0\u6848\u3002\u4e00\u822c\u7531\u670d\u52a1\u7aef\u6765\u62c5\u4efb\u3002 \u5b66\u4e60\u8005Learner\uff1a\u83b7\u5f97\u6279\u51c6\uff0c\u63a5\u53d7\u5b58\u50a8\u8fbe\u6210\u5171\u8bc6\u7684\u503c\uff0c\u5e2e\u5fd9\u4f20\u64ad\uff0c\u4e0d\u53c2\u4e0e\u6295\u7968\u8fc7\u7a0b\u3002\u53ef\u4ee5\u4e3a\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u7aef\u3002 \u7b97\u6cd5\u9700\u8981\u5bf9 \u5b89\u5168\u6027 \u548c \u5b58\u6d3b\u6027 \u8fdb\u884c\u4fdd\u8bc1\u3002 \u5b89\u5168\u6027\uff1a \u51b3\u8bae\u7684\u7ed3\u679c\u662f\u5bf9\u7684\uff0c\u65e0\u6b67\u4e49\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef\u60c5\u51b5\u3002 \u5728\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u4f1a\u5904\u7406\u4e00\u4e2a\u63d0\u6848\uff0c\u53ea\u6279\u51c6\u4e00\u4e2a\u6700\u7ec8\u51b3\u8bae\uff0c\u88ab\u591a\u6570\u63a5\u53d7\u8005\u63a5\u53d7\u7684\u7ed3\u679c\u6210\u4e3a\u51b3\u8bae \u5b58\u6d3b\u6027\uff1a\u4fdd\u8bc1\u51b3\u8bae\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u5b8c\u6210 \u51b3\u8bae\u603b\u662f\u4f1a\u4ea7\u751f\uff0c\u5b66\u4e60\u8005\u4f1a\u83b7\u5f97\u6700\u540e\u6279\u51c6\u7684\u51b3\u8bae \u57fa\u672c\u601d\u8def\u7c7b\u4f3c\u4e24\u9636\u6bb5\u63d0\u4ea4\uff1a\u591a\u4e2a\u63d0\u6848\u8005\u5148\u8981\u4e89\u53d6\u5230\u63d0\u6848\u7684\u6743\u5229\uff08\u5f97\u5230\u5927\u591a\u6570\u63a5\u53d7\u8005\u7684\u652f\u6301\uff09\uff1b\u6210\u529f\u7684\u63d0\u6848\u8005\u53d1\u9001\u63d0\u6848\u7ed9\u6240\u6709\u4eba\u8fdb\u884c\u786e\u8ba4\uff0c\u5f97\u5230\u5927\u90e8\u5206\u4eba\u786e\u8ba4\u7684\u63d0\u6848\u6210\u4e3a\u6279\u51c6\u7684\u7ed3\u6848\u3002 \u5982\u679c\u63d0\u6848\u8005\u6545\u969c\uff0c\u4ece\u96c6\u7fa4\u4e2d\u9009\u51fa\u65b0\u7684\u63d0\u6848\u8005\u5373\u53ef\uff1b\u5982\u679c\u63a5\u53d7\u8005\u6545\u969c\uff0c\u8868\u51b3\u65f6\u80fd\u591f\u8fbe\u6210\u591a\u6570\u6d3e\u4e5f\u6ca1\u6709\u95ee\u9898\u3002 \u6f5c\u5728\u7684\u95ee\u9898 \u662f\u53ef\u80fd\u5f62\u6210 \u6d3b\u9501 \uff0c\u5982\u679c\u591a\u4e2a\u63d0\u6848\u8005\u4e0d\u65ad\u7684\u5411\u63a5\u6536\u8005\u53d1\u9001\u63d0\u6848\uff0c\u8fd8\u6ca1\u6709\u7b49\u5f85\u4e0a\u4e00\u4e2a\u63d0\u6848\u8fbe\u5230\u591a\u6570\u4e0b\u4e00\u4e2a\u63d0\u6848\u53c8\u6765\u4e86\uff0c\u5bfc\u81f4\u63a5\u53d7\u8fd9\u8f6c\u5411\u5904\u7406\u65b0\u7684\u63d0\u6848\uff0c\u6240\u6709\u7684\u90fd\u6ca1\u6709\u529e\u6cd5\u901a\u8fc7\u3002","title":"\u539f\u7406"},{"location":"cs/distributed/alo/#_2","text":"","title":"\u63a2\u8ba8"},{"location":"cs/distributed/alo/#_3","text":"\u5982\u679c\u7cfb\u7edf\u4e2d\u9650\u5b9a\u53ea\u5141\u8bb8\u67d0\u4e2a\u7279\u5b9a\u8282\u70b9\u662f\u63d0\u6848\u8005\uff0c\u90a3\u4e48\u5171\u8bc6\u7ed3\u679c\u5f88\u5bb9\u6613\u80fd\u8fbe\u6210\uff08\u53ea\u6709\u4e00\u4e2a\u65b9\u6848\uff0c\u8981\u4e48\u8fbe\u6210\uff0c\u8981\u4e48\u5931\u8d25\uff09\u3002\u63d0\u6848\u8005\u53ea\u8981\u6536\u5230\u4e86\u6765\u81ea\u591a\u6570\u63a5\u53d7\u8005\u7684\u6295\u7968\uff0c\u5373\u53ef\u8ba4\u4e3a\u901a\u8fc7\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4e2d\u4e0d\u5b58\u5728\u5176\u4ed6\u7684\u63d0\u6848\u3002 \u4f46\u6b64\u65f6 \u4e00\u65e6\u63d0\u6848\u8005\u6545\u969c \uff0c\u5219\u6574\u4e2a\u7cfb\u7edf\u65e0\u6cd5\u5de5\u4f5c\u3002","title":"\u4e00\u4e2a\u63d0\u6848\u8005+\u591a\u4e2a\u63a5\u53d7\u8005"},{"location":"cs/distributed/alo/#_4","text":"\u9650\u5b9a\u67d0\u4e2a\u7279\u5b9a\u8282\u70b9\u4f5c\u4e3a\u63a5\u53d7\u8005\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5171\u8bc6\u4e5f\u5f88\u5bb9\u6613\u8fbe\u6210\uff0c\u63a5\u53d7\u8005\u6536\u5230\u591a\u4e2a\u63d0\u6848\uff0c\u9009\u7b2c\u4e00\u4e2a\u63d0\u6848\u4f5c\u4e3a\u51b3\u8bae\uff0c\u53d1\u9001\u7ed9\u5176\u5b83\u63d0\u6848\u8005\u5373\u53ef\u3002\u7f3a\u9677\u4e5f\u662f\u5bb9\u6613\u53d1\u751f\u5355\u70b9\u6545\u969c\uff0c\u5305\u62ec\u63a5\u53d7\u8005\u6545\u969c\u6216\u9996\u4e2a\u63d0\u6848\u8005\u8282\u70b9\u6545\u969c\u3002\u4ee5\u4e0a\u4e24\u79cd\u60c5\u5f62\u5176\u5b9e\u7c7b\u4f3c\u4e3b\u4ece\u6a21\u5f0f\uff0c\u867d\u7136\u4e0d\u90a3\u4e48\u53ef\u9760\uff0c\u4f46\u56e0\u4e3a\u539f\u7406\u7b80\u5355\u800c\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002","title":"\u591a\u4e2a\u63d0\u6848\u8005+\u4e00\u4e2a\u63a5\u53d7\u8005"},{"location":"cs/distributed/alo/#_5","text":"\u4e00\u79cd\u60c5\u51b5\u662f \u540c\u4e00\u65f6\u95f4\u7247\u6bb5\uff08\u5982\u4e00\u4e2a\u63d0\u6848\u5468\u671f\uff09\u5185\u53ea\u6709\u4e00\u4e2a\u63d0\u6848\u8005 \uff0c\u8fd9\u65f6\u53ef\u4ee5\u9000\u5316\u5230\u5355\u63d0\u6848\u8005\u7684\u60c5\u5f62\u3002\u9700\u8981\u8bbe\u8ba1\u4e00\u79cd\u673a\u5236\u6765\u4fdd\u969c\u63d0\u6848\u8005\u7684\u6b63\u786e\u4ea7\u751f\uff0c\u4f8b\u5982\u6309\u7167\u65f6\u95f4\u3001\u5e8f\u5217\u4e4b\u7c7b\u3002\u8003\u8651\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u8981\u5904\u7406\u7684\u5de5\u4f5c\u91cf\u5f88\u5927\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u8981\u5c3d\u91cf\u9ad8\u6548\uff0c\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u7684\u673a\u5236\u975e\u5e38\u96be\u8bbe\u8ba1\u3002 \u53e6\u4e00\u79cd\u60c5\u51b5\u662f \u5141\u8bb8\u540c\u4e00\u65f6\u95f4\u7247\u6bb5\u5185\u53ef\u4ee5\u51fa\u73b0\u591a\u4e2a\u63d0\u6848\u8005 \u3002\u90a3\u540c\u4e00\u4e2a\u8282\u70b9\u53ef\u80fd\u6536\u5230\u591a\u4efd\u63d0\u6848\uff0c\u600e\u4e48\u5bf9\u4ed6\u4eec\u8fdb\u884c\u533a\u5206\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u91c7\u7528\u53ea\u63a5\u53d7\u7b2c\u4e00\u4e2a\u63d0\u6848\u800c\u62d2\u7edd\u540e\u7eed\u63d0\u6848\u7684\u65b9\u6cd5\u4e5f\u4e0d\u9002\u7528\u3002\u5f88\u81ea\u7136\u7684\uff0c\u63d0\u6848\u9700\u8981\u5e26\u4e0a\u4e0d\u540c\u7684\u5e8f\u53f7\u3002\u8282\u70b9\u9700\u8981\u6839\u636e\u63d0\u6848\u5e8f\u53f7\u6765\u5224\u65ad\u63a5\u53d7\u54ea\u4e2a\u3002\u6bd4\u5982\u63a5\u53d7\u5176\u4e2d\u5e8f\u53f7\u8f83\u5927\uff08\u5f80\u5f80\u610f\u5473\u7740\u662f\u63a5\u53d7\u65b0\u63d0\u51fa\u7684\uff0c\u56e0\u4e3a\u65e7\u63d0\u6848\u8005\u6545\u969c\u6982\u7387\u66f4\u5927\uff09\u7684\u63d0\u6848\u3002 \u540c\u65f6\u5141\u8bb8\u591a\u4e2a\u63d0\u6848\uff0c\u610f\u5473\u7740\u5f88\u53ef\u80fd\u5355\u4e2a\u63d0\u6848\u4eba\u65e0\u6cd5\u96c6\u9f50\u8db3\u591f\u591a\u7684\u6295\u7968\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u63d0\u6848\u8005\u5373\u4fbf\u6536\u5230\u4e86\u591a\u6570\u63a5\u53d7\u8005\u7684\u6295\u7968\uff0c\u4e5f\u4e0d\u6562\u8bf4\u5c31\u4e00\u5b9a\u901a\u8fc7\u3002\u56e0\u4e3a\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6295\u7968\u8005\u65e0\u6cd5\u83b7\u77e5\u5176\u5b83\u6295\u7968\u4eba\u7684\u7ed3\u679c\uff0c\u4e5f\u65e0\u6cd5\u786e\u8ba4\u63d0\u6848\u4eba\u662f\u5426\u6536\u5230\u4e86\u81ea\u5df1\u7684\u6295\u7968\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5b9e\u73b0\u4e24\u4e2a\u9636\u6bb5\u7684\u63d0\u4ea4\u8fc7\u7a0b\u3002","title":"\u591a\u4e2a\u63d0\u6848\u8005+\u591a\u4e2a\u63a5\u53d7\u8005"},{"location":"cs/distributed/alo/#_6","text":"\u63d0\u6848\u8005\u53d1\u51fa\u63d0\u6848\u7533\u8bf7\u4e4b\u540e\uff0c\u4f1a\u6536\u5230\u6765\u81ea\u63a5\u53d7\u8005\u7684\u53cd\u9988\u3002\u4e00\u79cd\u7ed3\u679c\u662f\u63d0\u6848\u88ab\u5927\u591a\u6570\u63a5\u53d7\u8005\u63a5\u53d7\u4e86\uff0c\u4e00\u79cd\u7ed3\u679c\u662f\u6ca1\u88ab\u63a5\u53d7\u3002\u6ca1\u88ab\u63a5\u53d7\u7684\u8bdd\uff0c\u53ef\u4ee5\u8fc7\u4f1a\u518d\u91cd\u8bd5\u3002\u5373\u4fbf\u6536\u5230\u6765\u81ea\u5927\u591a\u6570\u63a5\u53d7\u8005\u7684\u7b54\u590d\uff0c\u4e5f\u4e0d\u80fd\u8ba4\u4e3a\u5c31\u6700\u7ec8\u786e\u8ba4\u4e86\u3002\u56e0\u4e3a\u8fd9\u4e9b\u63a5\u53d7\u8005\u81ea\u5df1\u5e76\u4e0d\u77e5\u9053\u81ea\u5df1\u521a\u7b54\u590d\u7684\u63d0\u6848\u53ef\u4ee5\u6784\u6210\u5927\u591a\u6570\u7684\u4e00\u81f4\u610f\u89c1\u3002 \u5f88\u81ea\u7136\u7684\uff0c\u9700\u8981\u5f15\u5165\u65b0\u7684\u4e00\u4e2a\u9636\u6bb5\uff0c\u5373\u63d0\u6848\u8005\u5728\u7b2c\u4e00\u9636\u6bb5\u62ff\u5230\u6240\u6709\u7684\u53cd\u9988\u540e\uff0c\u9700\u8981\u518d\u6b21\u5224\u65ad\u8fd9\u4e2a\u63d0\u6848\u662f\u5426\u5f97\u5230\u5927\u591a\u6570\u7684\u652f\u6301\uff0c\u5982\u679c\u652f\u6301\u5219\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6700\u7ec8\u786e\u8ba4\u3002 Paxos \u91cc\u9762\u5bf9\u8fd9\u4e24\u4e2a\u9636\u6bb5\u5206\u522b\u547d\u540d\u4e3a \u51c6\u5907\uff08Prepare\uff09 \u548c \u63d0\u4ea4\uff08Commit\uff09 \u3002\u51c6\u5907\u9636\u6bb5\u901a\u8fc7\u9501\u6765\u89e3\u51b3\u5bf9\u54ea\u4e2a\u63d0\u6848\u5185\u5bb9\u8fdb\u884c\u786e\u8ba4\u7684\u95ee\u9898\uff0c\u63d0\u4ea4\u9636\u6bb5\u89e3\u51b3\u5927\u591a\u6570\u786e\u8ba4\u6700\u7ec8\u503c\u7684\u95ee\u9898\u3002 \u51c6\u5907\u9636\u6bb5 \uff1a \u63d0\u6848\u8005\u53d1\u9001\u81ea\u5df1\u8ba1\u5212\u63d0\u4ea4\u7684\u63d0\u6848\u7684\u7f16\u53f7\u5230\u591a\u4e2a\u63a5\u53d7\u8005\uff0c\u8bd5\u63a2\u662f\u5426\u53ef\u4ee5\u9501\u5b9a\u591a\u6570\u63a5\u53d7\u8005\u7684\u652f\u6301\u3002 \u63a5\u53d7\u8005\u65f6\u523b\u4fdd\u7559\u6536\u5230\u8fc7\u63d0\u6848\u7684\u6700\u5927\u7f16\u53f7\u548c\u63a5\u53d7\u7684\u6700\u5927\u63d0\u6848\u3002\u5982\u679c\u6536\u5230\u63d0\u6848\u53f7\u6bd4\u76ee\u524d\u4fdd\u7559\u7684\u6700\u5927\u63d0\u6848\u53f7\u8fd8\u5927\uff0c\u5219\u8fd4\u56de\u81ea\u5df1\u5df2\u63a5\u53d7\u7684\u63d0\u6848\u503c\uff08\u5982\u679c\u8fd8\u672a\u63a5\u53d7\u8fc7\u4efb\u4f55\u63d0\u6848\uff0c\u5219\u4e3a\u7a7a\uff09\u7ed9\u63d0\u6848\u8005\uff0c\u66f4\u65b0\u5f53\u524d\u6700\u5927\u63d0\u6848\u53f7\uff0c\u5e76\u8bf4\u660e\u4e0d\u518d\u63a5\u53d7\u5c0f\u4e8e\u6700\u5927\u63d0\u6848\u53f7\u7684\u63d0\u6848\u3002 \u63d0\u4ea4\u9636\u6bb5 \uff1a \u63d0\u6848\u8005\u5982\u679c\u6536\u5230\u5927\u591a\u6570\u7684\u56de\u590d\uff08\u8868\u793a\u5927\u90e8\u5206\u4eba\u542c\u5230\u5b83\u7684\u8bf7\u6c42\uff09\uff0c\u5219\u53ef\u51c6\u5907\u53d1\u51fa\u5e26\u6709\u521a\u624d\u63d0\u6848\u53f7\u7684\u63a5\u53d7\u6d88\u606f\u3002\u5982\u679c\u6536\u5230\u7684\u56de\u590d\u4e2d\u4e0d\u5e26\u6709\u65b0\u7684\u63d0\u6848\uff0c\u8bf4\u660e\u9501\u5b9a\u6210\u529f\u3002\u5219\u4f7f\u7528\u81ea\u5df1\u7684\u63d0\u6848\u5185\u5bb9\uff1b\u5982\u679c\u8fd4\u56de\u4e2d\u6709\u63d0\u6848\u5185\u5bb9\uff0c\u5219\u66ff\u6362\u63d0\u6848\u503c\u4e3a\u8fd4\u56de\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u63d0\u6848\u503c\u3002\u5982\u679c\u6ca1\u6536\u5230\u8db3\u591f\u591a\u7684\u56de\u590d\uff0c\u5219\u9700\u8981\u518d\u6b21\u53d1\u51fa\u8bf7\u6c42\u3002 \u63a5\u53d7\u8005\u6536\u5230\u63a5\u53d7\u6d88\u606f\u540e\uff0c\u5982\u679c\u53d1\u73b0\u63d0\u6848\u53f7\u4e0d\u5c0f\u4e8e\u5df2\u63a5\u53d7\u7684\u6700\u5927\u63d0\u6848\u53f7\uff0c\u5219\u63a5\u53d7\u8be5\u63d0\u6848\uff0c\u5e76\u66f4\u65b0\u63a5\u53d7\u7684\u6700\u5927\u63d0\u6848\u3002 \u4e00\u65e6\u591a\u6570\u63a5\u53d7\u8005\u63a5\u53d7\u4e86\u5171\u540c\u7684\u63d0\u6848\u503c\uff0c\u5219\u5f62\u6210\u51b3\u8bae\uff0c\u6210\u4e3a\u6700\u7ec8\u786e\u8ba4\u3002 Note \u4f46\u662fPaxos\u534f\u8bae\u5e76\u4e0d\u5bb9\u6613\u5b9e\u73b0\uff0czab\u548craft\u5bf9Paxos\u7b97\u6cd5\u8fdb\u884c\u4e86\u7b80\u5316\u548c\u6539\u8fdb\u3002","title":"\u4e24\u9636\u6bb5\u7684\u63d0\u4ea4"},{"location":"cs/distributed/alo/#multi-paxos","text":"\u5bf9\u63a5\u53d7\u8005\u8bbe\u7f6e\u4e3b\u4ece\u8282\u70b9\u3002","title":"Multi Paxos"},{"location":"cs/distributed/alo/#raft","text":"\u4e09\u4e2a\u5b50\u95ee\u9898\uff1a 1. \u9886\u5bfc\u8005\u9009\u4e3e\uff1b 2.\u65e5\u5fd7\u590d\u5236\uff1b3.\u5b89\u5168\u4ee5\u53ca\u6062\u590d\u3002 \u91cd\u65b0\u5b9a\u4e49\u4e86\u72b6\u6001\uff0c\u9886\u5bfc\u8005\u3001\u8ddf\u968f\u8005\u4ee5\u53ca\u53c2\u9009\u8005\u3002 raft\u4e2d\u6709\u4e24\u79cd\u8d85\u65f6\u65f6\u95f4\u3002","title":"Raft"},{"location":"cs/distributed/alo/#_7","text":"\u9996\u5148\uff0c\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u88ab\u8bbe\u7f6e\u968f\u673a\u8bbe\u7f6e\u4e00\u4e2a\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4ece150ms-300ms\u3002\u5728\u8d85\u65f6\u65f6\u95f4\u7ed3\u675f\u540e\uff0cfollower\u4f1a\u53d8\u6210\u53c2\u9009\u8005\u72b6\u6001\u3002\u4f1a\u7ed9\u81ea\u5df1\u5148\u6295\u4e00\u7968\uff0c\u7136\u540e\u7ed9\u5176\u4ed6\u8282\u70b9\u53d1\u9001\u6295\u7968\u8bf7\u6c42\u3002\u5176\u4ed6\u8282\u70b9\u7684\u5c06\u4f1a\u91cd\u7f6e\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4 reset election timeout\u3002\u53c2\u9009\u8005\u6536\u5230\u5927\u4e8e\u4e00\u534a\u7684\u9009\u7968\u540e\uff0c\u4f1a\u6210\u4e3a\u4e3b\u8282\u70b9\u3002\u5e76\u5f00\u59cb\u5411\u4ece\u8282\u70b9\u95f4\u9694\u53d1\u9001\u5fc3\u8df3\u5305\uff0c\u95f4\u9694\u65f6\u95f4\u88ab\u79f0\u4e3a heartbeat timeout\u3002\u4ece\u8282\u70b9\u4e5f\u4f1a\u56de\u590d\u4e00\u4e2a\u5fc3\u8df3\u5305\u7ed9leader\u8282\u70b9 \u5982\u679c\uff0c\u662f\u5076\u6570\u8282\u70b9\uff0c\u4e14\u4e24\u4e2a\u8282\u70b9\u7684\u5e73\u7968\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u518d\u6b21\u8fdb\u884c\u6295\u7968\u3002","title":"\u9886\u5bfc\u8005\u9009\u4e3e"},{"location":"cs/distributed/alo/#_8","text":"\u5982\u679c\u5199\u5165\u4e86\u4e00\u4e2a\u503c\u5230\u4e3b\u8282\u70b9\u4e0a\uff0c\u4fee\u6539\u503c\u4f1a\u8ddf\u968f\u7740\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5305\u5230\u8fbefollower\u8282\u70b9\u4e0a\uff0c\u5982\u679c\u7edd\u5927\u591a\u6570\u4ece\u8282\u70b9\u56de\u590d\u6536\u5230\u4e86\u8fd9\u4e2a\u4fee\u6539\u503c\u64cd\u4f5c\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76f8\u5e94\u7ed9\u5ba2\u6237\u7aef\uff0c\u540c\u65f6\u5c06\u503c\u4fee\u6539\u63d0\u4ea4\u5230\u4ece\u8282\u70b9\u4e0a\u3002\uff08\u4e24\u9636\u6bb5\u63d0\u4ea4\uff09","title":"\u65e5\u5fd7\u590d\u5236"},{"location":"cs/distributed/alo/#_9","text":"\u5f53\u7f51\u7edc\u53d1\u751f\u5206\u533a\u540e\uff0c\u4e0d\u540c\u7684\u5206\u533a\u4f1a\u4ea7\u751f\u65b0\u7684leader\uff0c\u8fd9\u65f6\u5019\u4f1a\u51fa\u73b0\u591a\u4e2aleader\u7684\u60c5\u51b5\u3002 \u8fd9\u65f6\u5019\u8fdb\u884c\u53ea\u5199\u5165\uff0c\u5ba2\u6237\u7aef\u53ef\u80fd\u8fde\u63a5\u5230\u4e86\u4e0d\u540c\u7684leader\u4e0a\u53bb\uff0c\u5982\u679c\u53d1\u9001\u5230\u5c11\u6570\u7684AB\u8282\u70b9\u7684\u5206\u533a\u4e0a\u53bb\uff0c\u7531\u4e8e\u8fd4\u56de\u7684\u7968\u6570\u5c11\u4e8e\u8282\u70b9\u503c\u7684\u4e00\u822c\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8fdb\u884c\u7b2c\u4e8c\u9636\u6bb5\u7684\u63d0\u4ea4\uff0c\u8bbe\u7f6e\u5931\u8d25\u3002 \u5982\u679c\u8fde\u63a5\u5230\u4e0a\u65b9\u7684\u96c6\u7fa4\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u503c\u7684\u5f97\u7968\u6570\u5927\u4e8e\u4e86\u8282\u70b9\u6570\u7684\u4e00\u534a\uff0c\u5219\u8bbe\u7f6e\u6210\u529f\u4e86\u3002","title":"\u8111\u88c2\uff1f"},{"location":"cs/distributed/alo/#_10","text":"\u5206\u533a\u9694\u79bb\u6062\u590d\u65f6\u9009\u62e9\u66f4\u9ad8\u7684election term\u7684\u8282\u70b9\uff0cterm\u4f4e\u7684\u8282\u70b9\u5c06\u8fdb\u884c\u56de\u6eda\uff0c\u7136\u540e\u5339\u914d\u65b0leader\u7684\u65e5\u5fd7\u3002 \u9009\u62e9\u65e5\u5fd7\u6570\u91cf\u66f4\u9ad8\u7684\u8282\u70b9\u3002","title":"\u5b89\u5168\u4ee5\u53ca\u6062\u590d"},{"location":"cs/distributed/alo/#zab","text":"Zab\uff08zookeeper atomic broadcast\uff09\u662f\u5b9e\u73b0zookeeper\u7684\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\u3002","title":"Zab"},{"location":"cs/distributed/alo/#_11","text":"zab\u9009\u62e9\u4e3b\u8282\u70b9\u5206\u4e3a\u4e86\u4e24\u4e2a\u9636\u6bb5 discovery\u9636\u6bb5\u901a\u8fc7\u591a\u6570follower\u7684cepoch\u6765\u786e\u4fdd\u6709\u6700\u65b0\u7684commit\u548chistory synchronization\u9636\u6bb5\u786e\u4fddleader\u5c06\u6700\u65b0\u7684commit\u548chistory\u540c\u6b65\u5230\u4e86\u591a\u6570\u8282\u70b9","title":"\u9009\u62e9\u4e3b\u8282\u70b9"},{"location":"cs/distributed/alo/#broadcast","text":"\u4f1a\u53c2\u7167discovery\u9636\u6bb5\u9009\u62e9\u6240\u6709\u8282\u70b9\u4e2d\u6700\u65b0\u7684history\u3002 \u5199\u5165\u5931\u8d25\u4e0d\u4e00\u5b9a\u5931\u8d25\uff0c\u4f46\u662f\u5199\u5165\u6210\u529f\u53ef\u4ee5\u786e\u4fdd\u6210\u529f\u3002","title":"\u5e7f\u64ad\u903b\u8f91broadcast"},{"location":"cs/distributed/alo/#zabraft","text":"\u76f8\u540c\uff1a \u4e3b\u4ece\u6a21\u5f0f \u4efb\u671f\u6982\u5ff5 raft\uff08term\uff09\u4ee5\u53cazab\uff08epoch\uff09 \u4e0d\u540c\u70b9\uff1a \u9009\u62e9\u4e3b\u8282\u70b9\u7684\u903b\u8f91\u4e0d\u4e00\u6837 raft\uff1a\u8d85\u65f6\u89e6\u53d1\u9009\u62e9\u4e3b\u8282\u70b9 zab\uff1a\u4f7f\u7528\u4e24\u9636\u6bb5\u9009\u62e9\u4e3b\u8282\u70b9 \u5b9e\u73b0\u4e0araft\u8003\u8651\u4e86\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u65e5\u5fd7\u538b\u7f29\u7b49\u7b49\u3002","title":"zab\u548craft"},{"location":"cs/distributed/alo/#_12","text":"https://raft.github.io/ http://thesecretlivesofdata.com/raft/#replication","title":"\u53c2\u8003\u7f51\u7ad9\uff1a"},{"location":"cs/distributed/cap/","text":"CAP \u7406\u8bba 1\u5b9a\u4e49 CAP\u7406\u8bba \u5728\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c CAP\u5b9a\u7406 \uff08CAP theorem\uff09\uff0c\u53c8\u88ab\u79f0\u4f5c \u5e03\u9c81\u5c14\u5b9a\u7406 \uff08Brewer's theorem\uff09\uff0c\u5b83\u6307\u51fa\u5bf9\u4e8e\u4e00\u4e2a\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u6765\u8bf4\uff0c\u4e0d\u53ef\u80fd\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u70b9\uff1a \u4e00\u81f4\u6027\uff08Consistency\uff09 \u7b49\u540c\u4e8e\u6240\u6709\u8282\u70b9\u8bbf\u95ee\u540c\u4e00\u4efd\u6700\u65b0\u7684\u6570\u636e\u526f\u672c \u53ef\u7528\u6027\uff08Availability\uff09\u6bcf\u6b21\u8bf7\u6c42\u90fd\u80fd\u83b7\u53d6\u5230\u975e\u9519\u7684\u54cd\u5e94\u2014\u2014\u4f46\u662f\u4e0d\u4fdd\u8bc1\u83b7\u53d6\u7684\u6570\u636e\u4e3a\u6700\u65b0\u6570\u636e \u5206\u533a\u5bb9\u9519\u6027\uff08Partition tolerance\uff09\u4ee5\u5b9e\u9645\u6548\u679c\u800c\u8a00\uff0c\u5206\u533a\u76f8\u5f53\u4e8e\u5bf9\u901a\u4fe1\u7684\u65f6\u9650\u8981\u6c42\u3002\u7cfb\u7edf\u5982\u679c\u4e0d\u80fd\u5728\u65f6\u9650\u5185\u8fbe\u6210\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5c31\u610f\u5473\u7740\u53d1\u751f\u4e86\u5206\u533a\u7684\u60c5\u51b5\uff0c\u5fc5\u987b\u5c31\u5f53\u524d\u64cd\u4f5c\u5728C\u548cA\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002 \u4eceCAP\u7406\u8bba\u4e2d\u6211\u4eec\u77e5\u9053\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e09\u8005\u662f\u4e0d\u53ef\u80fd\u7684\u3002 2\u89e3\u91ca 2.1 \u5206\u533a\u5bb9\u5fcd\u6027 \u4e3a\u4e86\u6d88\u9664\u8ff7\u601d\uff0c\u6211\u4eec\u5fc5\u987b\u5f04\u6e05\u695a\uff0c\u4ec0\u4e48\u662f \u5206\u533a\u5bb9\u5fcd\u6027 \uff0c P\u662f\u4ec0\u4e48\uff1a \u5206\u533a\u5bb9\u5fcd\u6027\u8bf4\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u6a21\u7cca\u7684\u6982\u5ff5\uff0c\u4e0b\u9762\u5f15\u5165\u4e24\u4e2a\u8bf4\u6cd5\u8fdb\u884c\u7406\u89e3\u3002 Stonebraker\u535a\u58eb\u65ad\u8a00\uff0c\u5982\u679c\u7f51\u7edc\u6545\u969c\u65f6\uff0c\u5206\u533a\u4e24\u8fb9\u7684\u5904\u7406\u53ef\u4ee5\u7ee7\u7eed\uff0c\u90a3\u5c31\u662f\u5206\u533a\u5bb9\u5fcd\u7684\u3002 Gilbert\u548cLynch\u662f\u8fd9\u6837\u5b9a\u4e49\u5206\u533a\u5bb9\u5fcd\u6027\u7684\uff1a\u7f51\u7edc\u5141\u8bb8\u4e22\u5931\u4ee5\u4e00\u4e2a\u8282\u70b9\u53d1\u7ed9\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u4efb\u610f\u591a\u7684\u6d88\u606f\u3002 \u6211\u4eec\u65e0\u6cd5\u6784\u5efa\u5b8c\u5168\u53ef\u9760\u7684\u7f51\u7edc\u548c\u7cfb\u7edf\u6765\u6d88\u9664\uff0c\u6784\u5efa\u5b8c\u5168\u6ca1\u6709\u4e22\u5305\u3001\u5ef6\u8fdf\u3001\u6216\u8005\u7edd\u4e0d\u51fa\u73b0\u95ee\u9898\u7684\u7f51\u7edc\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u3002\u4e0d\u540c\u5206\u533a\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6d41\u7684\u6545\u969c\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0cP\u4e00\u5b9a\u4f1a\u53d1\u751f\uff0c\u5426\u5219\u4e5f\u4e0d\u4f1a\u662f\u5206\u5e03\u5f0f\u4e86\u3002 \u6240\u4ee5\uff0c\u5927\u90e8\u5206\u65f6\u5019\u6211\u4eec\u9700\u8981\u5728A\u548cC\u4e2d\u6743\u8861\uff0c \u56e0\u4e3a\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684P\uff0c\u5206\u533a\u4e00\u5b9a\u4f1a\u53d1\u751f \uff0c\u8fd9\u5176\u5b9e\u662fA\u548cC\u7684\u6218\u4e89 1 \u3002 \u5982\u679c\u9009\u62e9\u4e86C\uff0c\u5219\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u8fd9\u6837\u5219\u4f1a\u653e\u5f03\u6389\u4e00\u5b9a\u7684\u53ef\u7528\u6027\uff0c\u5176\u4ed6\u5206\u533a\u53ef\u80fd\u4e0d\u4f1a\u7acb\u5373\u786e\u8ba4\u5f53\u524d\u5206\u533a\u6570\u636e\u662f\u5426\u4e00\u81f4\u3002 \u5982\u679c\u9009\u62e9\u4e86A\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u9ad8\u53ef\u7528\uff0c\u6570\u636e\u53ef\u80fd\u76f4\u63a5\u4f1a\u4ece\u5f53\u524d\u5206\u533a\u8fd4\u56de\uff0c\u4f46\u662f\u548c\u5176\u4ed6\u5206\u533a\u4e2d\u7684\u6570\u636e\u4e0d\u4e00\u81f4 2.2\u4e00\u81f4\u6027 \u5728\u5b9e\u73b0\u4e00\u81f4\u6027\u4e2d\uff0c\u4f1a\u6709\u4e24\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u539f\u5219\u548c\u7406\u8bba\uff0c ACID \u4ee5\u53ca BASE \u3002 2.2.1 ACID \u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u6709\u975e\u5e38\u7ecf\u5178\u7684 ACID \u6765\u63cf\u8ff0\u4e00\u81f4\u6027\u9700\u6c42\uff0c\u4e5f\u5c31\u662f\u5e38\u51fa\u73b0\u5728\u6570\u636e\u5e93\u7684\u4fdd\u8bc1\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\u4e2d\u3002\uff0c\u5373 \u539f\u5b50\u6027Atomicity \uff0c \u4e00\u81f4\u6027Consistency \uff0c \u9694\u79bb\u6027Isolation \uff0c \u6301\u4e45\u6027 Durability \u3002 ACID \u6ee1\u8db3\u4e86\u4e00\u81f4\u6027\u9700\u6c42\uff0c\u4f46\u662f\u727a\u7272\u4e86\u90e8\u5206\u7684\u53ef\u7528\u6027\u4f5c\u4e3a\u4ee3\u4ef7\u3002 Atomicity \uff1a\u6bcf\u6b21\u4e8b\u52a1\u7684\u63d0\u4ea4\u662f\u539f\u5b50\u7684\uff0c\u8981\u4e48\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e48\u5168\u90e8\u5931\u8d25\u3002\u4e00\u65e6\u4ea7\u751f\u4e86\u5931\u8d25\u5219\u4f1a\u9000\u5230\u4e8b\u52a1\u6267\u884c\u4e4b\u524d\u7684\u72b6\u6001\u3002 Consistency \uff1a\u6570\u636e\u5e93\u72b6\u6001\u5728\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\u524d\u548c\u5b8c\u6210\u540e\u662f\u4e00\u76f4\u548c\u5b8c\u6574\u7684\uff0c\u6ca1\u6709\u4e2d\u95f4\u72b6\u6001\u5b58\u5728\u3002\u53ea\u80fd\u5904\u4e8e\u4e8b\u52a1\u6267\u884c\u6210\u529f\u4e4b\u540e\u7684\u72b6\u6001\u3002 Isolation \uff1a\u5404\u79cd\u4e8b\u52a1\u662f\u72ec\u7acb\u6267\u884c\u7684\uff0c\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002\u5728SQL\u6807\u51c6\u4e2d\uff0c\u4f1a\u6709\u56db\u79cd\u9694\u79bb\u7ea7\u522b\uff0c\u7531\u5f31\u5230\u5f3a\uff1a\u672a\u6388\u6743\u8bfb\uff08\u672a\u63d0\u4ea4\u8bfbRead Uncommitted\uff09\u3001\u6388\u6743\u8bfb\uff08\u63d0\u4ea4\u8bfbRead Committed\uff09\u3001\u53ef\u91cd\u590d\u8bfb\uff08 Repeated Read\uff09\u548c\u4e32\u884c\u5316\uff08Serializable\uff09\u3002 Durability \uff1a\u72b6\u6001\u4fee\u6539\u540e\uff0c\u6539\u53d8\u662f\u6301\u4e45\u7684\uff0c\u4e0d\u4f1a\u5931\u6548\u3002\u4e00\u65e6\u67d0\u4e2a\u4e8b\u7269\u63d0\u4ea4\uff0c\u5b83\u5e26\u6765\u7684\u6539\u53d8\u5c31\u662f\u6c38\u4e45\u7684\u3002 2.2.2 BASE CAP\u7406\u8bba\u7684\u63d0\u51fa\u8005Brewer\u6307\u51fa\uff1a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u8ba1\u7b97\u662f\u76f8\u5bf9\u5bb9\u6613\u7684\uff0c\u771f\u6b63\u56f0\u96be\u7684\u662f\u72b6\u6001\u7684\u7ef4\u62a4\u3002\u90a3\u4e48\u5bf9\u4e8e\u5206\u5e03\u5f0f\u5b58\u50a8\u6216\u8005\u8bf4\u6570\u636e\u5171\u4eab\u7cfb\u7edf\uff0c\u6570\u636e\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\u4e5f\u662f\u6bd4\u8f83\u56f0\u96be\u7684\u3002\u5bf9\u4e8e\u4f20\u7edf\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f18\u5148\u8003\u8651\u7684\u662f\u4e00\u81f4\u6027\u800c\u4e0d\u662f\u53ef\u7528\u6027\uff0c\u56e0\u6b64\u63d0\u51fa\u4e86\u4e8b\u52a1\u7684ACID\u7279\u6027\u3002\u800c\u5bf9\u4e8e\u8bb8\u591a\u5206\u5e03\u5f0f\u5b58\u50a8\u7cfb\u7edf\uff0c\u5219\u662f\u66f4\u770b\u91cd\u53ef\u7528\u6027\u800c\u4e0d\u662f\u4e00\u81f4\u6027\uff0c \u4e00\u81f4\u6027\u901a\u8fc7BASE \uff08Basically Available, Soft state, Eventual consistency\uff09\u6765\u4fdd\u8bc1 BASE\u7684\u76ee\u6807\u662f\u5b9e\u73b0 \u6700\u7ec8\u4e00\u81f4\u6027 \uff0c\u6765\u6362\u53d6\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u3002 Tip BASE\u7406\u8bba \u548c ACID\u539f\u5219 \u770b\u8d77\u6765\u662f\u5bf9\u7acb\u7684\uff0c\u5176\u5b9e\u5728CAP\u7406\u8bba\u4e2d\uff0c\u727a\u7272\u4e86\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u524d\u8005\u4fdd\u8bc1\u4e86\u9ad8\u53ef\u7528\uff0c\u540e\u8005\u5219\u662f\u727a\u7272\u4e86\u9ad8\u53ef\u7528\u6765\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002 2.2.3 \"2PC\"\u548c \"3PC\" \u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u81f4\u6027\u7684\u7814\u7a76\u6210\u679c\u5305\u62ec\u8457\u540d\u7684 \u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\uff08Two-phase Commit\uff0c2PC\uff09**\u548c **\u4e09\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\uff08Three-phase Commit\uff0c3PC\uff09 \u3002 2PC \u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\u57fa\u672c\u601d\u60f3\u5341\u5206\u7b80\u5355\uff0c\u65e2\u7136\u5728\u5206\u5e03\u5f0f\u573a\u666f\u4e0b\uff0c\u76f4\u63a5\u63d0\u4ea4\u4e8b\u52a1\u53ef\u80fd\u51fa\u73b0\u5404\u79cd\u6545\u969c\u548c\u51b2\u7a81\uff0c\u90a3\u4e48\u53ef\u5c06\u5176\u5206\u89e3\u4e3a\u9884\u63d0\u4ea4\u548c\u6b63\u5f0f\u63d0\u4ea4\u4e24\u4e2a\u9636\u6bb5\uff0c\u89c4\u907f\u51b2\u7a81\u7684\u98ce\u9669\u3002 \u9884\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\uff08Coordinator\uff09\u53d1\u8d77\u63d0\u4ea4\u67d0\u4e2a\u4e8b\u52a1\u7684\u7533\u8bf7\uff0c\u5404\u53c2\u4e0e\u6267\u884c\u8005\uff08Participant\uff09\u9700\u8981\u5c1d\u8bd5\u8fdb\u884c\u63d0\u4ea4\u5e76\u53cd\u9988\u662f\u5426\u80fd\u5b8c\u6210\uff1b \u6b63\u5f0f\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u5982\u679c\u5f97\u5230\u6240\u6709\u6267\u884c\u8005\u7684\u6210\u529f\u7b54\u590d\uff0c\u5219\u53d1\u51fa\u6b63\u5f0f\u63d0\u4ea4\u8bf7\u6c42\u3002\u5982\u679c\u6210\u529f\u5b8c\u6210\uff0c\u5219\u7b97\u6cd5\u6267\u884c\u6210\u529f\u3002 \u5982\u679c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4efb\u4f55\u6b65\u9aa4\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5219\u56de\u9000\u3002\u5373\u6240\u6709\u7684\u8282\u70b9\u540c\u610f\u4e86\u4e8b\u52a1\uff08\u4e8b\u52a1\u53ef\u4ee5\u5728\u6240\u6709\u8282\u70b9\u8fbe\u6210\uff09\u5219\u63d0\u4ea4\u8be5\u4e8b\u7269\uff0c\u8d1f\u8d23\u653e\u5f03\u3002 \u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\u56e0\u4e3a\u5176\u7b80\u5355\u5bb9\u6613\u5b9e\u73b0\u7684\u4f18\u70b9\uff0c\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7b49\u7cfb\u7edf\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\u3002\u5f53\u7136\uff0c\u5176\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\u3002 \u6574\u4e2a\u8fc7\u7a0b\u9700\u8981\u540c\u6b65\u963b\u585e\u5bfc\u81f4\u6027\u80fd\u4e00\u822c\u8f83\u5dee\uff1b \u540c\u65f6\u5b58\u5728\u5355\u70b9\u95ee\u9898\uff0c\u8f83\u574f\u60c5\u51b5\u4e0b\u53ef\u80fd\u4e00\u76f4\u65e0\u6cd5\u5b8c\u6210\u63d0\u4ea4\uff1b \u53e6\u5916\u53ef\u80fd\u4ea7\u751f\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff08\u4f8b\u5982\u534f\u8c03\u8005\u548c\u6267\u884c\u8005\u5728\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u51fa\u73b0\u6545\u969c\uff09\u3002 3PC \u4e09\u9636\u6bb5\u63d0\u4ea4\u9488\u5bf9\u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\u7b2c\u4e00\u9636\u6bb5\u4e2d\u53ef\u80fd\u963b\u585e\u90e8\u5206\u6267\u884c\u8005\u7684\u60c5\u51b5\u8fdb\u884c\u4e86\u4f18\u5316\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c06\u9884\u63d0\u4ea4\u9636\u6bb5\u8fdb\u4e00\u6b65\u62c6\u6210\u4e24\u4e2a\u6b65\u9aa4\uff1a\u5c1d\u8bd5\u9884\u63d0\u4ea4\u548c\u9884\u63d0\u4ea4\u3002 \u5c1d\u8bd5\u9884\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u8be2\u95ee\u6267\u884c\u8005\u662f\u5426\u80fd\u8fdb\u884c\u67d0\u4e2a\u4e8b\u52a1\u7684\u63d0\u4ea4\u3002\u6267\u884c\u8005\u9700\u8981\u8fd4\u56de\u7b54\u590d\uff0c\u4f46\u65e0\u9700\u6267\u884c\u63d0\u4ea4\u3002\u8fd9\u5c31\u907f\u514d\u51fa\u73b0\u90e8\u5206\u6267\u884c\u8005\u88ab\u65e0\u6548\u963b\u585e\u4f4f\u7684\u60c5\u51b5\u3002 \u9884\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u68c0\u67e5\u6536\u96c6\u5230\u7684\u7b54\u590d\uff0c\u5982\u679c\u5168\u90e8\u4e3a\u771f\uff0c\u5219\u53d1\u8d77\u63d0\u4ea4\u4e8b\u52a1\u8bf7\u6c42\u3002\u5404\u53c2\u4e0e\u6267\u884c\u8005\uff08Participant\uff09\u9700\u8981\u5c1d\u8bd5\u8fdb\u884c\u63d0\u4ea4\u5e76\u53cd\u9988\u662f\u5426\u80fd\u5b8c\u6210\uff1b \u6b63\u5f0f\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u5982\u679c\u5f97\u5230\u6240\u6709\u6267\u884c\u8005\u7684\u6210\u529f\u7b54\u590d\uff0c\u5219\u53d1\u51fa\u6b63\u5f0f\u63d0\u4ea4\u8bf7\u6c42\u3002\u5982\u679c\u6210\u529f\u5b8c\u6210\uff0c\u5219\u7b97\u6cd5\u6267\u884c\u6210\u529f\u3002 \u65e0\u8bba\u4e24\u9636\u6bb5\u8fd8\u662f\u4e09\u9636\u6bb5\u63d0\u4ea4\uff0c\u90fd\u53ea\u662f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7f13\u89e3\u4e86\u63d0\u4ea4\u51b2\u7a81\u7684\u95ee\u9898\uff0c\u5e76\u65e0\u6cd5\u4e00\u5b9a\u4fdd\u8bc1\u7cfb\u7edf\u7684\u4e00\u81f4\u6027\u3002\u9996\u4e2a\u6709\u6548\u7684\u7b97\u6cd5\u662f\u540e\u6765\u63d0\u51fa\u7684 Paxos \u7b97\u6cd5\u3002 2.3\u53ef\u7528\u6027 \u8861\u91cf\u53ef\u9760\u6027\u4e00\u822c\u6709SLA\uff0c\u5373\u201c\u51e0\u4e2a 9\u201d\u7684\u6307\u6807\u6765\u8861\u91cf\u3002 \u63d0\u9ad8\u53ef\u9760\u6027\u4e3b\u8981\u7531\u4e24\u4e2a\u65b9\u5f0f \u4e00\u662f\uff0c\u8ba9\u7cfb\u7edf\u4e2d\u7684\u7ec4\u4ef6\u90fd\u53d8\u5f97\u53ef\u9760 \u4f7f\u7528\u751f\u4ea7\u7ea7\u522b\u7684\u8bbe\u5907\uff0c\u5982\u81ea\u7ea0\u9519\u5185\u5b58\u3001\u751f\u4ea7\u7ea7\u8def\u7531\u7b49\u7b49\u3002 \u4e8c\u662f\uff0c\u5e72\u8106\u6d88\u706d\u5355\u70b9 \u8ba9\u5355\u70b9\u7684\u670d\u52a1\uff0c\u4ee5\u4e3b\u4ece\u5f62\u5f0f\u3001\u6216\u8005\u591a\u6d3b\u7b49\u6a21\u5f0f\u8fdb\u884c\u670d\u52a1\u3002 3\u5e94\u7528\u573a\u666f \u5177\u4f53\u7684\u573a\u666f\uff0c\u7b97\u6cd5\uff0c\u6280\u672f\u7ec4\u4ef6\u5982\u4e0b\u8868\u793a CAP \u573a\u666f\u3001\u7b97\u6cd5\u3001\u7ec4\u4ef6 \u89e3\u91ca CA \u975e\u5206\u5e03\u5f0f\u573a\u666f\uff0c\u4e00\u822c\u5355\u673a\u73af\u5883\u4e0b\u80fd\u591f\u540c\u65f6\u5bf9\u4e00\u81f4\u6027\u548c\u9ad8\u53ef\u7528\u8fdb\u884c\u4fdd\u8bc1 \u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684P\uff0c\u5206\u533a\u4e00\u5b9a\u4f1a\u53d1\u751f\uff0c\u6ca1\u6709P\u5219\u4e0d\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002 CP Paxos\u3001Raft\u7b49\u7b97\u6cd5\uff0c\u4f8b\u5982\u91d1\u878d\u8ba1\u7b97\u7b49\u573a\u666f\uff0c\u6280\u672f\u7ec4\u4ef6\u6709Redis\u3001ETCD\u7b49\u7b49 \u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\uff0c\u524a\u5f31\u53ef\u7528\u6027 AP Gossip\u7b49\u534f\u8bae\uff0c\u5b9e\u65f6\u6027\u8f83\u5f31\u7684\u67e5\u8be2\u7c7b\u6570\u636e\u5e93\u3001\u7f51\u7ad9\u9759\u6001\u9875\u9762\u5185\u5bb9\u7b49\u7b49\uff0c\u6280\u672f\u7ec4\u4ef6\u5982Cassandra\u7b49 \u4fdd\u8bc1\u53ef\u7528\u6027\uff0c\u5f31\u5316\u4e00\u81f4\u6027 \u53e6\u5916\uff0c\u524a\u5f31\u5206\u533a\u5bb9\u5fcd\u6027\u5e26\u6765\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e0b\u51e0\u79cd\u65b9\u5f0f \u4e24\u9636\u6bb5\u63d0\u4ea4\uff0c \u7f51\u7edc\u901a\u8fc7\u53cc\u901a\u9053\u6765\u589e\u5f3a\u53ef\u9760\u6027\u3002 \u66f4\u597d\u7684cap\u89e3\u91ca https://dzone.com/articles/better-explaining-cap-theorem \u21a9","title":"CAP\u7406\u8bba"},{"location":"cs/distributed/cap/#cap","text":"","title":"CAP \u7406\u8bba"},{"location":"cs/distributed/cap/#1","text":"CAP\u7406\u8bba \u5728\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c CAP\u5b9a\u7406 \uff08CAP theorem\uff09\uff0c\u53c8\u88ab\u79f0\u4f5c \u5e03\u9c81\u5c14\u5b9a\u7406 \uff08Brewer's theorem\uff09\uff0c\u5b83\u6307\u51fa\u5bf9\u4e8e\u4e00\u4e2a\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u6765\u8bf4\uff0c\u4e0d\u53ef\u80fd\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u70b9\uff1a \u4e00\u81f4\u6027\uff08Consistency\uff09 \u7b49\u540c\u4e8e\u6240\u6709\u8282\u70b9\u8bbf\u95ee\u540c\u4e00\u4efd\u6700\u65b0\u7684\u6570\u636e\u526f\u672c \u53ef\u7528\u6027\uff08Availability\uff09\u6bcf\u6b21\u8bf7\u6c42\u90fd\u80fd\u83b7\u53d6\u5230\u975e\u9519\u7684\u54cd\u5e94\u2014\u2014\u4f46\u662f\u4e0d\u4fdd\u8bc1\u83b7\u53d6\u7684\u6570\u636e\u4e3a\u6700\u65b0\u6570\u636e \u5206\u533a\u5bb9\u9519\u6027\uff08Partition tolerance\uff09\u4ee5\u5b9e\u9645\u6548\u679c\u800c\u8a00\uff0c\u5206\u533a\u76f8\u5f53\u4e8e\u5bf9\u901a\u4fe1\u7684\u65f6\u9650\u8981\u6c42\u3002\u7cfb\u7edf\u5982\u679c\u4e0d\u80fd\u5728\u65f6\u9650\u5185\u8fbe\u6210\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5c31\u610f\u5473\u7740\u53d1\u751f\u4e86\u5206\u533a\u7684\u60c5\u51b5\uff0c\u5fc5\u987b\u5c31\u5f53\u524d\u64cd\u4f5c\u5728C\u548cA\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002 \u4eceCAP\u7406\u8bba\u4e2d\u6211\u4eec\u77e5\u9053\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e09\u8005\u662f\u4e0d\u53ef\u80fd\u7684\u3002","title":"1\u5b9a\u4e49"},{"location":"cs/distributed/cap/#2","text":"","title":"2\u89e3\u91ca"},{"location":"cs/distributed/cap/#21","text":"\u4e3a\u4e86\u6d88\u9664\u8ff7\u601d\uff0c\u6211\u4eec\u5fc5\u987b\u5f04\u6e05\u695a\uff0c\u4ec0\u4e48\u662f \u5206\u533a\u5bb9\u5fcd\u6027 \uff0c P\u662f\u4ec0\u4e48\uff1a \u5206\u533a\u5bb9\u5fcd\u6027\u8bf4\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u6a21\u7cca\u7684\u6982\u5ff5\uff0c\u4e0b\u9762\u5f15\u5165\u4e24\u4e2a\u8bf4\u6cd5\u8fdb\u884c\u7406\u89e3\u3002 Stonebraker\u535a\u58eb\u65ad\u8a00\uff0c\u5982\u679c\u7f51\u7edc\u6545\u969c\u65f6\uff0c\u5206\u533a\u4e24\u8fb9\u7684\u5904\u7406\u53ef\u4ee5\u7ee7\u7eed\uff0c\u90a3\u5c31\u662f\u5206\u533a\u5bb9\u5fcd\u7684\u3002 Gilbert\u548cLynch\u662f\u8fd9\u6837\u5b9a\u4e49\u5206\u533a\u5bb9\u5fcd\u6027\u7684\uff1a\u7f51\u7edc\u5141\u8bb8\u4e22\u5931\u4ee5\u4e00\u4e2a\u8282\u70b9\u53d1\u7ed9\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u4efb\u610f\u591a\u7684\u6d88\u606f\u3002 \u6211\u4eec\u65e0\u6cd5\u6784\u5efa\u5b8c\u5168\u53ef\u9760\u7684\u7f51\u7edc\u548c\u7cfb\u7edf\u6765\u6d88\u9664\uff0c\u6784\u5efa\u5b8c\u5168\u6ca1\u6709\u4e22\u5305\u3001\u5ef6\u8fdf\u3001\u6216\u8005\u7edd\u4e0d\u51fa\u73b0\u95ee\u9898\u7684\u7f51\u7edc\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u3002\u4e0d\u540c\u5206\u533a\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6d41\u7684\u6545\u969c\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0cP\u4e00\u5b9a\u4f1a\u53d1\u751f\uff0c\u5426\u5219\u4e5f\u4e0d\u4f1a\u662f\u5206\u5e03\u5f0f\u4e86\u3002 \u6240\u4ee5\uff0c\u5927\u90e8\u5206\u65f6\u5019\u6211\u4eec\u9700\u8981\u5728A\u548cC\u4e2d\u6743\u8861\uff0c \u56e0\u4e3a\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684P\uff0c\u5206\u533a\u4e00\u5b9a\u4f1a\u53d1\u751f \uff0c\u8fd9\u5176\u5b9e\u662fA\u548cC\u7684\u6218\u4e89 1 \u3002 \u5982\u679c\u9009\u62e9\u4e86C\uff0c\u5219\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u8fd9\u6837\u5219\u4f1a\u653e\u5f03\u6389\u4e00\u5b9a\u7684\u53ef\u7528\u6027\uff0c\u5176\u4ed6\u5206\u533a\u53ef\u80fd\u4e0d\u4f1a\u7acb\u5373\u786e\u8ba4\u5f53\u524d\u5206\u533a\u6570\u636e\u662f\u5426\u4e00\u81f4\u3002 \u5982\u679c\u9009\u62e9\u4e86A\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u9ad8\u53ef\u7528\uff0c\u6570\u636e\u53ef\u80fd\u76f4\u63a5\u4f1a\u4ece\u5f53\u524d\u5206\u533a\u8fd4\u56de\uff0c\u4f46\u662f\u548c\u5176\u4ed6\u5206\u533a\u4e2d\u7684\u6570\u636e\u4e0d\u4e00\u81f4","title":"2.1 \u5206\u533a\u5bb9\u5fcd\u6027"},{"location":"cs/distributed/cap/#22","text":"\u5728\u5b9e\u73b0\u4e00\u81f4\u6027\u4e2d\uff0c\u4f1a\u6709\u4e24\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u539f\u5219\u548c\u7406\u8bba\uff0c ACID \u4ee5\u53ca BASE \u3002","title":"2.2\u4e00\u81f4\u6027"},{"location":"cs/distributed/cap/#221-acid","text":"\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u6709\u975e\u5e38\u7ecf\u5178\u7684 ACID \u6765\u63cf\u8ff0\u4e00\u81f4\u6027\u9700\u6c42\uff0c\u4e5f\u5c31\u662f\u5e38\u51fa\u73b0\u5728\u6570\u636e\u5e93\u7684\u4fdd\u8bc1\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\u4e2d\u3002\uff0c\u5373 \u539f\u5b50\u6027Atomicity \uff0c \u4e00\u81f4\u6027Consistency \uff0c \u9694\u79bb\u6027Isolation \uff0c \u6301\u4e45\u6027 Durability \u3002 ACID \u6ee1\u8db3\u4e86\u4e00\u81f4\u6027\u9700\u6c42\uff0c\u4f46\u662f\u727a\u7272\u4e86\u90e8\u5206\u7684\u53ef\u7528\u6027\u4f5c\u4e3a\u4ee3\u4ef7\u3002 Atomicity \uff1a\u6bcf\u6b21\u4e8b\u52a1\u7684\u63d0\u4ea4\u662f\u539f\u5b50\u7684\uff0c\u8981\u4e48\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e48\u5168\u90e8\u5931\u8d25\u3002\u4e00\u65e6\u4ea7\u751f\u4e86\u5931\u8d25\u5219\u4f1a\u9000\u5230\u4e8b\u52a1\u6267\u884c\u4e4b\u524d\u7684\u72b6\u6001\u3002 Consistency \uff1a\u6570\u636e\u5e93\u72b6\u6001\u5728\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\u524d\u548c\u5b8c\u6210\u540e\u662f\u4e00\u76f4\u548c\u5b8c\u6574\u7684\uff0c\u6ca1\u6709\u4e2d\u95f4\u72b6\u6001\u5b58\u5728\u3002\u53ea\u80fd\u5904\u4e8e\u4e8b\u52a1\u6267\u884c\u6210\u529f\u4e4b\u540e\u7684\u72b6\u6001\u3002 Isolation \uff1a\u5404\u79cd\u4e8b\u52a1\u662f\u72ec\u7acb\u6267\u884c\u7684\uff0c\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002\u5728SQL\u6807\u51c6\u4e2d\uff0c\u4f1a\u6709\u56db\u79cd\u9694\u79bb\u7ea7\u522b\uff0c\u7531\u5f31\u5230\u5f3a\uff1a\u672a\u6388\u6743\u8bfb\uff08\u672a\u63d0\u4ea4\u8bfbRead Uncommitted\uff09\u3001\u6388\u6743\u8bfb\uff08\u63d0\u4ea4\u8bfbRead Committed\uff09\u3001\u53ef\u91cd\u590d\u8bfb\uff08 Repeated Read\uff09\u548c\u4e32\u884c\u5316\uff08Serializable\uff09\u3002 Durability \uff1a\u72b6\u6001\u4fee\u6539\u540e\uff0c\u6539\u53d8\u662f\u6301\u4e45\u7684\uff0c\u4e0d\u4f1a\u5931\u6548\u3002\u4e00\u65e6\u67d0\u4e2a\u4e8b\u7269\u63d0\u4ea4\uff0c\u5b83\u5e26\u6765\u7684\u6539\u53d8\u5c31\u662f\u6c38\u4e45\u7684\u3002","title":"2.2.1 ACID"},{"location":"cs/distributed/cap/#222-base","text":"CAP\u7406\u8bba\u7684\u63d0\u51fa\u8005Brewer\u6307\u51fa\uff1a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u8ba1\u7b97\u662f\u76f8\u5bf9\u5bb9\u6613\u7684\uff0c\u771f\u6b63\u56f0\u96be\u7684\u662f\u72b6\u6001\u7684\u7ef4\u62a4\u3002\u90a3\u4e48\u5bf9\u4e8e\u5206\u5e03\u5f0f\u5b58\u50a8\u6216\u8005\u8bf4\u6570\u636e\u5171\u4eab\u7cfb\u7edf\uff0c\u6570\u636e\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\u4e5f\u662f\u6bd4\u8f83\u56f0\u96be\u7684\u3002\u5bf9\u4e8e\u4f20\u7edf\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f18\u5148\u8003\u8651\u7684\u662f\u4e00\u81f4\u6027\u800c\u4e0d\u662f\u53ef\u7528\u6027\uff0c\u56e0\u6b64\u63d0\u51fa\u4e86\u4e8b\u52a1\u7684ACID\u7279\u6027\u3002\u800c\u5bf9\u4e8e\u8bb8\u591a\u5206\u5e03\u5f0f\u5b58\u50a8\u7cfb\u7edf\uff0c\u5219\u662f\u66f4\u770b\u91cd\u53ef\u7528\u6027\u800c\u4e0d\u662f\u4e00\u81f4\u6027\uff0c \u4e00\u81f4\u6027\u901a\u8fc7BASE \uff08Basically Available, Soft state, Eventual consistency\uff09\u6765\u4fdd\u8bc1 BASE\u7684\u76ee\u6807\u662f\u5b9e\u73b0 \u6700\u7ec8\u4e00\u81f4\u6027 \uff0c\u6765\u6362\u53d6\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u3002 Tip BASE\u7406\u8bba \u548c ACID\u539f\u5219 \u770b\u8d77\u6765\u662f\u5bf9\u7acb\u7684\uff0c\u5176\u5b9e\u5728CAP\u7406\u8bba\u4e2d\uff0c\u727a\u7272\u4e86\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u524d\u8005\u4fdd\u8bc1\u4e86\u9ad8\u53ef\u7528\uff0c\u540e\u8005\u5219\u662f\u727a\u7272\u4e86\u9ad8\u53ef\u7528\u6765\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002","title":"2.2.2 BASE"},{"location":"cs/distributed/cap/#223-2pc-3pc","text":"\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u81f4\u6027\u7684\u7814\u7a76\u6210\u679c\u5305\u62ec\u8457\u540d\u7684 \u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\uff08Two-phase Commit\uff0c2PC\uff09**\u548c **\u4e09\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\uff08Three-phase Commit\uff0c3PC\uff09 \u3002 2PC \u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\u57fa\u672c\u601d\u60f3\u5341\u5206\u7b80\u5355\uff0c\u65e2\u7136\u5728\u5206\u5e03\u5f0f\u573a\u666f\u4e0b\uff0c\u76f4\u63a5\u63d0\u4ea4\u4e8b\u52a1\u53ef\u80fd\u51fa\u73b0\u5404\u79cd\u6545\u969c\u548c\u51b2\u7a81\uff0c\u90a3\u4e48\u53ef\u5c06\u5176\u5206\u89e3\u4e3a\u9884\u63d0\u4ea4\u548c\u6b63\u5f0f\u63d0\u4ea4\u4e24\u4e2a\u9636\u6bb5\uff0c\u89c4\u907f\u51b2\u7a81\u7684\u98ce\u9669\u3002 \u9884\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\uff08Coordinator\uff09\u53d1\u8d77\u63d0\u4ea4\u67d0\u4e2a\u4e8b\u52a1\u7684\u7533\u8bf7\uff0c\u5404\u53c2\u4e0e\u6267\u884c\u8005\uff08Participant\uff09\u9700\u8981\u5c1d\u8bd5\u8fdb\u884c\u63d0\u4ea4\u5e76\u53cd\u9988\u662f\u5426\u80fd\u5b8c\u6210\uff1b \u6b63\u5f0f\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u5982\u679c\u5f97\u5230\u6240\u6709\u6267\u884c\u8005\u7684\u6210\u529f\u7b54\u590d\uff0c\u5219\u53d1\u51fa\u6b63\u5f0f\u63d0\u4ea4\u8bf7\u6c42\u3002\u5982\u679c\u6210\u529f\u5b8c\u6210\uff0c\u5219\u7b97\u6cd5\u6267\u884c\u6210\u529f\u3002 \u5982\u679c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4efb\u4f55\u6b65\u9aa4\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5219\u56de\u9000\u3002\u5373\u6240\u6709\u7684\u8282\u70b9\u540c\u610f\u4e86\u4e8b\u52a1\uff08\u4e8b\u52a1\u53ef\u4ee5\u5728\u6240\u6709\u8282\u70b9\u8fbe\u6210\uff09\u5219\u63d0\u4ea4\u8be5\u4e8b\u7269\uff0c\u8d1f\u8d23\u653e\u5f03\u3002 \u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\u56e0\u4e3a\u5176\u7b80\u5355\u5bb9\u6613\u5b9e\u73b0\u7684\u4f18\u70b9\uff0c\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7b49\u7cfb\u7edf\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\u3002\u5f53\u7136\uff0c\u5176\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\u3002 \u6574\u4e2a\u8fc7\u7a0b\u9700\u8981\u540c\u6b65\u963b\u585e\u5bfc\u81f4\u6027\u80fd\u4e00\u822c\u8f83\u5dee\uff1b \u540c\u65f6\u5b58\u5728\u5355\u70b9\u95ee\u9898\uff0c\u8f83\u574f\u60c5\u51b5\u4e0b\u53ef\u80fd\u4e00\u76f4\u65e0\u6cd5\u5b8c\u6210\u63d0\u4ea4\uff1b \u53e6\u5916\u53ef\u80fd\u4ea7\u751f\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff08\u4f8b\u5982\u534f\u8c03\u8005\u548c\u6267\u884c\u8005\u5728\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u51fa\u73b0\u6545\u969c\uff09\u3002 3PC \u4e09\u9636\u6bb5\u63d0\u4ea4\u9488\u5bf9\u4e24\u9636\u6bb5\u63d0\u4ea4\u7b97\u6cd5\u7b2c\u4e00\u9636\u6bb5\u4e2d\u53ef\u80fd\u963b\u585e\u90e8\u5206\u6267\u884c\u8005\u7684\u60c5\u51b5\u8fdb\u884c\u4e86\u4f18\u5316\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c06\u9884\u63d0\u4ea4\u9636\u6bb5\u8fdb\u4e00\u6b65\u62c6\u6210\u4e24\u4e2a\u6b65\u9aa4\uff1a\u5c1d\u8bd5\u9884\u63d0\u4ea4\u548c\u9884\u63d0\u4ea4\u3002 \u5c1d\u8bd5\u9884\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u8be2\u95ee\u6267\u884c\u8005\u662f\u5426\u80fd\u8fdb\u884c\u67d0\u4e2a\u4e8b\u52a1\u7684\u63d0\u4ea4\u3002\u6267\u884c\u8005\u9700\u8981\u8fd4\u56de\u7b54\u590d\uff0c\u4f46\u65e0\u9700\u6267\u884c\u63d0\u4ea4\u3002\u8fd9\u5c31\u907f\u514d\u51fa\u73b0\u90e8\u5206\u6267\u884c\u8005\u88ab\u65e0\u6548\u963b\u585e\u4f4f\u7684\u60c5\u51b5\u3002 \u9884\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u68c0\u67e5\u6536\u96c6\u5230\u7684\u7b54\u590d\uff0c\u5982\u679c\u5168\u90e8\u4e3a\u771f\uff0c\u5219\u53d1\u8d77\u63d0\u4ea4\u4e8b\u52a1\u8bf7\u6c42\u3002\u5404\u53c2\u4e0e\u6267\u884c\u8005\uff08Participant\uff09\u9700\u8981\u5c1d\u8bd5\u8fdb\u884c\u63d0\u4ea4\u5e76\u53cd\u9988\u662f\u5426\u80fd\u5b8c\u6210\uff1b \u6b63\u5f0f\u63d0\u4ea4\uff1a\u534f\u8c03\u8005\u5982\u679c\u5f97\u5230\u6240\u6709\u6267\u884c\u8005\u7684\u6210\u529f\u7b54\u590d\uff0c\u5219\u53d1\u51fa\u6b63\u5f0f\u63d0\u4ea4\u8bf7\u6c42\u3002\u5982\u679c\u6210\u529f\u5b8c\u6210\uff0c\u5219\u7b97\u6cd5\u6267\u884c\u6210\u529f\u3002 \u65e0\u8bba\u4e24\u9636\u6bb5\u8fd8\u662f\u4e09\u9636\u6bb5\u63d0\u4ea4\uff0c\u90fd\u53ea\u662f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7f13\u89e3\u4e86\u63d0\u4ea4\u51b2\u7a81\u7684\u95ee\u9898\uff0c\u5e76\u65e0\u6cd5\u4e00\u5b9a\u4fdd\u8bc1\u7cfb\u7edf\u7684\u4e00\u81f4\u6027\u3002\u9996\u4e2a\u6709\u6548\u7684\u7b97\u6cd5\u662f\u540e\u6765\u63d0\u51fa\u7684 Paxos \u7b97\u6cd5\u3002","title":"2.2.3 \"2PC\"\u548c \"3PC\""},{"location":"cs/distributed/cap/#23","text":"\u8861\u91cf\u53ef\u9760\u6027\u4e00\u822c\u6709SLA\uff0c\u5373\u201c\u51e0\u4e2a 9\u201d\u7684\u6307\u6807\u6765\u8861\u91cf\u3002 \u63d0\u9ad8\u53ef\u9760\u6027\u4e3b\u8981\u7531\u4e24\u4e2a\u65b9\u5f0f \u4e00\u662f\uff0c\u8ba9\u7cfb\u7edf\u4e2d\u7684\u7ec4\u4ef6\u90fd\u53d8\u5f97\u53ef\u9760 \u4f7f\u7528\u751f\u4ea7\u7ea7\u522b\u7684\u8bbe\u5907\uff0c\u5982\u81ea\u7ea0\u9519\u5185\u5b58\u3001\u751f\u4ea7\u7ea7\u8def\u7531\u7b49\u7b49\u3002 \u4e8c\u662f\uff0c\u5e72\u8106\u6d88\u706d\u5355\u70b9 \u8ba9\u5355\u70b9\u7684\u670d\u52a1\uff0c\u4ee5\u4e3b\u4ece\u5f62\u5f0f\u3001\u6216\u8005\u591a\u6d3b\u7b49\u6a21\u5f0f\u8fdb\u884c\u670d\u52a1\u3002","title":"2.3\u53ef\u7528\u6027"},{"location":"cs/distributed/cap/#3","text":"\u5177\u4f53\u7684\u573a\u666f\uff0c\u7b97\u6cd5\uff0c\u6280\u672f\u7ec4\u4ef6\u5982\u4e0b\u8868\u793a CAP \u573a\u666f\u3001\u7b97\u6cd5\u3001\u7ec4\u4ef6 \u89e3\u91ca CA \u975e\u5206\u5e03\u5f0f\u573a\u666f\uff0c\u4e00\u822c\u5355\u673a\u73af\u5883\u4e0b\u80fd\u591f\u540c\u65f6\u5bf9\u4e00\u81f4\u6027\u548c\u9ad8\u53ef\u7528\u8fdb\u884c\u4fdd\u8bc1 \u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684P\uff0c\u5206\u533a\u4e00\u5b9a\u4f1a\u53d1\u751f\uff0c\u6ca1\u6709P\u5219\u4e0d\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002 CP Paxos\u3001Raft\u7b49\u7b97\u6cd5\uff0c\u4f8b\u5982\u91d1\u878d\u8ba1\u7b97\u7b49\u573a\u666f\uff0c\u6280\u672f\u7ec4\u4ef6\u6709Redis\u3001ETCD\u7b49\u7b49 \u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\uff0c\u524a\u5f31\u53ef\u7528\u6027 AP Gossip\u7b49\u534f\u8bae\uff0c\u5b9e\u65f6\u6027\u8f83\u5f31\u7684\u67e5\u8be2\u7c7b\u6570\u636e\u5e93\u3001\u7f51\u7ad9\u9759\u6001\u9875\u9762\u5185\u5bb9\u7b49\u7b49\uff0c\u6280\u672f\u7ec4\u4ef6\u5982Cassandra\u7b49 \u4fdd\u8bc1\u53ef\u7528\u6027\uff0c\u5f31\u5316\u4e00\u81f4\u6027 \u53e6\u5916\uff0c\u524a\u5f31\u5206\u533a\u5bb9\u5fcd\u6027\u5e26\u6765\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e0b\u51e0\u79cd\u65b9\u5f0f \u4e24\u9636\u6bb5\u63d0\u4ea4\uff0c \u7f51\u7edc\u901a\u8fc7\u53cc\u901a\u9053\u6765\u589e\u5f3a\u53ef\u9760\u6027\u3002 \u66f4\u597d\u7684cap\u89e3\u91ca https://dzone.com/articles/better-explaining-cap-theorem \u21a9","title":"3\u5e94\u7528\u573a\u666f"},{"location":"cs/linux/linux/","text":"","title":"linux"},{"location":"cs/network/tcp/","text":"\u4eceTCP\u8bf4\u8d77 TCP TCP\u4f5c\u4e3a\u53ef\u9760\u6027\u534f\u8bae\uff0c\u5b83\u662f\u5982\u4f55\u4fdd\u6301\u4f20\u8f93\u7684\u53ef\u9760\u6027\u5462\uff1f \u9996\u5148\u53ef\u9760\u5fc5\u987b\u5bf9\u5404\u79cd\u72b6\u6001\u8fdb\u884c\u8bb0\u5f55\uff0c\u5982\u4f55\u786e\u7acb\u72b6\u6001\u7684 \u5efa\u7acb\u4e86\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6765\u4fdd\u8bc1\u4e86TCP\u7684\u7279\u6027 \u5982\u4f55\u4fdd\u8bc1TCP\u9762\u5bf9\u9ed1\u76d2\u7684\u5e95\u5c42\u7f51\u7edc\uff0c\u5982\u4f55\u6765\u611f\u77e5\u7f51\u7edc\u60c5\u51b5\u3002\u6fc0\u8fdb\u7684\u62a2\u5360\uff0c\u8fd8\u662f\u4fdd\u5b88\u7684\u9000\u7f29\uff1f TCP\u7684\u5305\u5934\u683c\u5f0f 32bit\u5bbd\u5ea6\u3002 \u6e90\u7aef\u53e3\u53f7 \u76ee\u6807\u7aef\u53e3\u53f7 \u786e\u5b9a\u4e86\u5c06\u6570\u636e\u4f20\u9001\u7ed9\u54ea\u4e00\u4e2a\u76d1\u542c\u7684\u5e94\u7528 \u5e8f\u53f7 \u89e3\u51b3\u7684\u4e71\u5e8f\u7684\u95ee\u9898 \u786e\u8ba4\u5e8f\u53f7 \u53d1\u51fa\u53bb\u7684\u5305\u5c31\u4f1a\u6709\u786e\u8ba4\uff0c\u6765\u4fdd\u8bc1\u5df2\u7ecf\u6536\u5230 \u72b6\u6001\u4f4d\u7f6e - \u901a\u8fc7\u6b64\u6765\u7ef4\u62a4\u8fde\u63a5\u72b6\u6001 syn\u53d1\u8d77\u4e00\u4e2a\u8fde\u63a5 ack\u6536\u5230\u56de\u590d rst\u91cd\u65b0\u8fde\u63a5 fin\u7ed3\u675f\u8fde\u63a5\u72b6\u6001 \u2026\u2026 \u7a97\u53e3\u5927\u5c0f \u901a\u8fc7\u6b64\u8fdb\u884c\u6d41\u91cf\u63a7\u5236 \u603b\u7ed3\u8d77\u6765\u6709\u8fd9\u4e9b\u5173\u952e\u8bcd\uff1a \u987a\u5e8f \u4e22\u5305 \u8fde\u63a5\u7ef4\u62a4 \u6d41\u91cf\u63a7\u5236 TCP\u7684\u4e09\u6b21\u63e1\u624b \u4e00\u5f00\u59cb\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u90fd\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002\u73b0\u5b9e\u670d\u52a1\u7aef\u5bf9\u67d0\u4e00\u4e2a\u7aef\u53e3\u8fdb\u884c\u4e86\u76d1\u542c\uff0c\u5904\u4e8eListen\u72b6\u6001\u3002\u7136\u540e\u5ba2\u6237\u7aef\u53d1\u8d77SYN\u76d1\u7406\u8fde\u63a5\uff0c\u5904\u4e8eSYN_SENT\u72b6\u6001\u3002\u670d\u52a1\u7aef\u6536\u5230\u4e86\u53d1\u8d77\u7684\u8fde\u63a5\u8bf7\u6c42\u540e\uff0c\u4f1a\u8fd4\u56deSYN\uff0cack\u5ba2\u6237\u7aef\u7684syn+1\uff0c\u5904\u4e8eSYN_RCVD\u72b6\u6001\u3002\u5ba2\u6237\u7aef\u5728\u6536\u5230\u540e\uff0c\u56de\u590dACK\uff0c\u540c\u65f6ack\u670d\u52a1\u7aef\u7684SYN\uff0c\u5904\u4e8e\u5efa\u7acb\u8fde\u63a5\u7684\u72b6\u6001\u3002\u670d\u52a1\u7aef\u6536\u5230\u4e86\u5ba2\u6237\u7aef\u7684ACK\u540e\u5219\u8fdb\u5165ESTABLESHED\u8f6c\u53f0\u3002\u63e1\u624b\u5b8c\u6bd5\u3002\u53cc\u65b9\u90fd\u5904\u4e8e\u4e00\u6b21\u53d1\u9001\u4e00\u6b21\u63a5\u53d7\u3002\u8fde\u63a5\u5efa\u7acb\u3002 TCP\u7684\u56db\u6b21\u6325\u624b \u65ad\u5f00\u7684\u65f6\u5019\uff0c\u65ad\u5f00\u94fe\u63a5\u7684\u4e00\u65b9A\u53d1\u9001FIN\uff0c\u8fdb\u5165FIN_WAIT_1\u7684\u9636\u6bb5\uff0c\u5f53\u88ab\u65ad\u5f00\u94fe\u63a5\u7684\u4e00\u65b9B\u6536\u5230\u540e\uff0c\u56de\u590d\u4e00\u4e2a\u5df2\u6536\u5230ACK\uff0c\u8fdb\u5165\u5230CLOSE_WAIT\u72b6\u6001\uff0c\u8fd9\u65f6\u5019\uff0cB\u4f1a\u5c06\u6ca1\u6709\u5904\u7406\u5b8c\u7684\u72b6\u6001\u4fe1\u606f\u7b49\u8fdb\u884c\u5904\u7406\u3002A\u6536\u5230\u8bf7\u6c42\u540e\u8fdb\u5165\u5230FIN_WAIT_2\u7684\u72b6\u6001\u3002B\u5904\u7406\u5b8c\u6210\u540e\uff0c\u4f1a\u53d1\u9001FIN\u7ed9A\uff0cA\u6536\u5230\u540e\u56de\u8fdb\u5165\u5230TIME_WAIT\u7684\u72b6\u6001\uff0c\u8fd4\u56de\u7ed9ACK\uff0c\u8fd9\u65f6\u5019A\u8fdb\u5165\u5230TIME_WAIT\u72b6\u6001\uff0c\u7b49\u5f852MSL\uff08\u62a5\u6587\u6700\u5927\u751f\u5b58\u65f6\u95f4\uff09\uff0c\u4ee5\u4fdd\u8bc1\u5982\u679cB\u6700\u540e\u53d1\u9001\u7684FIN\u5728\u7f51\u7edc\u7a7a\u95f4\u4e2d\u6d88\u5931\uff0c\u4e0d\u4f1a\u5bf9\u540e\u7eed\u7684\u8fde\u63a5\u8fdb\u884c\u5f71\u54cd\u3002 \u53ef\u4ee5\u6ce8\u610f\u5230\u5728FIN_WAIT_2\u7684\u9636\u6bb5\u4e0b\uff0c\u5982\u679cB\u4e0d\u8fdb\u884c\u8fd4\u56de\uff0cA\u53ef\u80fd\u5c31\u65e0\u6cd5\u4ece\u8fd9\u4e2a\u72b6\u6001\u4e2d\u5207\u6362\u51fa\u6765\uff0cTCP\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u72b6\u6001\u8fdb\u884c\u5904\u7406\u3002\u4f46\u662f\u5728Linux\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eTCP_FIN_timout\u6765\u8bbe\u7f6e\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u8d85\u65f6\u65f6\u95f4\u3002 \u5982\u4f55\u4fdd\u6301\u53ef\u9760\u6027 \u4fdd\u8bc1\u987a\u5e8f \u9996\u5148\uff0c\u5982\u4f55\u4fdd\u8bc1\u5305\u662f\u987a\u5e8f\u5230\u8fbe\u7684\u3002\u4e0a\u4e00\u4e2a\u5305\u6536\u5230\u4e86\uff0c\u5e94\u7b54\u4e86\uff0c\u5728\u53d1\u9001\u4e00\u4e0b\u4e2a\u3002\u8fd9\u79cd\u6a21\u5f0f\u88ab\u53eb\u505a**\u7d2f\u8ba1\u786e\u8ba4**\u3002 \u5728\u5efa\u7acb\u8fde\u63a5\u4e00\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u5305\u90fd\u4f1a\u6709\u4e00\u4e2aID\uff0c\u7136\u540e\u6309\u7167\u6539ID\u4e00\u4e2a\u4e2a\u7684\u53d1\u9001\uff0c\u786e\u4fdd\u4e0d\u4e22\u5931\u3002 \u4e3a\u4e86\u8bb0\u5f55\u8fd9\u4e9bID\uff0c\u6240\u4ee5TCP\u5fc5\u987b\u5728\u4e24\u7aef\u90fd\u5206\u522b\u5efa\u7acb\u7f13\u5b58\u6765\u8bb0\u5f55\u3002\u5206\u4e3a\u4e86\u56db\u79cd\uff1a \u53d1\u9001\u4e86\u4e14\u786e\u8ba4\u4e86 \u53d1\u9001\u4e86\u8fd8\u672a\u786e\u8ba4 \u6ca1\u6709\u53d1\u9001\u5df2\u7ecf\u5728\u7b49\u5f85\u53d1\u9001 \u6ca1\u6709\u53d1\u9001\u4f46\u662f\u6682\u65f6\u8fd8\u4e0d\u4f1a\u53d1\u9001 \u8fd9\u6837\u6211\u4eec\u53d1\u9001\u7aef\u7ef4\u62a4\u4e86\u4e00\u4e2a\u961f\u5217\uff0c\u63a5\u6536\u7aef\u4f1a\u7ed9\u53d1\u9001\u7aef\u53d1\u9001\u4e00\u4e2a\u7a97\u53e3\u7684\u5927\u5c0f\u53eb\u505a Advertise Window\u3002\u8fd9\u4e2a\u7a97\u53e3\u5305\u542b\u4e862\u548c3\uff0c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u7a97\u53e3\u7684\uff0c\u63a5\u6536\u7aef\u4e0d\u80fd\u8fdb\u884c\u5904\u7406\u3002 \u540c\u65f6\u5728\u63a5\u6536\u7aef\u4e5f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c \u63a5\u53d7\u4e86\uff0c\u786e\u8ba4\u4e86 \u63a5\u53d7\u4e86\uff0c\u672a\u786e\u8ba4 \u8fd8\u6ca1\u63a5\u53d7\uff0c MaxRcvBuffer\uff1a\u6700\u5927\u7f13\u5b58\u7684\u91cf \u63a5\u6536\u7aef\u8ba1\u7b97\u63a5\u53d7\u4e86\u8fd8\u672a\u786e\u8ba4\u7684\u5305\u7684\u6570\u91cf\uff0c\u800cAdvertise Window\u7684\u5927\u5c0f\u5219\u662f\uff0c\u6700\u5927\u7f13\u5b58\u91cf-\u7b49\u5f85\u672a\u786e\u8ba4\u7684\u6570\u91cf\u3002 2\u4e2d\u7684\uff0c\u5305\u53ef\u80fd\u4e0d\u662f\u987a\u5e8f\u7684\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u7a7a\u6863\u5219\uff0c \u53ef\u4ee5\u7acb\u9a6c\u8fdb\u884c\u56de\u590d\uff0c\u4e2d\u95f4\u7684\u7a7a\u7740\u7684\u90e8\u5206\u9700\u8981\u7b49\u5f85\uff0c\u54ea\u6015\u662f\u540e\u7eed\u7684\u5305\u5df2\u7ecf\u5230\u8fbe\u4e86\u3002 \u8d85\u65f6\u91cd\u4f20 \u4e24\u5f20\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u53d1\u9001\u7aef\u5df2\u7ecf\u786e\u8ba4 1,2,3 \u5df2\u7ecf\u5230\u4e86\uff0c\u800c\u63a5\u6536\u7aef\u5df2\u7ecf\u786e\u8ba4\u4e86 4,5 \u5df2\u7ecfack\u4e86\u3002\u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d5\u7684ack\u4e22\u6389\u4e86\u3002 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u8fdb\u884c \u8d85\u65f6\u91cd\u8bd5 \uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5305\u53d1\u9001\u4e86\u4f46\u662f\u6ca1\u6709ack\u7684\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u8d85\u8fc7\u4e86\u4e00\u5b9a\u7684\u65f6\u95f4\u5219\u4f1a\u91cd\u65b0\u8fdb\u884c\u5c1d\u8bd5\u3002\u5982\u4f55\u786e\u8ba4\u8fd9\u4e2a\u8d85\u65f6\u7684\u65f6\u95f4\u5462\uff1f TCP\u4f1a\u91c7\u6837RTT\u7684\u65f6\u95f4\uff0c\u7136\u540e\u52a0\u6743\u5e73\u5747\uff0c\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u4e2a\u503c\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u503c\u662f\u968f\u7740\u7f51\u7edc\u6ce2\u52a8\u800c\u53d8\u5316\u7684\u3002\u5bf9\u5e94\u7684\u7b97\u6cd5\u53eb\u505a \u81ea\u9002\u5e94\u8d85\u65f6\u91cd\u4f20\u7b97\u6cd5 \u3002 \u5982\u679c\u63a5\u7740\u540e\u7eed\u7684\u5305\u4e5f\u5e38\u751f\u4e86\u8d85\u65f6\uff0cTCP\u4f1a \u8d85\u65f6\u65f6\u95f4\u52a0\u500d \u3002\u7b2c\u4e8c\u6b21\u8d85\u65f6\u91cd\u4f20\u7684\u65f6\u95f4\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u6b21\u7684\u4e8c\u500d\u3002\u4e24\u6b21\u8d85\u65f6\u5219\u8bf4\u660e\u7f51\u7edc\u73af\u5883\u5dee\u3002 \u95ee\u9898\uff1a \u8d85\u65f6\u91cd\u4f20\u89e6\u53d1\u7684\u65f6\u95f4\uff0c\u53ef\u80fd\u76f8\u5bf9\u8f83\u957f \uff0c\u5982\u679c\u63a5\u6536\u7aef\u5df2\u7ecf\u77e5\u9053\u62a5\u6587\u4e22\u4e86\uff0c\u5219\u76f4\u63a5\u4f1a\u53d1\u9001\u5197\u4f59ack\u8981\u6c42\u91cd\u4f20\u3002\u5982\u4e0b\uff1a \u5f53\u63a5\u6536\u7aef\uff0c\u6536\u5230\u4e86\u5927\u4e8e\u671f\u671b\u5e8f\u53f7\u7684\u62a5\u6587\u6bb5\u7684\u65f6\u5019\uff0c\uff08\u4e5f\u5c31\u662f\u63d0\u524d\u6536\u5230\u4e86\u4e00\u4e2a\u5305\u7684ack\uff0c\u4e2d\u95f4\u7684\u67d0\u4e2a\u5305ack\u4e22\u4e86\uff09\uff0c\u5c31\u4f1a\u68c0\u6d4b\u5230\u6570\u636e\u6d41\u4e2d\u7684\u95f4\u9694\uff0c\u4f1a\u53d1\u9001\u5197\u4f59\u7684ack\uff0cack\u4f9d\u7136\u662f\u671f\u671b\u63a5\u6536\u5230\u7684\u62a5\u6587\u6bb5\u3002\u5728\u63a5\u6536\u5230\u4e09\u4e2a\u5197\u4f59\u7684ACK\u540e\uff0c\u5c31\u4f1a\u5728\u5b9a\u65f6\u5668\u8fc7\u671f\u4e4b\u524d\uff0c\u91cd\u65b0\u4f20\u9001\u4e22\u5931\u7684\u62a5\u6587\u6bb5\u3002\u4e0d\u7b49\u8d85\u65f6\u4e86\uff0c\u76f4\u63a5\u91cd\u53d1\u3002 \u6d41\u91cf\u63a7\u5236 \u5305\u7684ack\u4e2d\uff0c\u4f1a\u643a\u5e26\u4e00\u4e2a\u7a97\u53e3\u5927\u5c0f\u3002\u5982\u679c\u53d1\u9001\u7684\u6162\u4e86\u5219\u4f1a\u589e\u52a0\u7a97\u53e3\u7684\u5927\u5c0f\u3002\u5982\u679c\u53d1\u9001\u7684\u5feb\u4e86\uff0c\u63a5\u6536\u7aef\u5904\u7406\u4e0d\u8fc7\u6765\uff0c\u5219\u7a97\u53e3\u4f1a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u76f4\u5230\u4e3a0\uff0c\u505c\u6b62\u53d1\u9001\u3002 \u62e5\u585e\u63a7\u5236 \u4e5f\u662f\u57fa\u4e8e\u7a97\u53e3\u5927\u5c0f\u6765\u8fdb\u884c\u63a7\u5236\u7684\uff0c\u524d\u9762\u7684\u6ed1\u52a8\u7a97\u53e3rwnd\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\uff0c\u63a5\u6536\u65b9\u7684\u7f13\u5b58\u88ab\u585e\u6ee1\u3002\u800c\u8fd9\u91cc\u7684\u62e5\u585e\u63a7\u5236cwnd\u5219\u662f\u9632\u6b62\u5c06\u7f51\u7edc\u585e\u6ee1\u3002 \u7528\u4e00\u4e2a\u516c\u5f0f\u6765\u8bf4 LastByteSend - LastByteACKed <= min(cwnd, rwnd) LastByteSend - LastByteACKed <= min(cwnd, rwnd) \uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u62e5\u585e\u7a97\u53e3\u548c\u6ed1\u52a8\u7a97\u53e3\u540c\u65f6\u51b3\u5b9a\u4e86\u63a7\u5236\u7684\u53d1\u9001\u901f\u5ea6\u3002 \u5982\u4f55\u786e\u5b9a\u7f51\u7edc\u662f\u963b\u585e\u8fd8\u662f\u901a\u7545\u5462\uff0c\u5bf9\u4e8eTCP\u6765\u8bf4\u65e0\u6cd5\u76f4\u63a5\u505a\u5230\u3002\u6240\u4ee5TCP\u7684\u62e5\u585e\u63a7\u5236\u5c31\u662f\u5728\u4e0d\u963b\u585e\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u7684\u53d1\u6325\u5e26\u5bbd\uff0c\u62a2\u5360\u8d37\u6b3e\u3002 \u8ba1\u7b97\u7aef\u5230\u7aef\u7f51\u7edc\u5bb9\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e26\u5bbd*\u5f80\u8fd4\u7684\u5ef6\u8fdf\u3002\u62e5\u585e\u63a7\u5236\u4e3b\u8981\u9632\u6b62\u4e22\u5305\u548c\u8d85\u65f6\u91cd\u4f20\u3002\u5982\u679c\u51fa\u73b0\u4e86\u8fd9\u79cd\u60c5\u51b5\u8bf4\u660e\u4e86\uff0c\u53d1\u9001\u901f\u5ea6\u592a\u5feb\u4e86\uff0c\u5bfc\u81f4\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u67d0\u4e2a\u8bbe\u5907\u7684\u7f13\u5b58\u88ab\u5403\u6ee1\u4e86\uff0c\u5bfc\u81f4\u4e22\u5305\u3002 \u6240\u4ee5TCP\u901a\u8fc7 \u6162\u542f\u52a8 \u6765\u8fdb\u884c\u63a7\u5236\u3002\u5f00\u59cb\u4f20\u9001\u4e00\u4e2a\u5305\uff0c\u6536\u5230\u540e\u5728\u53d1\u9001\u4e24\u4e2a\u5305\uff0c\u6210\u6307\u6570\u578b\u589e\u957f\u3002\u5f53\u5230\u4e86\u67d0\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u4e00\u822c\u662f65535\u4e2a\u5b57\u8282\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u5219\u4f1a\u6210\u7ebf\u6027\u589e\u957f\u3002 \u8fd9\u65f6\u5019\uff0c\u5982\u679c\u53d1\u751f\u4e86\u4e22\u5305\uff0c\u5219\u4f1a\u628a\u8be5\u9608\u503c\u8bbe\u7f6e\u4e3a cwnd/2\u3002\u4e0a\u9762\u63d0\u5230\u7684\u8d85\u65f6\u91cd\u4f20\u7b97\u6cd5\u5c31\u4f1a\u53d1\u6325\u4f5c\u7528\u3002 \u4f46\u662f\u4ecd\u7136\u662f\u6709\u95ee\u9898\u7684\uff0c \u4e22\u5305\u5e76\u4e0d\u662f\u610f\u5473\u7740\u901a\u9053\u6ee1\u4e86\uff0c\u7f51\u7edc\u603b\u662f\u4f1a\u4e22\u5305\u7684\uff0c\u8fd9\u65f6\u5019\u4e00\u5473\u7684\u6298\u534a\uff0c\u4e0d\u80fd\u5b8c\u5168\u53d1\u6325\u7f51\u7edc\u6027\u80fd \u4e22\u5305\u53ef\u80fd\u771f\u7684\u662f\u5c06\u4e2d\u95f4\u8bbe\u5907\u586b\u6ee1\uff0c\u4e2d\u95f4\u8bbe\u5907\u7684\u7f13\u5b58\u90fd\u6ee1\u4e86\u5bfc\u81f4\u4e22\u5305\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u7b97\u6cd5\uff0c\u540e\u9762\u51fa\u73b0\u4e86 TCP BBR \u7b97\u6cd5 \uff0c\u4e5f\u662f\u6211\u4eec\u7ecf\u5e38\u53ef\u80fd\u5728nas\u6216\u8005\uff0c\u673a\u573a\u91cc\u9762\u770b\u5230\u7684 BBR\u52a0\u901f\u3002","title":"TCP"},{"location":"cs/network/tcp/#tcp","text":"TCP TCP\u4f5c\u4e3a\u53ef\u9760\u6027\u534f\u8bae\uff0c\u5b83\u662f\u5982\u4f55\u4fdd\u6301\u4f20\u8f93\u7684\u53ef\u9760\u6027\u5462\uff1f \u9996\u5148\u53ef\u9760\u5fc5\u987b\u5bf9\u5404\u79cd\u72b6\u6001\u8fdb\u884c\u8bb0\u5f55\uff0c\u5982\u4f55\u786e\u7acb\u72b6\u6001\u7684 \u5efa\u7acb\u4e86\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6765\u4fdd\u8bc1\u4e86TCP\u7684\u7279\u6027 \u5982\u4f55\u4fdd\u8bc1TCP\u9762\u5bf9\u9ed1\u76d2\u7684\u5e95\u5c42\u7f51\u7edc\uff0c\u5982\u4f55\u6765\u611f\u77e5\u7f51\u7edc\u60c5\u51b5\u3002\u6fc0\u8fdb\u7684\u62a2\u5360\uff0c\u8fd8\u662f\u4fdd\u5b88\u7684\u9000\u7f29\uff1f","title":"\u4eceTCP\u8bf4\u8d77"},{"location":"cs/network/tcp/#tcp_1","text":"32bit\u5bbd\u5ea6\u3002 \u6e90\u7aef\u53e3\u53f7 \u76ee\u6807\u7aef\u53e3\u53f7 \u786e\u5b9a\u4e86\u5c06\u6570\u636e\u4f20\u9001\u7ed9\u54ea\u4e00\u4e2a\u76d1\u542c\u7684\u5e94\u7528 \u5e8f\u53f7 \u89e3\u51b3\u7684\u4e71\u5e8f\u7684\u95ee\u9898 \u786e\u8ba4\u5e8f\u53f7 \u53d1\u51fa\u53bb\u7684\u5305\u5c31\u4f1a\u6709\u786e\u8ba4\uff0c\u6765\u4fdd\u8bc1\u5df2\u7ecf\u6536\u5230 \u72b6\u6001\u4f4d\u7f6e - \u901a\u8fc7\u6b64\u6765\u7ef4\u62a4\u8fde\u63a5\u72b6\u6001 syn\u53d1\u8d77\u4e00\u4e2a\u8fde\u63a5 ack\u6536\u5230\u56de\u590d rst\u91cd\u65b0\u8fde\u63a5 fin\u7ed3\u675f\u8fde\u63a5\u72b6\u6001 \u2026\u2026 \u7a97\u53e3\u5927\u5c0f \u901a\u8fc7\u6b64\u8fdb\u884c\u6d41\u91cf\u63a7\u5236 \u603b\u7ed3\u8d77\u6765\u6709\u8fd9\u4e9b\u5173\u952e\u8bcd\uff1a \u987a\u5e8f \u4e22\u5305 \u8fde\u63a5\u7ef4\u62a4 \u6d41\u91cf\u63a7\u5236","title":"TCP\u7684\u5305\u5934\u683c\u5f0f"},{"location":"cs/network/tcp/#tcp_2","text":"\u4e00\u5f00\u59cb\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u90fd\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002\u73b0\u5b9e\u670d\u52a1\u7aef\u5bf9\u67d0\u4e00\u4e2a\u7aef\u53e3\u8fdb\u884c\u4e86\u76d1\u542c\uff0c\u5904\u4e8eListen\u72b6\u6001\u3002\u7136\u540e\u5ba2\u6237\u7aef\u53d1\u8d77SYN\u76d1\u7406\u8fde\u63a5\uff0c\u5904\u4e8eSYN_SENT\u72b6\u6001\u3002\u670d\u52a1\u7aef\u6536\u5230\u4e86\u53d1\u8d77\u7684\u8fde\u63a5\u8bf7\u6c42\u540e\uff0c\u4f1a\u8fd4\u56deSYN\uff0cack\u5ba2\u6237\u7aef\u7684syn+1\uff0c\u5904\u4e8eSYN_RCVD\u72b6\u6001\u3002\u5ba2\u6237\u7aef\u5728\u6536\u5230\u540e\uff0c\u56de\u590dACK\uff0c\u540c\u65f6ack\u670d\u52a1\u7aef\u7684SYN\uff0c\u5904\u4e8e\u5efa\u7acb\u8fde\u63a5\u7684\u72b6\u6001\u3002\u670d\u52a1\u7aef\u6536\u5230\u4e86\u5ba2\u6237\u7aef\u7684ACK\u540e\u5219\u8fdb\u5165ESTABLESHED\u8f6c\u53f0\u3002\u63e1\u624b\u5b8c\u6bd5\u3002\u53cc\u65b9\u90fd\u5904\u4e8e\u4e00\u6b21\u53d1\u9001\u4e00\u6b21\u63a5\u53d7\u3002\u8fde\u63a5\u5efa\u7acb\u3002","title":"TCP\u7684\u4e09\u6b21\u63e1\u624b"},{"location":"cs/network/tcp/#tcp_3","text":"\u65ad\u5f00\u7684\u65f6\u5019\uff0c\u65ad\u5f00\u94fe\u63a5\u7684\u4e00\u65b9A\u53d1\u9001FIN\uff0c\u8fdb\u5165FIN_WAIT_1\u7684\u9636\u6bb5\uff0c\u5f53\u88ab\u65ad\u5f00\u94fe\u63a5\u7684\u4e00\u65b9B\u6536\u5230\u540e\uff0c\u56de\u590d\u4e00\u4e2a\u5df2\u6536\u5230ACK\uff0c\u8fdb\u5165\u5230CLOSE_WAIT\u72b6\u6001\uff0c\u8fd9\u65f6\u5019\uff0cB\u4f1a\u5c06\u6ca1\u6709\u5904\u7406\u5b8c\u7684\u72b6\u6001\u4fe1\u606f\u7b49\u8fdb\u884c\u5904\u7406\u3002A\u6536\u5230\u8bf7\u6c42\u540e\u8fdb\u5165\u5230FIN_WAIT_2\u7684\u72b6\u6001\u3002B\u5904\u7406\u5b8c\u6210\u540e\uff0c\u4f1a\u53d1\u9001FIN\u7ed9A\uff0cA\u6536\u5230\u540e\u56de\u8fdb\u5165\u5230TIME_WAIT\u7684\u72b6\u6001\uff0c\u8fd4\u56de\u7ed9ACK\uff0c\u8fd9\u65f6\u5019A\u8fdb\u5165\u5230TIME_WAIT\u72b6\u6001\uff0c\u7b49\u5f852MSL\uff08\u62a5\u6587\u6700\u5927\u751f\u5b58\u65f6\u95f4\uff09\uff0c\u4ee5\u4fdd\u8bc1\u5982\u679cB\u6700\u540e\u53d1\u9001\u7684FIN\u5728\u7f51\u7edc\u7a7a\u95f4\u4e2d\u6d88\u5931\uff0c\u4e0d\u4f1a\u5bf9\u540e\u7eed\u7684\u8fde\u63a5\u8fdb\u884c\u5f71\u54cd\u3002 \u53ef\u4ee5\u6ce8\u610f\u5230\u5728FIN_WAIT_2\u7684\u9636\u6bb5\u4e0b\uff0c\u5982\u679cB\u4e0d\u8fdb\u884c\u8fd4\u56de\uff0cA\u53ef\u80fd\u5c31\u65e0\u6cd5\u4ece\u8fd9\u4e2a\u72b6\u6001\u4e2d\u5207\u6362\u51fa\u6765\uff0cTCP\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u72b6\u6001\u8fdb\u884c\u5904\u7406\u3002\u4f46\u662f\u5728Linux\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eTCP_FIN_timout\u6765\u8bbe\u7f6e\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u8d85\u65f6\u65f6\u95f4\u3002","title":"TCP\u7684\u56db\u6b21\u6325\u624b"},{"location":"cs/network/tcp/#_1","text":"","title":"\u5982\u4f55\u4fdd\u6301\u53ef\u9760\u6027"},{"location":"cs/network/tcp/#_2","text":"\u9996\u5148\uff0c\u5982\u4f55\u4fdd\u8bc1\u5305\u662f\u987a\u5e8f\u5230\u8fbe\u7684\u3002\u4e0a\u4e00\u4e2a\u5305\u6536\u5230\u4e86\uff0c\u5e94\u7b54\u4e86\uff0c\u5728\u53d1\u9001\u4e00\u4e0b\u4e2a\u3002\u8fd9\u79cd\u6a21\u5f0f\u88ab\u53eb\u505a**\u7d2f\u8ba1\u786e\u8ba4**\u3002 \u5728\u5efa\u7acb\u8fde\u63a5\u4e00\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u5305\u90fd\u4f1a\u6709\u4e00\u4e2aID\uff0c\u7136\u540e\u6309\u7167\u6539ID\u4e00\u4e2a\u4e2a\u7684\u53d1\u9001\uff0c\u786e\u4fdd\u4e0d\u4e22\u5931\u3002 \u4e3a\u4e86\u8bb0\u5f55\u8fd9\u4e9bID\uff0c\u6240\u4ee5TCP\u5fc5\u987b\u5728\u4e24\u7aef\u90fd\u5206\u522b\u5efa\u7acb\u7f13\u5b58\u6765\u8bb0\u5f55\u3002\u5206\u4e3a\u4e86\u56db\u79cd\uff1a \u53d1\u9001\u4e86\u4e14\u786e\u8ba4\u4e86 \u53d1\u9001\u4e86\u8fd8\u672a\u786e\u8ba4 \u6ca1\u6709\u53d1\u9001\u5df2\u7ecf\u5728\u7b49\u5f85\u53d1\u9001 \u6ca1\u6709\u53d1\u9001\u4f46\u662f\u6682\u65f6\u8fd8\u4e0d\u4f1a\u53d1\u9001 \u8fd9\u6837\u6211\u4eec\u53d1\u9001\u7aef\u7ef4\u62a4\u4e86\u4e00\u4e2a\u961f\u5217\uff0c\u63a5\u6536\u7aef\u4f1a\u7ed9\u53d1\u9001\u7aef\u53d1\u9001\u4e00\u4e2a\u7a97\u53e3\u7684\u5927\u5c0f\u53eb\u505a Advertise Window\u3002\u8fd9\u4e2a\u7a97\u53e3\u5305\u542b\u4e862\u548c3\uff0c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u7a97\u53e3\u7684\uff0c\u63a5\u6536\u7aef\u4e0d\u80fd\u8fdb\u884c\u5904\u7406\u3002 \u540c\u65f6\u5728\u63a5\u6536\u7aef\u4e5f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c \u63a5\u53d7\u4e86\uff0c\u786e\u8ba4\u4e86 \u63a5\u53d7\u4e86\uff0c\u672a\u786e\u8ba4 \u8fd8\u6ca1\u63a5\u53d7\uff0c MaxRcvBuffer\uff1a\u6700\u5927\u7f13\u5b58\u7684\u91cf \u63a5\u6536\u7aef\u8ba1\u7b97\u63a5\u53d7\u4e86\u8fd8\u672a\u786e\u8ba4\u7684\u5305\u7684\u6570\u91cf\uff0c\u800cAdvertise Window\u7684\u5927\u5c0f\u5219\u662f\uff0c\u6700\u5927\u7f13\u5b58\u91cf-\u7b49\u5f85\u672a\u786e\u8ba4\u7684\u6570\u91cf\u3002 2\u4e2d\u7684\uff0c\u5305\u53ef\u80fd\u4e0d\u662f\u987a\u5e8f\u7684\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u7a7a\u6863\u5219\uff0c \u53ef\u4ee5\u7acb\u9a6c\u8fdb\u884c\u56de\u590d\uff0c\u4e2d\u95f4\u7684\u7a7a\u7740\u7684\u90e8\u5206\u9700\u8981\u7b49\u5f85\uff0c\u54ea\u6015\u662f\u540e\u7eed\u7684\u5305\u5df2\u7ecf\u5230\u8fbe\u4e86\u3002","title":"\u4fdd\u8bc1\u987a\u5e8f"},{"location":"cs/network/tcp/#_3","text":"\u4e24\u5f20\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u53d1\u9001\u7aef\u5df2\u7ecf\u786e\u8ba4 1,2,3 \u5df2\u7ecf\u5230\u4e86\uff0c\u800c\u63a5\u6536\u7aef\u5df2\u7ecf\u786e\u8ba4\u4e86 4,5 \u5df2\u7ecfack\u4e86\u3002\u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d5\u7684ack\u4e22\u6389\u4e86\u3002 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u8fdb\u884c \u8d85\u65f6\u91cd\u8bd5 \uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5305\u53d1\u9001\u4e86\u4f46\u662f\u6ca1\u6709ack\u7684\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u8d85\u8fc7\u4e86\u4e00\u5b9a\u7684\u65f6\u95f4\u5219\u4f1a\u91cd\u65b0\u8fdb\u884c\u5c1d\u8bd5\u3002\u5982\u4f55\u786e\u8ba4\u8fd9\u4e2a\u8d85\u65f6\u7684\u65f6\u95f4\u5462\uff1f TCP\u4f1a\u91c7\u6837RTT\u7684\u65f6\u95f4\uff0c\u7136\u540e\u52a0\u6743\u5e73\u5747\uff0c\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u4e2a\u503c\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u503c\u662f\u968f\u7740\u7f51\u7edc\u6ce2\u52a8\u800c\u53d8\u5316\u7684\u3002\u5bf9\u5e94\u7684\u7b97\u6cd5\u53eb\u505a \u81ea\u9002\u5e94\u8d85\u65f6\u91cd\u4f20\u7b97\u6cd5 \u3002 \u5982\u679c\u63a5\u7740\u540e\u7eed\u7684\u5305\u4e5f\u5e38\u751f\u4e86\u8d85\u65f6\uff0cTCP\u4f1a \u8d85\u65f6\u65f6\u95f4\u52a0\u500d \u3002\u7b2c\u4e8c\u6b21\u8d85\u65f6\u91cd\u4f20\u7684\u65f6\u95f4\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u6b21\u7684\u4e8c\u500d\u3002\u4e24\u6b21\u8d85\u65f6\u5219\u8bf4\u660e\u7f51\u7edc\u73af\u5883\u5dee\u3002 \u95ee\u9898\uff1a \u8d85\u65f6\u91cd\u4f20\u89e6\u53d1\u7684\u65f6\u95f4\uff0c\u53ef\u80fd\u76f8\u5bf9\u8f83\u957f \uff0c\u5982\u679c\u63a5\u6536\u7aef\u5df2\u7ecf\u77e5\u9053\u62a5\u6587\u4e22\u4e86\uff0c\u5219\u76f4\u63a5\u4f1a\u53d1\u9001\u5197\u4f59ack\u8981\u6c42\u91cd\u4f20\u3002\u5982\u4e0b\uff1a \u5f53\u63a5\u6536\u7aef\uff0c\u6536\u5230\u4e86\u5927\u4e8e\u671f\u671b\u5e8f\u53f7\u7684\u62a5\u6587\u6bb5\u7684\u65f6\u5019\uff0c\uff08\u4e5f\u5c31\u662f\u63d0\u524d\u6536\u5230\u4e86\u4e00\u4e2a\u5305\u7684ack\uff0c\u4e2d\u95f4\u7684\u67d0\u4e2a\u5305ack\u4e22\u4e86\uff09\uff0c\u5c31\u4f1a\u68c0\u6d4b\u5230\u6570\u636e\u6d41\u4e2d\u7684\u95f4\u9694\uff0c\u4f1a\u53d1\u9001\u5197\u4f59\u7684ack\uff0cack\u4f9d\u7136\u662f\u671f\u671b\u63a5\u6536\u5230\u7684\u62a5\u6587\u6bb5\u3002\u5728\u63a5\u6536\u5230\u4e09\u4e2a\u5197\u4f59\u7684ACK\u540e\uff0c\u5c31\u4f1a\u5728\u5b9a\u65f6\u5668\u8fc7\u671f\u4e4b\u524d\uff0c\u91cd\u65b0\u4f20\u9001\u4e22\u5931\u7684\u62a5\u6587\u6bb5\u3002\u4e0d\u7b49\u8d85\u65f6\u4e86\uff0c\u76f4\u63a5\u91cd\u53d1\u3002","title":"\u8d85\u65f6\u91cd\u4f20"},{"location":"cs/network/tcp/#_4","text":"\u5305\u7684ack\u4e2d\uff0c\u4f1a\u643a\u5e26\u4e00\u4e2a\u7a97\u53e3\u5927\u5c0f\u3002\u5982\u679c\u53d1\u9001\u7684\u6162\u4e86\u5219\u4f1a\u589e\u52a0\u7a97\u53e3\u7684\u5927\u5c0f\u3002\u5982\u679c\u53d1\u9001\u7684\u5feb\u4e86\uff0c\u63a5\u6536\u7aef\u5904\u7406\u4e0d\u8fc7\u6765\uff0c\u5219\u7a97\u53e3\u4f1a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u76f4\u5230\u4e3a0\uff0c\u505c\u6b62\u53d1\u9001\u3002","title":"\u6d41\u91cf\u63a7\u5236"},{"location":"cs/network/tcp/#_5","text":"\u4e5f\u662f\u57fa\u4e8e\u7a97\u53e3\u5927\u5c0f\u6765\u8fdb\u884c\u63a7\u5236\u7684\uff0c\u524d\u9762\u7684\u6ed1\u52a8\u7a97\u53e3rwnd\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\uff0c\u63a5\u6536\u65b9\u7684\u7f13\u5b58\u88ab\u585e\u6ee1\u3002\u800c\u8fd9\u91cc\u7684\u62e5\u585e\u63a7\u5236cwnd\u5219\u662f\u9632\u6b62\u5c06\u7f51\u7edc\u585e\u6ee1\u3002 \u7528\u4e00\u4e2a\u516c\u5f0f\u6765\u8bf4 LastByteSend - LastByteACKed <= min(cwnd, rwnd) LastByteSend - LastByteACKed <= min(cwnd, rwnd) \uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u62e5\u585e\u7a97\u53e3\u548c\u6ed1\u52a8\u7a97\u53e3\u540c\u65f6\u51b3\u5b9a\u4e86\u63a7\u5236\u7684\u53d1\u9001\u901f\u5ea6\u3002 \u5982\u4f55\u786e\u5b9a\u7f51\u7edc\u662f\u963b\u585e\u8fd8\u662f\u901a\u7545\u5462\uff0c\u5bf9\u4e8eTCP\u6765\u8bf4\u65e0\u6cd5\u76f4\u63a5\u505a\u5230\u3002\u6240\u4ee5TCP\u7684\u62e5\u585e\u63a7\u5236\u5c31\u662f\u5728\u4e0d\u963b\u585e\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u7684\u53d1\u6325\u5e26\u5bbd\uff0c\u62a2\u5360\u8d37\u6b3e\u3002 \u8ba1\u7b97\u7aef\u5230\u7aef\u7f51\u7edc\u5bb9\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e26\u5bbd*\u5f80\u8fd4\u7684\u5ef6\u8fdf\u3002\u62e5\u585e\u63a7\u5236\u4e3b\u8981\u9632\u6b62\u4e22\u5305\u548c\u8d85\u65f6\u91cd\u4f20\u3002\u5982\u679c\u51fa\u73b0\u4e86\u8fd9\u79cd\u60c5\u51b5\u8bf4\u660e\u4e86\uff0c\u53d1\u9001\u901f\u5ea6\u592a\u5feb\u4e86\uff0c\u5bfc\u81f4\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u67d0\u4e2a\u8bbe\u5907\u7684\u7f13\u5b58\u88ab\u5403\u6ee1\u4e86\uff0c\u5bfc\u81f4\u4e22\u5305\u3002 \u6240\u4ee5TCP\u901a\u8fc7 \u6162\u542f\u52a8 \u6765\u8fdb\u884c\u63a7\u5236\u3002\u5f00\u59cb\u4f20\u9001\u4e00\u4e2a\u5305\uff0c\u6536\u5230\u540e\u5728\u53d1\u9001\u4e24\u4e2a\u5305\uff0c\u6210\u6307\u6570\u578b\u589e\u957f\u3002\u5f53\u5230\u4e86\u67d0\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u4e00\u822c\u662f65535\u4e2a\u5b57\u8282\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u5219\u4f1a\u6210\u7ebf\u6027\u589e\u957f\u3002 \u8fd9\u65f6\u5019\uff0c\u5982\u679c\u53d1\u751f\u4e86\u4e22\u5305\uff0c\u5219\u4f1a\u628a\u8be5\u9608\u503c\u8bbe\u7f6e\u4e3a cwnd/2\u3002\u4e0a\u9762\u63d0\u5230\u7684\u8d85\u65f6\u91cd\u4f20\u7b97\u6cd5\u5c31\u4f1a\u53d1\u6325\u4f5c\u7528\u3002 \u4f46\u662f\u4ecd\u7136\u662f\u6709\u95ee\u9898\u7684\uff0c \u4e22\u5305\u5e76\u4e0d\u662f\u610f\u5473\u7740\u901a\u9053\u6ee1\u4e86\uff0c\u7f51\u7edc\u603b\u662f\u4f1a\u4e22\u5305\u7684\uff0c\u8fd9\u65f6\u5019\u4e00\u5473\u7684\u6298\u534a\uff0c\u4e0d\u80fd\u5b8c\u5168\u53d1\u6325\u7f51\u7edc\u6027\u80fd \u4e22\u5305\u53ef\u80fd\u771f\u7684\u662f\u5c06\u4e2d\u95f4\u8bbe\u5907\u586b\u6ee1\uff0c\u4e2d\u95f4\u8bbe\u5907\u7684\u7f13\u5b58\u90fd\u6ee1\u4e86\u5bfc\u81f4\u4e22\u5305\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u7b97\u6cd5\uff0c\u540e\u9762\u51fa\u73b0\u4e86 TCP BBR \u7b97\u6cd5 \uff0c\u4e5f\u662f\u6211\u4eec\u7ecf\u5e38\u53ef\u80fd\u5728nas\u6216\u8005\uff0c\u673a\u573a\u91cc\u9762\u770b\u5230\u7684 BBR\u52a0\u901f\u3002","title":"\u62e5\u585e\u63a7\u5236"},{"location":"cs/opsys/op/","text":"","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"db/k8s/install/","text":"\u5728Ubuntu20.04\u96c6\u7fa4\u4e0a\u5b89\u88c5Kubernetes\u5b66\u4e60\u96c6\u7fa4 \u5728\u516c\u53f8\u5b9e\u4e60\u7684\u65f6\u5019\uff0c\u6709\u514d\u8d39\u7684Kubernetes\u96c6\u7fa4\u53ef\u4ee5\u4f7f\u7528\u3002\u6700\u8fd1\u56de\u5230\u4e86\u5b66\u6821\uff0c\u60f3\u8981\u7ee7\u7eed\u8fdb\u884c\u5b66\u4e60\uff0c\u8003\u8651\u5230\u6210\u672c\uff0c\u4e0d\u53ef\u80fd\u53bb\u4e91\u5382\u5546\u79df\u4e00\u4e2a\u96c6\u7fa4\u3002 \u521a\u597d\uff0c\u5b9e\u9a8c\u5ba4\uff0c\u6709\u4e94\u53f0\u95f2\u7f6e\u7684\u673a\u5668\uff0c\u4e8e\u662f\u4e0a\u624b\uff0c\u642d\u5efa\u4e00\u4e2a\u96c6\u7fa4\u3002 01\u73af\u5883\u4ecb\u7ecd \u7cfb\u7edf\uff1a ubuntu-20.04.3-live-server-amd64 \u5185\u5b58\uff1a4G CPU\uff1a \u5176\u4e2d k-5 \u8282\u70b9\u88ab\u6211\u62ff\u6765\u8dd1\u65c1\u8def\u7531\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u91c7\u7528\u4e86\u4e00\u4e3b\u56db\u4ece\u7684\u5f62\u5f0f\u8fdb\u884c\u90e8\u7f72\u3002 \u89d2\u8272 \u4e3b\u673a\u540d IP\u5730\u5740 Master k-1 192.168.1.151 Slave k-2 192.168.1.152 Slave k-4 192.168.1.154 Slave k-6 192.168.1.156 \u5982\u679c\u662f\u81ea\u5df1\u5728\u5b9e\u9a8c\u5ba4\u8fdb\u884c\u90e8\u7f72\u7684\u8bdd\uff0c\u9700\u8981\u5bf9IP\u5730\u5740\u8fdb\u884c\u56fa\u5b9a\uff0c\u4ee5\u53ca\u6362\u6e90\u7b49\u7b49\u3002 02\u51c6\u5907\u5de5\u4f5c \u7981\u7528\u4ea4\u6362\u7a7a\u95f4swap \u4e3a\u4ec0\u4e48\u9700\u8981\u7981\u6b62swap\uff1f \u9996\u5148\uff0cswap\u4f1a\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\uff0c\u865a\u62df\u5185\u5b58\u5728\u78c1\u76d8\u4e0a\u8fdb\u884c\u8bbf\u95ee\u7684\u6548\u7387\u4f1a\u5927\u5927\u4e0b\u964d\uff08\u5185\u5b58\u3001IO\uff09\u3002 \u53e6\u5916\uff0c\u5f00\u542f\u4e86swap\uff0c\u901a\u8fc7cgroup\u8fdb\u884c\u5207\u5206\u7684\u5185\u5b58\u5c31\u4f1a\u5931\u6548 \u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2aIssue: https://github.com/kubernetes/kubernetes/issues/53533 \u901a\u8fc7 swapon --show \u53ef\u4ee5\u4ea7\u770b\u5f53\u524d\u7684swap\u5206\u533a sys-2@sys-2:~$ swapon --show NAME TYPE SIZE USED PRIO /swap.img file 3 .8G 0B -2 sys-2@sys-2:~$ sudo swapoff -a \u7f16\u8f91 /etc/fstab \u6587\u4ef6\uff0c\u6ce8\u91ca\u6389\u5f15\u7528swap\u7684\u884c\uff0c\u4fdd\u5b58\u5e76\u91cd\u542f\u540e\u8f93\u5165 sudo swapoff -a \u5373\u53ef\u3002 \u914d\u7f6ehosts sys-2@sys-2:~$ cat /etc/hosts # for kubernetes hosts 192 .168.1.151 k-master 192 .168.1.152 k-2 192 .168.1.154 k-3 192 .168.1.155 k-4 192 .168.1.156 k-6 \u6362\u6e90 \u8fd9\u91cc\u4f7f\u7528\u963f\u91cc\u955c\u50cf\u7ad9\u7684\u6e90\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u91cd\u8981 sys-2@sys-2:~$ cat /etc/apt/sources.list # \u7cfb\u7edf\u6e90 deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse \u6dfb\u52a0k8s\u955c\u50cf \u8bbf\u95ee\uff1a https://mirrors.aliyun.com/kubernetes/ sudo apt-get update && sudo apt-get install -y apt-transport-https curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add - cat /etc/apt/sources.list.d/kubernetes.list <<EOF deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main EOF sudo apt-get update sudo apt-get install -y kubelet kubeadm kubectl \u8fd9\u91cc\u5b89\u88c5\u4e09\u4e2a\u5de5\u5177\uff1a sudo apt-get install -y kubelet kubeadm kubectl docker \u5b89\u88c5docker \u9996\u5148\u9700\u8981\u5b89\u88c5docker sudo apt install docker.io docker\u6362\u6e90 \u4f7f\u7528\u4e03\u725b\u4e91\u4f5c\u4e3a\u955c\u50cf\u6e90 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json <<-'EOF' { \"registry-mirrors\": [\"https://reg-mirror.qiniu.com/\"], \"exec-opts\": [\"native.cgroupdriver=systemd\"] # \u8fd9\u4e00\u884c\u662f } EOF docker\u4ee3\u7406 \u914d\u7f6e\u955c\u50cfpull\u4ee3\u7406\uff0c\u955c\u50cf\u62c9\u53bb\u9700\u8981\u914d\u7f6e\u4ee3\u7406\u4ee5\u63d0\u9ad8\u901f\u5ea6\u3002\u8fd9\u91cc\u6211\u662f\u8bb2\u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6e\u5230\u4e86\u6211\u7684\u5c40\u57df\u7f51\u65c1\u8def\u7531\u91cc\u3002 \u5728\u6267\u884c docker pull \u65f6\uff0c\u662f\u7531\u5b88\u62a4\u8fdb\u7a0b dockerd \u6765\u6267\u884c\u3002 \u56e0\u6b64\uff0c\u4ee3\u7406\u9700\u8981\u914d\u5728 dockerd \u7684\u73af\u5883\u4e2d\u3002 \u800c\u8fd9\u4e2a\u73af\u5883\uff0c\u5219\u662f\u53d7 systemd \u6240\u7ba1\u63a7\uff0c\u56e0\u6b64\u5b9e\u9645\u662f systemd \u7684\u914d\u7f6e\u3002 sudo mkdir -p /etc/systemd/system/docker.service.d sudo touch /etc/systemd/system/docker.service.d/proxy.conf sudo vim /etc/systemd/system/docker.service.d/proxy.conf \u5728\u8fd9\u4e2a proxy.conf \u6587\u4ef6\uff08\u53ef\u4ee5\u662f\u4efb\u610f *.conf \u7684\u5f62\u5f0f\uff09\u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a [Service] Environment = \"HTTP_PROXY=http://192.168.1.191:7893/\" Environment = \"HTTPS_PROXY=http://192.168.1.191:7893/\" \u89e3\u51b3kubelet \u548cdocker \u8d44\u6e90\u9694\u79bb\u4e0d\u4e00\u81f4 kubelet\u9ed8\u8ba4\u7684\u9694\u79bb\u9a71\u52a8\u662fsystemd\uff0c\u4f46\u662fdocker\u9ed8\u8ba4\u7684\u9a71\u52a8\u4e3acgroups\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u884c\u6307\u5b9a\u3002 \u7ee7\u7eed\u7f16\u8f91dockerd\u7684\u914d\u7f6e\uff0c\u8bb2cgroup\u7684\u9694\u79bb\u9a71\u52a8\u8bbe\u7f6e\u4e3a systemd sudo vim /etc/docker/daemon.json \"exec-opts\": [\"native.cgroupdriver=systemd\"] \u6700\u540e\uff0c\u91cd\u542fdocker sudo systemctl daemon-reload sudo systemctl restart docker \u914d\u7f6egrub \u4fee\u6539 GRUB_CMDLINE_LINUX=\"\" \u4fee\u6539\u6210\u4e0b\u8ff0\u5167\u5bb9 GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\" sudo vim /etc/default/grub sudo update-grub \u6700\u540e\u91cd\u542f\u670d\u52a1\u5668 sudo reboot 03\u5b89\u88c5k8s master\u8282\u70b9 \u5230\u8fd9\u91cc\u5df2\u7ecf\u53ef\u4ee5\u6109\u5feb\u7684\u88c5Kubernetes\u4e86 kubeadm init --pod-network-cidr = 10 .244.0.0/16 --apiserver-advertise-address = 192 .168.1.151 \u4f60\u9700\u8981\u5c06 --apiserver-advertise-address \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684 \u6267\u884c\u4e4b\u540e\uff0c\u8f93\u51fa\u5982\u4e0b\uff1a sys-1@305-1:~$ sudo kubeadm init --pod-network-cidr = 10 .244.0.0/16 --apiserver-advertise-address = 192 .168.1.151 [ init ] Using Kubernetes version: v1.22.2 [ preflight ] Running pre-flight checks [ preflight ] Pulling images required for setting up a Kubernetes cluster [ preflight ] This might take a minute or two, depending on the speed of your internet connection [ preflight ] You can also perform this action in beforehand using 'kubeadm config images pull' [ certs ] Using certificateDir folder \"/etc/kubernetes/pki\" [ certs ] Generating \"ca\" certificate and key [ certs ] Generating \"apiserver\" certificate and key [ certs ] apiserver serving cert is signed for DNS names [ 305 -1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local ] and IPs [ 10 .96.0.1 192 .168.1.151 ] [ certs ] Generating \"apiserver-kubelet-client\" certificate and key [ certs ] Generating \"front-proxy-ca\" certificate and key [ certs ] Generating \"front-proxy-client\" certificate and key [ certs ] Generating \"etcd/ca\" certificate and key [ certs ] Generating \"etcd/server\" certificate and key [ certs ] etcd/server serving cert is signed for DNS names [ 305 -1 localhost ] and IPs [ 192 .168.1.151 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/peer\" certificate and key [ certs ] etcd/peer serving cert is signed for DNS names [ 305 -1 localhost ] and IPs [ 192 .168.1.151 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/healthcheck-client\" certificate and key [ certs ] Generating \"apiserver-etcd-client\" certificate and key [ certs ] Generating \"sa\" key and public key [ kubeconfig ] Using kubeconfig folder \"/etc/kubernetes\" [ kubeconfig ] Writing \"admin.conf\" kubeconfig file [ kubeconfig ] Writing \"kubelet.conf\" kubeconfig file [ kubeconfig ] Writing \"controller-manager.conf\" kubeconfig file [ kubeconfig ] Writing \"scheduler.conf\" kubeconfig file [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Starting the kubelet [ control-plane ] Using manifest folder \"/etc/kubernetes/manifests\" [ control-plane ] Creating static Pod manifest for \"kube-apiserver\" [ control-plane ] Creating static Pod manifest for \"kube-controller-manager\" [ control-plane ] Creating static Pod manifest for \"kube-scheduler\" [ etcd ] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\" [ wait-control-plane ] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\" . This can take up to 4m0s [ apiclient ] All control plane components are healthy after 16 .507819 seconds [ upload-config ] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace [ kubelet ] Creating a ConfigMap \"kubelet-config-1.22\" in namespace kube-system with the configuration for the kubelets in the cluster [ upload-certs ] Skipping phase. Please see --upload-certs [ mark-control-plane ] Marking the node 305 -1 as control-plane by adding the labels: [ node-role.kubernetes.io/master ( deprecated ) node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers ] [ mark-control-plane ] Marking the node 305 -1 as control-plane by adding the taints [ node-role.kubernetes.io/master:NoSchedule ] [ bootstrap-token ] Using token: wr4p75.xkkku659wiqkeh0f [ bootstrap-token ] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to get nodes [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials [ bootstrap-token ] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token [ bootstrap-token ] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster [ bootstrap-token ] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace [ kubelet-finalize ] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key [ addons ] Applied essential addon: CoreDNS [ addons ] Applied essential addon: kube-proxy Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config Alternatively, if you are the root user, you can run: export KUBECONFIG = /etc/kubernetes/admin.conf You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: # \u901a\u8fc7\u8fd9\u91cc\uff0c\u8bb2\u4ece\u8282\u70b9\u52a0\u5165\u5230 kubeadm join 192 .168.1.151:6443 --token wr4p75.xkkku659wiqkeh0f \\ --discovery-token-ca-cert-hash sha256:9e90cfc7244e7834d660975f4730aca4b79087ef52e4accc0f4aa62a4f0c066e 04\u5c06 slave \u4ece\u8282\u70b9\u52a0\u5165 \u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u51c6\u5907\u5de5\u4f5c\u7684\u8bbe\u7f6e sudo kubeadm join 192 .168.1.151:6443 --token wr4p75.xkkku659wiqkeh0f --discovery-token-ca-cert-hash sha256:9e90cfc7244e7834d660975f4730aca4b79087ef52e4accc0f4aa62a4f0c066e \u53ef\u4ee5\u901a\u8fc7kubectl\u83b7\u53d6\u8282\u70b9\u4fe1\u606f\uff0c\u53d1\u73b0\u8282\u70b9\u8fd8\u662f\u6ca1\u6709\u5c31\u7eea\u3002 sys-1@305-1:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION 305 -1 NotReady control-plane,master 81m v1.22.2 305 -4 NotReady <none> 6m33s v1.22.2 305 -6 NotReady <none> 10s v1.22.2 sys-2 NotReady <none> 55m v1.22.2 \u8fd9\u662f\u56e0\u4e3a\u8fd8\u6ca1\u6709\u6784\u5efa\u7f51\u7edc\u3002 05\u63a5\u5165\u7f51\u7edc \u53ef\u4ee5\u90e8\u7f72 flannel \u4f5c\u4e3a\u7f51\u7edc\u63d2\u4ef6 kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml \u6210\u529f\u90e8\u7f72\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60coredns\uff0c \u4ee5\u53ca\u4f60\u7684node\u90fd\u5df2\u5c31\u7eea\uff01 sys-1@305-1:~$ kubectl get pod -n kube-system -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES coredns-78fcd69978-r8qr7 0 /1 Pending 0 81m <none> <none> <none> <none> coredns-78fcd69978-x2557 0 /1 Pending 0 81m <none> <none> <none> <none> etcd-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> kube-apiserver-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> kube-controller-manager-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> kube-proxy-9psw2 1 /1 Running 0 7m16s 192 .168.1.154 305 -4 <none> <none> kube-proxy-pbf6v 1 /1 Running 0 81m 192 .168.1.151 305 -1 <none> <none> kube-proxy-tgmm9 1 /1 Running 0 56m 192 .168.1.152 sys-2 <none> <none> kube-proxy-xp42n 1 /1 Running 0 53s 192 .168.1.156 305 -6 <none> <none> kube-scheduler-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> \u6700\u540e sys-1@305-1:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION 305 -1 Ready control-plane,master 21h v1.22.2 305 -4 Ready <none> 19h v1.22.2 305 -6 Ready <none> 19h v1.22.2 sys-2 Ready <none> 20h v1.22.2 06\u81f3\u6b64 \u642d\u5efa\u5b8c\u6210\uff0c\u603b\u7ed3\u4e00\u4e0b\u6709\u51e0\u4e2a\u65b9\u9762 \u524d\u7f6e\u51c6\u5907\u6761\u4ef6\uff0c\u9700\u8981\u5bf9\u672c\u5730\u7f51\u7edc\u8fdb\u884c\u914d\u7f6e\u4ee3\u7406\uff0c\u786e\u4fdd\u80fd\u591f\u544a\u8bc9\u62c9\u53d6\u955c\u50cf \u914d\u7f6e\u4e0d\u540c\u5b50\u8282\u70b9\u7684\u8fc7\u7a0b\u57fa\u672c\u4e00\u81f4\uff0c\u4f7f\u7528kubeadm\u57fa\u672c\u6ca1\u6709\u4efb\u4f55\u5fc3\u667a\u8d1f\u62c5 \u6700\u540e\u5982\u679c\u6709\u5b89\u88c5\u4e0a\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8054\u7cfb\u8fdb\u884c\u4ea4\u6d41\uff0c\u514d\u8d39\u7b54\u7591\u3002","title":"\u5728\u5b9e\u9a8c\u5ba4\u5b89\u88c5Kubernetes"},{"location":"db/k8s/install/#ubuntu2004kubernetes","text":"\u5728\u516c\u53f8\u5b9e\u4e60\u7684\u65f6\u5019\uff0c\u6709\u514d\u8d39\u7684Kubernetes\u96c6\u7fa4\u53ef\u4ee5\u4f7f\u7528\u3002\u6700\u8fd1\u56de\u5230\u4e86\u5b66\u6821\uff0c\u60f3\u8981\u7ee7\u7eed\u8fdb\u884c\u5b66\u4e60\uff0c\u8003\u8651\u5230\u6210\u672c\uff0c\u4e0d\u53ef\u80fd\u53bb\u4e91\u5382\u5546\u79df\u4e00\u4e2a\u96c6\u7fa4\u3002 \u521a\u597d\uff0c\u5b9e\u9a8c\u5ba4\uff0c\u6709\u4e94\u53f0\u95f2\u7f6e\u7684\u673a\u5668\uff0c\u4e8e\u662f\u4e0a\u624b\uff0c\u642d\u5efa\u4e00\u4e2a\u96c6\u7fa4\u3002","title":"\u5728Ubuntu20.04\u96c6\u7fa4\u4e0a\u5b89\u88c5Kubernetes\u5b66\u4e60\u96c6\u7fa4"},{"location":"db/k8s/install/#01","text":"\u7cfb\u7edf\uff1a ubuntu-20.04.3-live-server-amd64 \u5185\u5b58\uff1a4G CPU\uff1a \u5176\u4e2d k-5 \u8282\u70b9\u88ab\u6211\u62ff\u6765\u8dd1\u65c1\u8def\u7531\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u91c7\u7528\u4e86\u4e00\u4e3b\u56db\u4ece\u7684\u5f62\u5f0f\u8fdb\u884c\u90e8\u7f72\u3002 \u89d2\u8272 \u4e3b\u673a\u540d IP\u5730\u5740 Master k-1 192.168.1.151 Slave k-2 192.168.1.152 Slave k-4 192.168.1.154 Slave k-6 192.168.1.156 \u5982\u679c\u662f\u81ea\u5df1\u5728\u5b9e\u9a8c\u5ba4\u8fdb\u884c\u90e8\u7f72\u7684\u8bdd\uff0c\u9700\u8981\u5bf9IP\u5730\u5740\u8fdb\u884c\u56fa\u5b9a\uff0c\u4ee5\u53ca\u6362\u6e90\u7b49\u7b49\u3002","title":"01\u73af\u5883\u4ecb\u7ecd"},{"location":"db/k8s/install/#02","text":"","title":"02\u51c6\u5907\u5de5\u4f5c"},{"location":"db/k8s/install/#swap","text":"\u4e3a\u4ec0\u4e48\u9700\u8981\u7981\u6b62swap\uff1f \u9996\u5148\uff0cswap\u4f1a\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\uff0c\u865a\u62df\u5185\u5b58\u5728\u78c1\u76d8\u4e0a\u8fdb\u884c\u8bbf\u95ee\u7684\u6548\u7387\u4f1a\u5927\u5927\u4e0b\u964d\uff08\u5185\u5b58\u3001IO\uff09\u3002 \u53e6\u5916\uff0c\u5f00\u542f\u4e86swap\uff0c\u901a\u8fc7cgroup\u8fdb\u884c\u5207\u5206\u7684\u5185\u5b58\u5c31\u4f1a\u5931\u6548 \u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2aIssue: https://github.com/kubernetes/kubernetes/issues/53533 \u901a\u8fc7 swapon --show \u53ef\u4ee5\u4ea7\u770b\u5f53\u524d\u7684swap\u5206\u533a sys-2@sys-2:~$ swapon --show NAME TYPE SIZE USED PRIO /swap.img file 3 .8G 0B -2 sys-2@sys-2:~$ sudo swapoff -a \u7f16\u8f91 /etc/fstab \u6587\u4ef6\uff0c\u6ce8\u91ca\u6389\u5f15\u7528swap\u7684\u884c\uff0c\u4fdd\u5b58\u5e76\u91cd\u542f\u540e\u8f93\u5165 sudo swapoff -a \u5373\u53ef\u3002","title":"\u7981\u7528\u4ea4\u6362\u7a7a\u95f4swap"},{"location":"db/k8s/install/#hosts","text":"sys-2@sys-2:~$ cat /etc/hosts # for kubernetes hosts 192 .168.1.151 k-master 192 .168.1.152 k-2 192 .168.1.154 k-3 192 .168.1.155 k-4 192 .168.1.156 k-6","title":"\u914d\u7f6ehosts"},{"location":"db/k8s/install/#_1","text":"\u8fd9\u91cc\u4f7f\u7528\u963f\u91cc\u955c\u50cf\u7ad9\u7684\u6e90\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u91cd\u8981 sys-2@sys-2:~$ cat /etc/apt/sources.list # \u7cfb\u7edf\u6e90 deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse","title":"\u6362\u6e90"},{"location":"db/k8s/install/#k8s","text":"\u8bbf\u95ee\uff1a https://mirrors.aliyun.com/kubernetes/ sudo apt-get update && sudo apt-get install -y apt-transport-https curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add - cat /etc/apt/sources.list.d/kubernetes.list <<EOF deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main EOF sudo apt-get update sudo apt-get install -y kubelet kubeadm kubectl \u8fd9\u91cc\u5b89\u88c5\u4e09\u4e2a\u5de5\u5177\uff1a sudo apt-get install -y kubelet kubeadm kubectl","title":"\u6dfb\u52a0k8s\u955c\u50cf"},{"location":"db/k8s/install/#docker","text":"","title":"docker"},{"location":"db/k8s/install/#docker_1","text":"\u9996\u5148\u9700\u8981\u5b89\u88c5docker sudo apt install docker.io","title":"\u5b89\u88c5docker"},{"location":"db/k8s/install/#docker_2","text":"\u4f7f\u7528\u4e03\u725b\u4e91\u4f5c\u4e3a\u955c\u50cf\u6e90 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json <<-'EOF' { \"registry-mirrors\": [\"https://reg-mirror.qiniu.com/\"], \"exec-opts\": [\"native.cgroupdriver=systemd\"] # \u8fd9\u4e00\u884c\u662f } EOF","title":"docker\u6362\u6e90"},{"location":"db/k8s/install/#docker_3","text":"\u914d\u7f6e\u955c\u50cfpull\u4ee3\u7406\uff0c\u955c\u50cf\u62c9\u53bb\u9700\u8981\u914d\u7f6e\u4ee3\u7406\u4ee5\u63d0\u9ad8\u901f\u5ea6\u3002\u8fd9\u91cc\u6211\u662f\u8bb2\u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6e\u5230\u4e86\u6211\u7684\u5c40\u57df\u7f51\u65c1\u8def\u7531\u91cc\u3002 \u5728\u6267\u884c docker pull \u65f6\uff0c\u662f\u7531\u5b88\u62a4\u8fdb\u7a0b dockerd \u6765\u6267\u884c\u3002 \u56e0\u6b64\uff0c\u4ee3\u7406\u9700\u8981\u914d\u5728 dockerd \u7684\u73af\u5883\u4e2d\u3002 \u800c\u8fd9\u4e2a\u73af\u5883\uff0c\u5219\u662f\u53d7 systemd \u6240\u7ba1\u63a7\uff0c\u56e0\u6b64\u5b9e\u9645\u662f systemd \u7684\u914d\u7f6e\u3002 sudo mkdir -p /etc/systemd/system/docker.service.d sudo touch /etc/systemd/system/docker.service.d/proxy.conf sudo vim /etc/systemd/system/docker.service.d/proxy.conf \u5728\u8fd9\u4e2a proxy.conf \u6587\u4ef6\uff08\u53ef\u4ee5\u662f\u4efb\u610f *.conf \u7684\u5f62\u5f0f\uff09\u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a [Service] Environment = \"HTTP_PROXY=http://192.168.1.191:7893/\" Environment = \"HTTPS_PROXY=http://192.168.1.191:7893/\"","title":"docker\u4ee3\u7406"},{"location":"db/k8s/install/#kubelet-docker","text":"kubelet\u9ed8\u8ba4\u7684\u9694\u79bb\u9a71\u52a8\u662fsystemd\uff0c\u4f46\u662fdocker\u9ed8\u8ba4\u7684\u9a71\u52a8\u4e3acgroups\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u884c\u6307\u5b9a\u3002 \u7ee7\u7eed\u7f16\u8f91dockerd\u7684\u914d\u7f6e\uff0c\u8bb2cgroup\u7684\u9694\u79bb\u9a71\u52a8\u8bbe\u7f6e\u4e3a systemd sudo vim /etc/docker/daemon.json \"exec-opts\": [\"native.cgroupdriver=systemd\"] \u6700\u540e\uff0c\u91cd\u542fdocker sudo systemctl daemon-reload sudo systemctl restart docker","title":"\u89e3\u51b3kubelet \u548cdocker \u8d44\u6e90\u9694\u79bb\u4e0d\u4e00\u81f4"},{"location":"db/k8s/install/#grub","text":"\u4fee\u6539 GRUB_CMDLINE_LINUX=\"\" \u4fee\u6539\u6210\u4e0b\u8ff0\u5167\u5bb9 GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\" sudo vim /etc/default/grub sudo update-grub \u6700\u540e\u91cd\u542f\u670d\u52a1\u5668 sudo reboot","title":"\u914d\u7f6egrub"},{"location":"db/k8s/install/#03k8s-master","text":"\u5230\u8fd9\u91cc\u5df2\u7ecf\u53ef\u4ee5\u6109\u5feb\u7684\u88c5Kubernetes\u4e86 kubeadm init --pod-network-cidr = 10 .244.0.0/16 --apiserver-advertise-address = 192 .168.1.151 \u4f60\u9700\u8981\u5c06 --apiserver-advertise-address \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684 \u6267\u884c\u4e4b\u540e\uff0c\u8f93\u51fa\u5982\u4e0b\uff1a sys-1@305-1:~$ sudo kubeadm init --pod-network-cidr = 10 .244.0.0/16 --apiserver-advertise-address = 192 .168.1.151 [ init ] Using Kubernetes version: v1.22.2 [ preflight ] Running pre-flight checks [ preflight ] Pulling images required for setting up a Kubernetes cluster [ preflight ] This might take a minute or two, depending on the speed of your internet connection [ preflight ] You can also perform this action in beforehand using 'kubeadm config images pull' [ certs ] Using certificateDir folder \"/etc/kubernetes/pki\" [ certs ] Generating \"ca\" certificate and key [ certs ] Generating \"apiserver\" certificate and key [ certs ] apiserver serving cert is signed for DNS names [ 305 -1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local ] and IPs [ 10 .96.0.1 192 .168.1.151 ] [ certs ] Generating \"apiserver-kubelet-client\" certificate and key [ certs ] Generating \"front-proxy-ca\" certificate and key [ certs ] Generating \"front-proxy-client\" certificate and key [ certs ] Generating \"etcd/ca\" certificate and key [ certs ] Generating \"etcd/server\" certificate and key [ certs ] etcd/server serving cert is signed for DNS names [ 305 -1 localhost ] and IPs [ 192 .168.1.151 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/peer\" certificate and key [ certs ] etcd/peer serving cert is signed for DNS names [ 305 -1 localhost ] and IPs [ 192 .168.1.151 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/healthcheck-client\" certificate and key [ certs ] Generating \"apiserver-etcd-client\" certificate and key [ certs ] Generating \"sa\" key and public key [ kubeconfig ] Using kubeconfig folder \"/etc/kubernetes\" [ kubeconfig ] Writing \"admin.conf\" kubeconfig file [ kubeconfig ] Writing \"kubelet.conf\" kubeconfig file [ kubeconfig ] Writing \"controller-manager.conf\" kubeconfig file [ kubeconfig ] Writing \"scheduler.conf\" kubeconfig file [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Starting the kubelet [ control-plane ] Using manifest folder \"/etc/kubernetes/manifests\" [ control-plane ] Creating static Pod manifest for \"kube-apiserver\" [ control-plane ] Creating static Pod manifest for \"kube-controller-manager\" [ control-plane ] Creating static Pod manifest for \"kube-scheduler\" [ etcd ] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\" [ wait-control-plane ] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\" . This can take up to 4m0s [ apiclient ] All control plane components are healthy after 16 .507819 seconds [ upload-config ] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace [ kubelet ] Creating a ConfigMap \"kubelet-config-1.22\" in namespace kube-system with the configuration for the kubelets in the cluster [ upload-certs ] Skipping phase. Please see --upload-certs [ mark-control-plane ] Marking the node 305 -1 as control-plane by adding the labels: [ node-role.kubernetes.io/master ( deprecated ) node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers ] [ mark-control-plane ] Marking the node 305 -1 as control-plane by adding the taints [ node-role.kubernetes.io/master:NoSchedule ] [ bootstrap-token ] Using token: wr4p75.xkkku659wiqkeh0f [ bootstrap-token ] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to get nodes [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials [ bootstrap-token ] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token [ bootstrap-token ] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster [ bootstrap-token ] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace [ kubelet-finalize ] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key [ addons ] Applied essential addon: CoreDNS [ addons ] Applied essential addon: kube-proxy Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config Alternatively, if you are the root user, you can run: export KUBECONFIG = /etc/kubernetes/admin.conf You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: # \u901a\u8fc7\u8fd9\u91cc\uff0c\u8bb2\u4ece\u8282\u70b9\u52a0\u5165\u5230 kubeadm join 192 .168.1.151:6443 --token wr4p75.xkkku659wiqkeh0f \\ --discovery-token-ca-cert-hash sha256:9e90cfc7244e7834d660975f4730aca4b79087ef52e4accc0f4aa62a4f0c066e","title":"03\u5b89\u88c5k8s master\u8282\u70b9"},{"location":"db/k8s/install/#04-slave","text":"\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u51c6\u5907\u5de5\u4f5c\u7684\u8bbe\u7f6e sudo kubeadm join 192 .168.1.151:6443 --token wr4p75.xkkku659wiqkeh0f --discovery-token-ca-cert-hash sha256:9e90cfc7244e7834d660975f4730aca4b79087ef52e4accc0f4aa62a4f0c066e \u53ef\u4ee5\u901a\u8fc7kubectl\u83b7\u53d6\u8282\u70b9\u4fe1\u606f\uff0c\u53d1\u73b0\u8282\u70b9\u8fd8\u662f\u6ca1\u6709\u5c31\u7eea\u3002 sys-1@305-1:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION 305 -1 NotReady control-plane,master 81m v1.22.2 305 -4 NotReady <none> 6m33s v1.22.2 305 -6 NotReady <none> 10s v1.22.2 sys-2 NotReady <none> 55m v1.22.2 \u8fd9\u662f\u56e0\u4e3a\u8fd8\u6ca1\u6709\u6784\u5efa\u7f51\u7edc\u3002","title":"04\u5c06 slave \u4ece\u8282\u70b9\u52a0\u5165"},{"location":"db/k8s/install/#05","text":"\u53ef\u4ee5\u90e8\u7f72 flannel \u4f5c\u4e3a\u7f51\u7edc\u63d2\u4ef6 kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml \u6210\u529f\u90e8\u7f72\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60coredns\uff0c \u4ee5\u53ca\u4f60\u7684node\u90fd\u5df2\u5c31\u7eea\uff01 sys-1@305-1:~$ kubectl get pod -n kube-system -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES coredns-78fcd69978-r8qr7 0 /1 Pending 0 81m <none> <none> <none> <none> coredns-78fcd69978-x2557 0 /1 Pending 0 81m <none> <none> <none> <none> etcd-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> kube-apiserver-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> kube-controller-manager-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> kube-proxy-9psw2 1 /1 Running 0 7m16s 192 .168.1.154 305 -4 <none> <none> kube-proxy-pbf6v 1 /1 Running 0 81m 192 .168.1.151 305 -1 <none> <none> kube-proxy-tgmm9 1 /1 Running 0 56m 192 .168.1.152 sys-2 <none> <none> kube-proxy-xp42n 1 /1 Running 0 53s 192 .168.1.156 305 -6 <none> <none> kube-scheduler-305-1 1 /1 Running 1 82m 192 .168.1.151 305 -1 <none> <none> \u6700\u540e sys-1@305-1:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION 305 -1 Ready control-plane,master 21h v1.22.2 305 -4 Ready <none> 19h v1.22.2 305 -6 Ready <none> 19h v1.22.2 sys-2 Ready <none> 20h v1.22.2","title":"05\u63a5\u5165\u7f51\u7edc"},{"location":"db/k8s/install/#06","text":"\u642d\u5efa\u5b8c\u6210\uff0c\u603b\u7ed3\u4e00\u4e0b\u6709\u51e0\u4e2a\u65b9\u9762 \u524d\u7f6e\u51c6\u5907\u6761\u4ef6\uff0c\u9700\u8981\u5bf9\u672c\u5730\u7f51\u7edc\u8fdb\u884c\u914d\u7f6e\u4ee3\u7406\uff0c\u786e\u4fdd\u80fd\u591f\u544a\u8bc9\u62c9\u53d6\u955c\u50cf \u914d\u7f6e\u4e0d\u540c\u5b50\u8282\u70b9\u7684\u8fc7\u7a0b\u57fa\u672c\u4e00\u81f4\uff0c\u4f7f\u7528kubeadm\u57fa\u672c\u6ca1\u6709\u4efb\u4f55\u5fc3\u667a\u8d1f\u62c5 \u6700\u540e\u5982\u679c\u6709\u5b89\u88c5\u4e0a\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8054\u7cfb\u8fdb\u884c\u4ea4\u6d41\uff0c\u514d\u8d39\u7b54\u7591\u3002","title":"06\u81f3\u6b64"},{"location":"db/kafka/inaction/","text":"kafka in action 1\u5f02\u6b65\u901a\u4fe1 1.1\u89c2\u5bdf\u8005\u6a21\u5f0f \u53d1\u5e03-\u8ba2\u9605\u6a21\u5f0f \u5b9a\u4e49\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u6539\u53d8\u4e86\u72b6\u6001\uff0c\u90a3\u4e48\u4f9d\u8d56\u4ed6\u7684\u5bf9\u8c61\u90fd\u4f1a\u5f97\u5230\u901a\u77e5\u548c\u81ea\u52a8\u66f4\u65b0 1.2\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f \u4f20\u7edf\u6a21\u5f0f \u751f\u4ea7\u8005\u76f4\u63a5\u8bb2\u6d88\u606f\u4f20\u9012\u7ed9\u6307\u5b9a\u7684\u6d88\u8d39\u8005 \u8026\u5408\u6027\u8f83\u9ad8\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u903b\u8f91\u4ea7\u751f\u4e86\u53d8\u5316\u90fd\u9700\u8981\u4fee\u6539\u4e1a\u52a1\u903b\u8f91 \u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u4e0d\u4e00\u5b9a\u662f 1:1 \u7684\u751f\u4ea7\u6d88\u8d39\u7684\u914d\u6bd4 \u5f15\u5165\u6d88\u606f\u4e2d\u95f4\u4ef6 \u901a\u8fc7\u4e00\u4e2a\u4e2d\u95f4\u7684\u963b\u585e\u961f\u5217\u6765\u8fdb\u884c\u901a\u8baf\uff0c\u5b9e\u73b0\u89e3\u8026 \u751f\u4ea7\u8005 ---> \u6d88\u606f\u4e2d\u95f4\u4ef6 \u2192 \u6d88\u8d39\u8005 \u6570\u636e\u4f20\u9012\u6d41\u7a0b \u53ef\u4ee5N\u4e2a\u751f\u4ea7\u8005\uff0c\u4e5f\u53ef\u4ee5\u6709N\u4e2a\u6d88\u8d39\u8005 \u751f\u4ea7\u8005\u5411\u4e2d\u95f4\u4ef6\u4e2d\u6dfb\u52a0\u6570\u636e \u6d88\u8d39\u8005\u4ece\u4e2d\u95f4\u4ef6\u53d6\u51fa\u6570\u636e\uff0c \u4e00\u822c\u60c5\u51b5\u4e0b\u5148\u8fdb\u5148\u51faFIFO\u7684\u539f\u5219 1.3\u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u4f5c\u7528 \u89e3\u8026 \u652f\u6301\u5e76\u53d1 \u751f\u4ea7\u8005\u53ef\u4ee5\u6301\u7eed\u8fdb\u884c\u751f\u4ea7 \u524a\u5cf0 \u9ad8\u5cf0\u671f\u4ea7\u751f\u7684\u6570\u636e\u53ef\u4ee5\u8fdb\u884c\u6324\u538b 1.4\u6570\u636e\u5355\u5143 \u5173\u8054\u5230\u4e1a\u52a1\u5bf9\u8c61 \u6570\u636e\u5355\u5143\u5fc5\u987b\u5173\u8054\u5230\u67d0\u4e00\u79cd\u6570\u636e\u5bf9\u8c61 \u5b8c\u6574\u6027 \u4f20\u8f93\u8fc7\u7a0b\u4e2d\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027 \u72ec\u7acb\u6027 \u6570\u636e\u5355\u5143\u4e4b\u95f4\u6ca1\u6709\u76f8\u4e92\u7684\u4f9d\u8d56 \u67d0\u4e2a\u6570\u636e\u5355\u5143\u6ca1\u6709\u4f20\u8f93\u5b8c\u6210\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u7684\u6570\u636e\u5355\u5143 \u9897\u7c92\u5ea6 \u9897\u7c92\u5ea6\u8fc7\u5c0f\uff0c\u4f20\u8f93\u7684\u6b21\u6570\u53d8\u591a \u9897\u7c92\u5ea6\u8fc7\u5927\u589e\u52a0\u4e86\u4f20\u8f93\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u540e\u671f\u6d88\u8d39\u901f\u5ea6 2\u6d88\u606f\u4f20\u9012\u539f\u7406 \u6d88\u606f\u4f20\u9012\u7cfb\u7edf\u8d1f\u8d23\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u5e94\u7528\u4f20\u9012\u5230\u53e6\u5916\u4e00\u4e2a\u5e94\u7528\uff0c\u5e94\u7528\u53ea\u9700\u8981\u5173\u6ce8\u6570\u636e\uff0c\u65e0\u9700\u5173\u6ce8\u6570\u636e\u5728\u4e24\u4e2a\u548c\u591a\u4e2a\u5e94\u7528\u4e2d\u662f\u5982\u4f55\u4f20\u9012\u7684\u3002 2.1\u70b9\u5bf9\u70b9\u4f20\u9012 \u6d88\u606f\u6301\u4e45\u5316\u9053\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\u961f\u5217\u7684\u6570\u636e\u3002\u4f46\u662f\u53ea\u80fd\u88ab\u6d88\u8d39\u4e00\u6b21\u3002 \u67d0\u6761\u6570\u636e\u88ab\u6d88\u8d39\u540e\u5e94\u8be5\u4ece\u961f\u5217\u4e2d\u5220\u9664 \u5373\u4f7f\u6709\u591a\u4e2a\u6d88\u8d39\u8005\uff0c\u4e5f\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u987a\u5e8f\u5904\u7406 \u5728\u8fd9\u79cd\u6a21\u5f0f\u4e2d\u7531 \u6d88\u8d39\u4ee3\u7406 \u6765\u8bb0\u5f55\u6d88\u8d39\u72b6\u6001\uff0c \u4f46\u662f\u8fd9\u79cd\u6a21\u5f0f\u65e0\u6cd5\u5f88\u597d\u4fdd\u8bc1\u6d88\u8d39\u7684\u5904\u7406\u8bed\u4e49\uff0c\u4ed6\u662f\u4e0d\u662f\u771f\u7684\u6210\u529f\u88ab\u6d88\u8d39\u4e86\uff1f 2.2\u53d1\u5e03\u8ba2\u9605\u6d88\u606f\u4f20\u9012 \u6d88\u606f\u88ab\u6301\u4e45\u5316\u9053\u4e00\u4e2atopic\u4e2d \u6d88\u8d39\u8005\u53ef\u4ee5\u8ba2\u9605\u4e00\u79cd\u6216\u591a\u79cdtopic\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6d88\u8d39topic\u7684\u6570\u636e\uff0c\u540c\u4e00\u6761\u6570\u636e\u53ef\u4ee5\u88ab\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff0c\u6570\u636e\u6d88\u8d39\u540e\u4e5f\u4e0d\u4f1a\u7acb\u9a6c\u5220\u9664 \u88ab\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6d88\u606f\u9700\u8981\u4f5c\u7528\u591a\u4e2a\u5e94\u7528\u4e2d\u53bb\u3002 kafka\u91c7\u7528 \u62c9\u53d6\u6a21\u578b \uff0c \u7531\u6d88\u8d39\u8005\u63a7\u5236\u6d88\u8d39\u901f\u5ea6\uff0c\u548c\u6d88\u8d39\u7684\u8fdb\u5ea6\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6309\u7167\u4efb\u610f\u683c\u5f0f\u7684\u504f\u79fb\u91cf\u8fdb\u884c\u6d88\u8d39\u3002 3kafka kafka\u662f\u4e00\u4e2a\u9ad8\u541e\u5410\u91cf\u7684\u5206\u5e03\u5f0f\u6d88\u606f\u53d1\u5e03\u8ba2\u9605\u6d88\u606f\u7cfb\u7edf 3.1\u8bbe\u8ba1\u76ee\u6807 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u7684\u65b9\u5f0f\u63d0\u4f9b\u6d88\u606f\u6301\u4e45\u5316\u7684\u80fd\u529b \u9ad8\u541e\u5410\u7387 \u652f\u6301kafka server\u4e4b\u95f4\u7684\u6d88\u606f\u5206\u533a\uff0c\u5206\u5e03\u5f0f\u6d88\u8d39\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2apartition\u5185\u7684\u6d88\u606f\u987a\u5e8f\u4f20\u8f93 \u652f\u6301\u5728\u7ebf\u6c34\u5e73\u6269\u5c55 \u540c\u65f6\u652f\u6301\u79bb\u7ebf\u6570\u636e\u5904\u7406\u548c \u5b9e\u65f6\u6570\u636e \u5904\u7406 3.2\u4f18\u70b9 \u89e3\u8026 \u5197\u4f59 \u6301\u4e45\u5316\u6570\u636e\uff0c\u76f4\u5230\u88ab\u5b8c\u5168\u6d88\u8d39 \u62d3\u5c55\u6027 \u7075\u6d3b\u6027\u548c\u5cf0\u503c\u5904\u7406 \u53ef\u6062\u590d\u884c \u987a\u5e8f\u4fdd\u8bc1 \u7f13\u51b2 4kafka\u7cfb\u7edf\u67b6\u6784 4.1broker kafka\u96c6\u7fa4\u4e2d\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u670d\u52a1\u5668\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u53eb\u505abroker 4.2topic \u6d88\u606f\u6709\u4e0d\u540c\u7684\u7c7b\u522b\u3002\u88ab\u79f0\u4e3atopic \u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u4e2d\u8868\u540d\u548cES\u7684index \u7269\u7406\u4e0a\u4e0d\u540c\u7684topic\u5206\u5f00\u5b58\u50a8 \u903b\u8f91\u4e0a\u4e00\u4e2atopic\u7684\u6d88\u606f\u867d\u7136\u4fdd\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2abroker\u4e0a\u4f46\u662f\u7528\u6237\u53ea\u9700\u8981\u6307\u5b9a\u6d88\u606f\u7684topic\u5c31\u53ef\u4ee5\u8fdb\u884c\u6d88\u8d39 4.3partition \u5206\u533a \u4e00\u4e2atopic\u4e2d\u7684\u6570\u636e\u5206\u5272\u4e3a\u4e00\u4e2a\u6216\u8005\u591a\u4e2apartition \u751f\u4ea7\u8005\u4ea7\u751f\u6570\u636e\u7684\u65f6\u5019\uff0c\u6839\u636e\u5206\u914d\u7b56\u7565\uff0c\u9009\u62e9\u5206\u533a\uff0c\u7136\u540e\u5c06\u6d88\u606f\u8ffd\u52a0\u5230\u5bf9\u5e94\u5206\u533a\u7684\u5c3e\u7aef \u6bcf\u6761\u6d88\u606f\u90fd\u6709\u81ea\u589e\u7684\u7f16\u53f7 \u6807\u8bc6\u987a\u5e8f \u6807\u8bc6\u6d88\u606f\u7684\u504f\u79fb\u91cf \u6bcf\u4e00\u4e2apartition\u4f7f\u7528\u591a\u4e2asegment\u6587\u4ef6\u8fdb\u884c\u5b58\u50a8 \u5355\u4e2apartition\u4e2d\u7684\u6570\u636e\u662f\u6709\u5e8f\u7684 \u5982\u679c\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u5168\u987a\u5e8f\uff0c\u90a3\u4e48\u9700\u8981\u8bb2partition\u8bbe\u7f6e\u4e3a1 4.4leader \u6bcf\u4e2apartition\u6709\u591a\u4e2a\u526f\u672c\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f5c\u4e3aleader\uff0cleader\u662f\u5f53\u524d\u8d1f\u8d23\u6570\u636e\u8bfb\u5199\u7684partition 4.5follower folloer\u8ddf\u968fleader\uff0c\u6240\u6709\u5199\u8bf7\u6c42\u90fd\u901a\u8fc7leader\u8def\u7531\uff0c\u6570\u636e\u53d8\u66f4\uff0c\u90fd\u4f1a\u5e7f\u64ad\u7ed9\u6240\u6709\u7684follower\uff0cfollower\u4e0eleader\u4fdd\u6301\u4e00\u81f4 \u5982\u679cleader\u5931\u6548\uff0c\u5219\u4f1a\u4ecefollower\u603b\u9009\u4e3e\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684leader \u5982\u679cfollower\u6302\u6389\uff0c\u5361\u4f4f\uff0c\u6216\u8005\u540c\u6b65\u592a\u6162\u3002leader\u4f1a\u628a\u8fd9\u4e2afollower\u4ece\u2018In sync replicas\u2019\uff08ISR\uff09\u5220\u9664\uff0c\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684follower 4.6replication partition\u53ef\u80fd\u4ea7\u751f\u635f\u574f \u6211\u4eec\u9700\u8981\u5bf9\u5206\u533a\u6570\u636e\u8fdb\u884c\u5907\u4efd \u5c06\u5206\u533a\u5212\u5206\u4e3a\u4e00\u4e2aLeader\u548c\u591a\u4e2afollower leader\u8d1f\u8d23\u5199\u5165\u548c\u8bfb\u53d6\u6570\u636e follower\u8d1f\u8d23\u5907\u4efd\u6570\u636e \u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027 \u5907\u4efd\u6570\uff0c\u8bbe\u7f6e\u4e3aN\uff0c\u5219\u8868\u793a\u4e3b+\u5907=N 4.7producer \u751f\u4ea7\u8005\u8bb2\u6d88\u606f\u53d1\u9001\u5230topic\u4e2d broker\u63a5\u6536\u5230\u751f\u4ea7\u8005\u53d1\u9001\u7684\u6d88\u606f\u540e\uff0c\u5c06\u6d88\u606f\u8ffd\u52a0\u5230\u7528\u4e8e\u8ffd\u52a0\u6570\u636e\u7684segment\u4e2d \u751f\u4ea7\u8005\u53d1\u9001\u7684\u6d88\u606f\uff0c\u5b58\u50a8\u5230\u4e00\u4e2apartition\u4e2d\uff0c\u751f\u4ea7\u8005\u53ef\u4ee5\u6307\u5b9a\u6570\u636e\u5b58\u50a8\u7684partition 4.8consumer \u6d88\u8d39\u8005\u53ef\u4ee5\u4ecebroker\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6d88\u8d39\u591a\u4e2atopic\u4e2d\u7684\u6570\u636e 4.9consumer group \u6bcf\u4e00\u4e2aconsumer\u5c5e\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684consumer group \u591a\u4e2a\u6d88\u8d39\u8005\u96c6\u4e2d\u5904\u7406\u67d0\u4e00\u4e2atopic\u7684\u6570\u636e\uff0c\u63d0\u9ad8\u6d88\u8d39\u80fd\u529b \u6574\u4e2a\u6d88\u8d39\u8005\u7ec4\u5171\u4eab\u4e00\u7ec4\u504f\u79fb\u91cf\uff0c\u9632\u6b62\u6570\u636e\u88ab\u91cd\u590d\u8bfb\uff0c\u56e0\u4e3a\u4e00\u4e2atopic\u6709\u591a\u4e2a\u5206\u533a 4.10offset \u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u7684\u4e00\u6761\u6570\u636e \u504f\u79fb\u91cf\u51b3\u5b9a\u4e86\u6570\u636e\u8bfb\u53d6\u7684\u4f4d\u7f6e\uff0c\u4e0d\u4f1a\u6709\u7ebf\u7a0b\u5b89\u5168\u7684\u95ee\u9898\uff0c\u6d88\u8d39\u8005\u901a\u8fc7\u504f\u79fb\u91cf\u6765\u51b3\u5b9a\u4e0b\u6b21\u8bfb\u53d6\u7684\u4f4d\u7f6e \u6d88\u606f\u88ab\u6d88\u8d39\u4e4b\u540e\uff0c\u5e76\u4e0d\u4f1a\u7acb\u9a6c\u5220\u9664\uff0c\u8fd9\u6837\u591a\u4e2a\u4e1a\u52a1\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528kafka\u7684\u6d88\u606f \u53ef\u4ee5\u4fee\u6539\u504f\u79fb\u91cf\u8fbe\u5230\u91cd\u590d\u8bfb\u533a\u7684\u6570\u636e\u7684\u76ee\u7684 \u6d88\u606f\u6700\u7ec8\u4f1a\u88ab\u5220\u9664\uff0c\u9ed8\u8ba4\u4e00\u5468 4.11zookeeper kafka\u901a\u8fc7zookeeper \u6765\u5b58\u50a8\u96c6\u7fa4\u7684meta\u4fe1\u606f zookeeper \u8c01\u7684\u4e8b\u52a1\u9886\u5148\u5c31\u9009\u62e9\u8c01\u6765\u4f5c\u4e3a\u65b0\u7684\u4e3b\u8282\u70b9 5\u6570\u636e\u68c0\u7d22\u673a\u5236 topic\u5728\u7269\u7406\u5c42\u9762\u4ee5partition\u4f5c\u4e3a\u5206\u7ec4\uff0c\u4e00\u4e2atopic\u53ef\u4ee5\u5206\u6210\u82e5\u5e72\u4e2apartition partition\u8fd8\u53ef\u4ee5\u7ec6\u5206\u4e3aSegment\uff0c\u4e00\u4e2apartition\u5728\u7269\u7406\u4e0a\u6709\u591a\u4e2asegment\u7ec4\u6210 segment\u7684\u53c2\u6570\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a log.segment.bytes\uff1a\u5355\u4e2asegment\u6700\u5927\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6570\u636e\u91cf\uff0c\u9ed8\u8ba41GB log.segment.ms: kafaka\u5728commit\u4e00\u4e2a\u6ca1\u5199\u6ee1\u7684segment\uff0c\u7b49\u5f85\u65f6\u95f4\u662f7\u5929 LogSegment\u6587\u4ef6\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u5206\u522b\u662f.index \u548c.log\u6587\u4ef6\uff0c\u5206\u522b\u8868\u793asegment\u7d22\u5f15\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u3002 partition\u5168\u5c40\u7684\u7b2c\u4e00\u4e2asegment\u4ece0\u5f00\u59cb\uff0c\u540e\u7eed\u6bcf\u4e2asegment\u6587\u4ef6\u540d\u4e3a\u4e0a\u4e00\u4e2asegment\u6587\u4ef6\u6700\u540e\u4e00\u6761\u6d88\u606f\u7684offset\u503c \u6570\u503c\u5927\u5c0f\u4e3a64\u4f4d\uff0c20\u4e2a\u5b57\u7b26\u957f\u5ea6\uff0c\u6ca1\u6709\u6570\u5b57\u7684\u75280\u586b\u5145 # the first segment 00000000000000000000 .index 00000000000000000000 .log # the second segment 00000000000000170410 .index 00000000000000170410 .log 6\u6570\u636e\u5b89\u5168\u6027 \u4e09\u79cd\u6a21\u5f0f 0\uff0c at least once\uff0c \u6d88\u606f\u7edd\u5bf9\u4e0d\u4f1a\u4e22\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u91cd\u590d\u4f20\u8f93 1\uff0cat most once\uff0c\u6d88\u606f\u7edd\u5bf9\u53ef\u80fd\u4f1a\u4e22\uff0c\u4f46\u662f\u7edd\u5bf9\u4e0d\u4f1a\u518d\u6b21\u4f20\u8f93 2\uff0cexactly once\uff0c\u6bcf\u6761\u6d88\u606f\u80af\u5b9a\u4f1a\u88ab\u4f20\u8f93\u4e00\u6b21\u4e14\u4ec5\u4f20\u8f93\u4e00\u6b21 6.1Producer deliver guarantee acks\uff1a \u5728isr\u4e2d\u7684leader \u786e\u8ba4\u540e\u53d1\u9001\u4e00\u6279\u6d88\u606f \u65e0\u9700\u7b49\u5f85broker\u7684\u56de\u5e94\uff0c\u53d1\u9001\u4e0b\u4e00\u6279\u6d88\u606f \u9700\u8981\u7b49\u5f85\u6240\u6709\u7684follower\u90fd\u63a5\u53d7\u540e\u624d\u7b97\u53d1\u9001\u5b8c\u6210\uff0c\u53ef\u9760\u6027\u6700\u9ad8\u3002 6.2 ISR\u673a\u5236 In Sync Replica \u76ee\u7684\u662f\u786e\u4fdd\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u5feb\u901f\u7684\u9009\u62e9\u65b0\u7684\u4e3b\u8282\u70b9\uff0c\u6765\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002 \u5173\u952e\u8bcd AR Assigned Replicas \u7528\u6765\u6807\u8bc6\u526f\u672c\u7684\u5168\u96c6 OSR out-sync Replicas \u79bb\u5f00\u540c\u6b65\u961f\u5217\u7684\u526f\u672c ISR in-sync Replicas \u5728\u540c\u6b65\u961f\u5217\u4e2d\u7684\u526f\u672c ISR = Leader+\u6ca1\u6709\u843d\u540e\u592a\u591a\u7684follower AR = ISR+OSR \u6570\u636e\u6d41\u901a\u8fc7\u7a0b Producer -- push \u2192 leader leader \u2190pull -- follower follower \u95f4\u9694\u65f6\u95f4\u4eceleader \u62c9\u53d6\u6570\u636e\uff0c\u4fdd\u6301\u6570\u636e\u540c\u6b65 ISR \u5f53\u4e3b\u8282\u70b9\u6302\u6389\uff0c\u4eceISR\u4e2d\u53bb\u9009\u62e9\u4e3b\u8282\u70b9 \u5224\u65ad\u662f\u5426\u5728ISR\u4e2d\u7684\u6807\u51c6 \u8d85\u8fc710s\u6ca1\u6709\u540c\u6b65\u6570\u636e replica.lag.time.max.ms = 10000 \u548cleader\u5dee4000\u6761\u6570\u636e replica.lag.max.messages = 4000 \u810f\u8282\u70b9\u9009\u4e3e kafka\u7684\u4e00\u79cd\u964d\u7ea7\u63aa\u65bd \u9009\u62e9\u7b2c\u4e00\u4e2a\u6062\u590d\u7684\u8282\u70b9\u4f5c\u4e3aleader\u8fdb\u884c\u670d\u52a1\uff0c\u5e76\u4ee5\u5b83\u7684\u6570\u636e\u4f5c\u4e3a\u57fa\u51c6 6.3Broker\u6570\u636e\u5b58\u50a8\u673a\u5236 \u65e0\u8bba\u6d88\u606f\u662f\u5426\u88ab\u6d88\u8d39\uff0ckafka\u90fd\u4f1a\u4fdd\u7559\u6240\u6709\u7684\u6d88\u606f\uff0c\u5728\u6d88\u606f\u7b56\u7565\u4e0a\u6709\u4e24\u79cd\u53ef\u4ee5\u9009\u62e9\u7684 \u57fa\u4e8e\u65f6\u95f4\uff1alog.retention.hours=168 # 7days \u57fa\u4e8e\u5927\u5c0f: log.retention.bytes=1073741824 # 10GB 6.4\u6d88\u8d39\u8005\u6570\u636e\u6d88\u8d39\u4fdd\u8bc1 \u5982\u679cconsumer\u8bbe\u7f6e\u4e3aautocommit\uff0c consumer\u4e00\u65e6\u8bfb\u53d6\u5230\u6570\u636e\u5c31\u8fdb\u884c\u63d0\u4ea4 \u8bfb\u5b8c\u6d88\u606f\u5148commit\uff0c\u5728\u8fdb\u884c\u5904\u7406 \u5982\u679c\u5904\u7406\u5931\u8d25\uff0c\u5219\u65e0\u6cd5\u91cd\u65b0\u518d\u8bfb\u53d6\u5230\u8fd9\u4e2a\u6570\u636e\u3002 # \u6f0f\u8bfb \u8fd9\u5bf9\u5e94\u4e86at most once \u8bfb\u5b8c\u6d88\u606f\u5148\u5904\u7406\u518dcommit \u5982\u5982\u679c\u5904\u7406\u5b8c\u4e4b\u540e\u8fd8\u6ca1\u6765\u5f97\u53cacommit\uff0cconsumer\u5d29\u6e83\u4e86\uff0c\u4f1a\u5bfc\u81f4consumer\u91cd\u542f\u540e\uff0c\u4f1a\u628a\u8be5\u6d88\u606f\u91cd\u590d\u5904\u7406\u4e00\u6b21\u3002 # \u91cd\u590d\u8bfb \u8fd9\u5bf9\u5e94\u4e86at least once \u4e00\u5b9a\u8981\u505a\u5230exactly once\u7684\uff0c\u9700\u8981\u534f\u8c03offset\u548c\u5b9e\u9645\u64cd\u4f5c\u7684\u8f93\u51fa \u4e24\u9636\u6bb5\u63d0\u4ea4 7kafka\u4f18\u5316 7.1partition\u6570\u76ee \u4e00\u822c\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2apartition\u7684\u541e\u5410\u91cf\u4e3a \u51e0MB/s\uff0c\u589e\u52a0\u66f4\u591a\u7684partition\u610f\u5473\u7740 \u66f4\u9ad8\u7684\u5e76\u884c\u548c\u541e\u5410 \u62d3\u5c55\u540c\u4e00\u4e2a\u6d88\u8d39\u8005\u7ec4\u7684\u6d88\u8d39\u8005\u6570\u76ee \u5982\u679c\u6709\u5f88\u591a\u9650\u5236\u7684brokers\uff0c\u5219\u53ef\u4ee5\u5229\u7528\u5230brokers \u9020\u6210\u66f4\u591a\u7684zookeeper\u9009\u4e3e kafka\u6253\u5f00\u66f4\u591a\u7684\u6587\u4ef6 \u8c03\u6574\u7b56\u7565 \u5982\u679c\u96c6\u7fa4\u8f83\u5c0f\uff0c\u5219\u914d\u7f6e2*broker\u6570\u91cf\u7684partition\u6570\u76ee \u5982\u679c\u96c6\u7fa4\u8f83\u5927\uff0c\u5219\u914d\u7f6e1*broker\u6570\u91cf\u7684partition \u8003\u8651\u6700\u9ad8\u5cf0\u9700\u8981\u541e\u5410\u7684\u5e76\u884cconsumer\u6570\u91cf\uff0c\u8c03\u6574partition\u6570\u91cf\uff0c\u5982\u679c\u5e94\u7528\u573a\u666f\u9700\u898120\u4e2aconsumer\u8fdb\u884c\u6d88\u8d39\uff0c\u90a3\u4e48\u8bbe\u7f6e\u621020\u4e2apartition 7.2replication factor \u51b3\u5b9a\u4e86\u526f\u672c\u7684\u6570\u76ee\uff0c\u66f4\u591a\u7684\u526f\u672c\u610f\u5473\u7740 \u7cfb\u7edf\u66f4\u7a33\u5b9a \u66f4\u591a\u7684\u5ef6\u8fdf \u78c1\u76d8\u4f7f\u7528\u7387\u4f1a\u66f4\u9ad8 \u8c03\u6574\uff1a \u4e0d\u8981\u5728\u751f\u4ea7\u73af\u8282\u4e2d\u5c06RF\u8bbe\u7f6e\u4e3a1 \u5982\u679creplication\u6027\u80fd\u6210\u4e3a\u4e86\u74f6\u9888\uff0c\u4f7f\u7528\u66f4\u597d\u7684broker\uff0c\u800c\u4e0d\u662f\u964d\u4f4eRF\u7684\u6570\u91cf 7.3\u6279\u91cf\u5199\u5165 \u4e3a\u4e86\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u9700\u8981\u5b9a\u671f\u7684\u53bb\u6279\u91cf\u7684\u5199\u6587\u4ef6","title":"\u5feb\u901fkafka\u6458\u8981"},{"location":"db/kafka/inaction/#kafka-in-action","text":"","title":"kafka in action"},{"location":"db/kafka/inaction/#1","text":"","title":"1\u5f02\u6b65\u901a\u4fe1"},{"location":"db/kafka/inaction/#11","text":"\u53d1\u5e03-\u8ba2\u9605\u6a21\u5f0f \u5b9a\u4e49\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u6539\u53d8\u4e86\u72b6\u6001\uff0c\u90a3\u4e48\u4f9d\u8d56\u4ed6\u7684\u5bf9\u8c61\u90fd\u4f1a\u5f97\u5230\u901a\u77e5\u548c\u81ea\u52a8\u66f4\u65b0","title":"1.1\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"db/kafka/inaction/#12","text":"\u4f20\u7edf\u6a21\u5f0f \u751f\u4ea7\u8005\u76f4\u63a5\u8bb2\u6d88\u606f\u4f20\u9012\u7ed9\u6307\u5b9a\u7684\u6d88\u8d39\u8005 \u8026\u5408\u6027\u8f83\u9ad8\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u903b\u8f91\u4ea7\u751f\u4e86\u53d8\u5316\u90fd\u9700\u8981\u4fee\u6539\u4e1a\u52a1\u903b\u8f91 \u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u4e0d\u4e00\u5b9a\u662f 1:1 \u7684\u751f\u4ea7\u6d88\u8d39\u7684\u914d\u6bd4 \u5f15\u5165\u6d88\u606f\u4e2d\u95f4\u4ef6 \u901a\u8fc7\u4e00\u4e2a\u4e2d\u95f4\u7684\u963b\u585e\u961f\u5217\u6765\u8fdb\u884c\u901a\u8baf\uff0c\u5b9e\u73b0\u89e3\u8026 \u751f\u4ea7\u8005 ---> \u6d88\u606f\u4e2d\u95f4\u4ef6 \u2192 \u6d88\u8d39\u8005 \u6570\u636e\u4f20\u9012\u6d41\u7a0b \u53ef\u4ee5N\u4e2a\u751f\u4ea7\u8005\uff0c\u4e5f\u53ef\u4ee5\u6709N\u4e2a\u6d88\u8d39\u8005 \u751f\u4ea7\u8005\u5411\u4e2d\u95f4\u4ef6\u4e2d\u6dfb\u52a0\u6570\u636e \u6d88\u8d39\u8005\u4ece\u4e2d\u95f4\u4ef6\u53d6\u51fa\u6570\u636e\uff0c \u4e00\u822c\u60c5\u51b5\u4e0b\u5148\u8fdb\u5148\u51faFIFO\u7684\u539f\u5219","title":"1.2\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f"},{"location":"db/kafka/inaction/#13","text":"\u89e3\u8026 \u652f\u6301\u5e76\u53d1 \u751f\u4ea7\u8005\u53ef\u4ee5\u6301\u7eed\u8fdb\u884c\u751f\u4ea7 \u524a\u5cf0 \u9ad8\u5cf0\u671f\u4ea7\u751f\u7684\u6570\u636e\u53ef\u4ee5\u8fdb\u884c\u6324\u538b","title":"1.3\u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u4f5c\u7528"},{"location":"db/kafka/inaction/#14","text":"\u5173\u8054\u5230\u4e1a\u52a1\u5bf9\u8c61 \u6570\u636e\u5355\u5143\u5fc5\u987b\u5173\u8054\u5230\u67d0\u4e00\u79cd\u6570\u636e\u5bf9\u8c61 \u5b8c\u6574\u6027 \u4f20\u8f93\u8fc7\u7a0b\u4e2d\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027 \u72ec\u7acb\u6027 \u6570\u636e\u5355\u5143\u4e4b\u95f4\u6ca1\u6709\u76f8\u4e92\u7684\u4f9d\u8d56 \u67d0\u4e2a\u6570\u636e\u5355\u5143\u6ca1\u6709\u4f20\u8f93\u5b8c\u6210\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u7684\u6570\u636e\u5355\u5143 \u9897\u7c92\u5ea6 \u9897\u7c92\u5ea6\u8fc7\u5c0f\uff0c\u4f20\u8f93\u7684\u6b21\u6570\u53d8\u591a \u9897\u7c92\u5ea6\u8fc7\u5927\u589e\u52a0\u4e86\u4f20\u8f93\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u540e\u671f\u6d88\u8d39\u901f\u5ea6","title":"1.4\u6570\u636e\u5355\u5143"},{"location":"db/kafka/inaction/#2","text":"\u6d88\u606f\u4f20\u9012\u7cfb\u7edf\u8d1f\u8d23\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u5e94\u7528\u4f20\u9012\u5230\u53e6\u5916\u4e00\u4e2a\u5e94\u7528\uff0c\u5e94\u7528\u53ea\u9700\u8981\u5173\u6ce8\u6570\u636e\uff0c\u65e0\u9700\u5173\u6ce8\u6570\u636e\u5728\u4e24\u4e2a\u548c\u591a\u4e2a\u5e94\u7528\u4e2d\u662f\u5982\u4f55\u4f20\u9012\u7684\u3002","title":"2\u6d88\u606f\u4f20\u9012\u539f\u7406"},{"location":"db/kafka/inaction/#21","text":"\u6d88\u606f\u6301\u4e45\u5316\u9053\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\u961f\u5217\u7684\u6570\u636e\u3002\u4f46\u662f\u53ea\u80fd\u88ab\u6d88\u8d39\u4e00\u6b21\u3002 \u67d0\u6761\u6570\u636e\u88ab\u6d88\u8d39\u540e\u5e94\u8be5\u4ece\u961f\u5217\u4e2d\u5220\u9664 \u5373\u4f7f\u6709\u591a\u4e2a\u6d88\u8d39\u8005\uff0c\u4e5f\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u987a\u5e8f\u5904\u7406 \u5728\u8fd9\u79cd\u6a21\u5f0f\u4e2d\u7531 \u6d88\u8d39\u4ee3\u7406 \u6765\u8bb0\u5f55\u6d88\u8d39\u72b6\u6001\uff0c \u4f46\u662f\u8fd9\u79cd\u6a21\u5f0f\u65e0\u6cd5\u5f88\u597d\u4fdd\u8bc1\u6d88\u8d39\u7684\u5904\u7406\u8bed\u4e49\uff0c\u4ed6\u662f\u4e0d\u662f\u771f\u7684\u6210\u529f\u88ab\u6d88\u8d39\u4e86\uff1f","title":"2.1\u70b9\u5bf9\u70b9\u4f20\u9012"},{"location":"db/kafka/inaction/#22","text":"\u6d88\u606f\u88ab\u6301\u4e45\u5316\u9053\u4e00\u4e2atopic\u4e2d \u6d88\u8d39\u8005\u53ef\u4ee5\u8ba2\u9605\u4e00\u79cd\u6216\u591a\u79cdtopic\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6d88\u8d39topic\u7684\u6570\u636e\uff0c\u540c\u4e00\u6761\u6570\u636e\u53ef\u4ee5\u88ab\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff0c\u6570\u636e\u6d88\u8d39\u540e\u4e5f\u4e0d\u4f1a\u7acb\u9a6c\u5220\u9664 \u88ab\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6d88\u606f\u9700\u8981\u4f5c\u7528\u591a\u4e2a\u5e94\u7528\u4e2d\u53bb\u3002 kafka\u91c7\u7528 \u62c9\u53d6\u6a21\u578b \uff0c \u7531\u6d88\u8d39\u8005\u63a7\u5236\u6d88\u8d39\u901f\u5ea6\uff0c\u548c\u6d88\u8d39\u7684\u8fdb\u5ea6\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6309\u7167\u4efb\u610f\u683c\u5f0f\u7684\u504f\u79fb\u91cf\u8fdb\u884c\u6d88\u8d39\u3002","title":"2.2\u53d1\u5e03\u8ba2\u9605\u6d88\u606f\u4f20\u9012"},{"location":"db/kafka/inaction/#3kafka","text":"kafka\u662f\u4e00\u4e2a\u9ad8\u541e\u5410\u91cf\u7684\u5206\u5e03\u5f0f\u6d88\u606f\u53d1\u5e03\u8ba2\u9605\u6d88\u606f\u7cfb\u7edf","title":"3kafka"},{"location":"db/kafka/inaction/#31","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u7684\u65b9\u5f0f\u63d0\u4f9b\u6d88\u606f\u6301\u4e45\u5316\u7684\u80fd\u529b \u9ad8\u541e\u5410\u7387 \u652f\u6301kafka server\u4e4b\u95f4\u7684\u6d88\u606f\u5206\u533a\uff0c\u5206\u5e03\u5f0f\u6d88\u8d39\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2apartition\u5185\u7684\u6d88\u606f\u987a\u5e8f\u4f20\u8f93 \u652f\u6301\u5728\u7ebf\u6c34\u5e73\u6269\u5c55 \u540c\u65f6\u652f\u6301\u79bb\u7ebf\u6570\u636e\u5904\u7406\u548c \u5b9e\u65f6\u6570\u636e \u5904\u7406","title":"3.1\u8bbe\u8ba1\u76ee\u6807"},{"location":"db/kafka/inaction/#32","text":"\u89e3\u8026 \u5197\u4f59 \u6301\u4e45\u5316\u6570\u636e\uff0c\u76f4\u5230\u88ab\u5b8c\u5168\u6d88\u8d39 \u62d3\u5c55\u6027 \u7075\u6d3b\u6027\u548c\u5cf0\u503c\u5904\u7406 \u53ef\u6062\u590d\u884c \u987a\u5e8f\u4fdd\u8bc1 \u7f13\u51b2","title":"3.2\u4f18\u70b9"},{"location":"db/kafka/inaction/#4kafka","text":"","title":"4kafka\u7cfb\u7edf\u67b6\u6784"},{"location":"db/kafka/inaction/#41broker","text":"kafka\u96c6\u7fa4\u4e2d\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u670d\u52a1\u5668\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u53eb\u505abroker","title":"4.1broker"},{"location":"db/kafka/inaction/#42topic","text":"\u6d88\u606f\u6709\u4e0d\u540c\u7684\u7c7b\u522b\u3002\u88ab\u79f0\u4e3atopic \u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u4e2d\u8868\u540d\u548cES\u7684index \u7269\u7406\u4e0a\u4e0d\u540c\u7684topic\u5206\u5f00\u5b58\u50a8 \u903b\u8f91\u4e0a\u4e00\u4e2atopic\u7684\u6d88\u606f\u867d\u7136\u4fdd\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2abroker\u4e0a\u4f46\u662f\u7528\u6237\u53ea\u9700\u8981\u6307\u5b9a\u6d88\u606f\u7684topic\u5c31\u53ef\u4ee5\u8fdb\u884c\u6d88\u8d39","title":"4.2topic"},{"location":"db/kafka/inaction/#43partition","text":"\u4e00\u4e2atopic\u4e2d\u7684\u6570\u636e\u5206\u5272\u4e3a\u4e00\u4e2a\u6216\u8005\u591a\u4e2apartition \u751f\u4ea7\u8005\u4ea7\u751f\u6570\u636e\u7684\u65f6\u5019\uff0c\u6839\u636e\u5206\u914d\u7b56\u7565\uff0c\u9009\u62e9\u5206\u533a\uff0c\u7136\u540e\u5c06\u6d88\u606f\u8ffd\u52a0\u5230\u5bf9\u5e94\u5206\u533a\u7684\u5c3e\u7aef \u6bcf\u6761\u6d88\u606f\u90fd\u6709\u81ea\u589e\u7684\u7f16\u53f7 \u6807\u8bc6\u987a\u5e8f \u6807\u8bc6\u6d88\u606f\u7684\u504f\u79fb\u91cf \u6bcf\u4e00\u4e2apartition\u4f7f\u7528\u591a\u4e2asegment\u6587\u4ef6\u8fdb\u884c\u5b58\u50a8 \u5355\u4e2apartition\u4e2d\u7684\u6570\u636e\u662f\u6709\u5e8f\u7684 \u5982\u679c\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u5168\u987a\u5e8f\uff0c\u90a3\u4e48\u9700\u8981\u8bb2partition\u8bbe\u7f6e\u4e3a1","title":"4.3partition \u5206\u533a"},{"location":"db/kafka/inaction/#44leader","text":"\u6bcf\u4e2apartition\u6709\u591a\u4e2a\u526f\u672c\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f5c\u4e3aleader\uff0cleader\u662f\u5f53\u524d\u8d1f\u8d23\u6570\u636e\u8bfb\u5199\u7684partition","title":"4.4leader"},{"location":"db/kafka/inaction/#45follower","text":"folloer\u8ddf\u968fleader\uff0c\u6240\u6709\u5199\u8bf7\u6c42\u90fd\u901a\u8fc7leader\u8def\u7531\uff0c\u6570\u636e\u53d8\u66f4\uff0c\u90fd\u4f1a\u5e7f\u64ad\u7ed9\u6240\u6709\u7684follower\uff0cfollower\u4e0eleader\u4fdd\u6301\u4e00\u81f4 \u5982\u679cleader\u5931\u6548\uff0c\u5219\u4f1a\u4ecefollower\u603b\u9009\u4e3e\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684leader \u5982\u679cfollower\u6302\u6389\uff0c\u5361\u4f4f\uff0c\u6216\u8005\u540c\u6b65\u592a\u6162\u3002leader\u4f1a\u628a\u8fd9\u4e2afollower\u4ece\u2018In sync replicas\u2019\uff08ISR\uff09\u5220\u9664\uff0c\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684follower","title":"4.5follower"},{"location":"db/kafka/inaction/#46replication","text":"partition\u53ef\u80fd\u4ea7\u751f\u635f\u574f \u6211\u4eec\u9700\u8981\u5bf9\u5206\u533a\u6570\u636e\u8fdb\u884c\u5907\u4efd \u5c06\u5206\u533a\u5212\u5206\u4e3a\u4e00\u4e2aLeader\u548c\u591a\u4e2afollower leader\u8d1f\u8d23\u5199\u5165\u548c\u8bfb\u53d6\u6570\u636e follower\u8d1f\u8d23\u5907\u4efd\u6570\u636e \u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027 \u5907\u4efd\u6570\uff0c\u8bbe\u7f6e\u4e3aN\uff0c\u5219\u8868\u793a\u4e3b+\u5907=N","title":"4.6replication"},{"location":"db/kafka/inaction/#47producer","text":"\u751f\u4ea7\u8005\u8bb2\u6d88\u606f\u53d1\u9001\u5230topic\u4e2d broker\u63a5\u6536\u5230\u751f\u4ea7\u8005\u53d1\u9001\u7684\u6d88\u606f\u540e\uff0c\u5c06\u6d88\u606f\u8ffd\u52a0\u5230\u7528\u4e8e\u8ffd\u52a0\u6570\u636e\u7684segment\u4e2d \u751f\u4ea7\u8005\u53d1\u9001\u7684\u6d88\u606f\uff0c\u5b58\u50a8\u5230\u4e00\u4e2apartition\u4e2d\uff0c\u751f\u4ea7\u8005\u53ef\u4ee5\u6307\u5b9a\u6570\u636e\u5b58\u50a8\u7684partition","title":"4.7producer"},{"location":"db/kafka/inaction/#48consumer","text":"\u6d88\u8d39\u8005\u53ef\u4ee5\u4ecebroker\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6d88\u8d39\u591a\u4e2atopic\u4e2d\u7684\u6570\u636e","title":"4.8consumer"},{"location":"db/kafka/inaction/#49consumer-group","text":"\u6bcf\u4e00\u4e2aconsumer\u5c5e\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684consumer group \u591a\u4e2a\u6d88\u8d39\u8005\u96c6\u4e2d\u5904\u7406\u67d0\u4e00\u4e2atopic\u7684\u6570\u636e\uff0c\u63d0\u9ad8\u6d88\u8d39\u80fd\u529b \u6574\u4e2a\u6d88\u8d39\u8005\u7ec4\u5171\u4eab\u4e00\u7ec4\u504f\u79fb\u91cf\uff0c\u9632\u6b62\u6570\u636e\u88ab\u91cd\u590d\u8bfb\uff0c\u56e0\u4e3a\u4e00\u4e2atopic\u6709\u591a\u4e2a\u5206\u533a","title":"4.9consumer group"},{"location":"db/kafka/inaction/#410offset","text":"\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u7684\u4e00\u6761\u6570\u636e \u504f\u79fb\u91cf\u51b3\u5b9a\u4e86\u6570\u636e\u8bfb\u53d6\u7684\u4f4d\u7f6e\uff0c\u4e0d\u4f1a\u6709\u7ebf\u7a0b\u5b89\u5168\u7684\u95ee\u9898\uff0c\u6d88\u8d39\u8005\u901a\u8fc7\u504f\u79fb\u91cf\u6765\u51b3\u5b9a\u4e0b\u6b21\u8bfb\u53d6\u7684\u4f4d\u7f6e \u6d88\u606f\u88ab\u6d88\u8d39\u4e4b\u540e\uff0c\u5e76\u4e0d\u4f1a\u7acb\u9a6c\u5220\u9664\uff0c\u8fd9\u6837\u591a\u4e2a\u4e1a\u52a1\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528kafka\u7684\u6d88\u606f \u53ef\u4ee5\u4fee\u6539\u504f\u79fb\u91cf\u8fbe\u5230\u91cd\u590d\u8bfb\u533a\u7684\u6570\u636e\u7684\u76ee\u7684 \u6d88\u606f\u6700\u7ec8\u4f1a\u88ab\u5220\u9664\uff0c\u9ed8\u8ba4\u4e00\u5468","title":"4.10offset"},{"location":"db/kafka/inaction/#411zookeeper","text":"kafka\u901a\u8fc7zookeeper \u6765\u5b58\u50a8\u96c6\u7fa4\u7684meta\u4fe1\u606f zookeeper \u8c01\u7684\u4e8b\u52a1\u9886\u5148\u5c31\u9009\u62e9\u8c01\u6765\u4f5c\u4e3a\u65b0\u7684\u4e3b\u8282\u70b9","title":"4.11zookeeper"},{"location":"db/kafka/inaction/#5","text":"topic\u5728\u7269\u7406\u5c42\u9762\u4ee5partition\u4f5c\u4e3a\u5206\u7ec4\uff0c\u4e00\u4e2atopic\u53ef\u4ee5\u5206\u6210\u82e5\u5e72\u4e2apartition partition\u8fd8\u53ef\u4ee5\u7ec6\u5206\u4e3aSegment\uff0c\u4e00\u4e2apartition\u5728\u7269\u7406\u4e0a\u6709\u591a\u4e2asegment\u7ec4\u6210 segment\u7684\u53c2\u6570\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a log.segment.bytes\uff1a\u5355\u4e2asegment\u6700\u5927\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6570\u636e\u91cf\uff0c\u9ed8\u8ba41GB log.segment.ms: kafaka\u5728commit\u4e00\u4e2a\u6ca1\u5199\u6ee1\u7684segment\uff0c\u7b49\u5f85\u65f6\u95f4\u662f7\u5929 LogSegment\u6587\u4ef6\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u5206\u522b\u662f.index \u548c.log\u6587\u4ef6\uff0c\u5206\u522b\u8868\u793asegment\u7d22\u5f15\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u3002 partition\u5168\u5c40\u7684\u7b2c\u4e00\u4e2asegment\u4ece0\u5f00\u59cb\uff0c\u540e\u7eed\u6bcf\u4e2asegment\u6587\u4ef6\u540d\u4e3a\u4e0a\u4e00\u4e2asegment\u6587\u4ef6\u6700\u540e\u4e00\u6761\u6d88\u606f\u7684offset\u503c \u6570\u503c\u5927\u5c0f\u4e3a64\u4f4d\uff0c20\u4e2a\u5b57\u7b26\u957f\u5ea6\uff0c\u6ca1\u6709\u6570\u5b57\u7684\u75280\u586b\u5145 # the first segment 00000000000000000000 .index 00000000000000000000 .log # the second segment 00000000000000170410 .index 00000000000000170410 .log","title":"5\u6570\u636e\u68c0\u7d22\u673a\u5236"},{"location":"db/kafka/inaction/#6","text":"\u4e09\u79cd\u6a21\u5f0f 0\uff0c at least once\uff0c \u6d88\u606f\u7edd\u5bf9\u4e0d\u4f1a\u4e22\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u91cd\u590d\u4f20\u8f93 1\uff0cat most once\uff0c\u6d88\u606f\u7edd\u5bf9\u53ef\u80fd\u4f1a\u4e22\uff0c\u4f46\u662f\u7edd\u5bf9\u4e0d\u4f1a\u518d\u6b21\u4f20\u8f93 2\uff0cexactly once\uff0c\u6bcf\u6761\u6d88\u606f\u80af\u5b9a\u4f1a\u88ab\u4f20\u8f93\u4e00\u6b21\u4e14\u4ec5\u4f20\u8f93\u4e00\u6b21","title":"6\u6570\u636e\u5b89\u5168\u6027"},{"location":"db/kafka/inaction/#61producer-deliver-guarantee","text":"acks\uff1a \u5728isr\u4e2d\u7684leader \u786e\u8ba4\u540e\u53d1\u9001\u4e00\u6279\u6d88\u606f \u65e0\u9700\u7b49\u5f85broker\u7684\u56de\u5e94\uff0c\u53d1\u9001\u4e0b\u4e00\u6279\u6d88\u606f \u9700\u8981\u7b49\u5f85\u6240\u6709\u7684follower\u90fd\u63a5\u53d7\u540e\u624d\u7b97\u53d1\u9001\u5b8c\u6210\uff0c\u53ef\u9760\u6027\u6700\u9ad8\u3002","title":"6.1Producer deliver guarantee"},{"location":"db/kafka/inaction/#62-isr-in-sync-replica","text":"\u76ee\u7684\u662f\u786e\u4fdd\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u5feb\u901f\u7684\u9009\u62e9\u65b0\u7684\u4e3b\u8282\u70b9\uff0c\u6765\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002 \u5173\u952e\u8bcd AR Assigned Replicas \u7528\u6765\u6807\u8bc6\u526f\u672c\u7684\u5168\u96c6 OSR out-sync Replicas \u79bb\u5f00\u540c\u6b65\u961f\u5217\u7684\u526f\u672c ISR in-sync Replicas \u5728\u540c\u6b65\u961f\u5217\u4e2d\u7684\u526f\u672c ISR = Leader+\u6ca1\u6709\u843d\u540e\u592a\u591a\u7684follower AR = ISR+OSR \u6570\u636e\u6d41\u901a\u8fc7\u7a0b Producer -- push \u2192 leader leader \u2190pull -- follower follower \u95f4\u9694\u65f6\u95f4\u4eceleader \u62c9\u53d6\u6570\u636e\uff0c\u4fdd\u6301\u6570\u636e\u540c\u6b65 ISR \u5f53\u4e3b\u8282\u70b9\u6302\u6389\uff0c\u4eceISR\u4e2d\u53bb\u9009\u62e9\u4e3b\u8282\u70b9 \u5224\u65ad\u662f\u5426\u5728ISR\u4e2d\u7684\u6807\u51c6 \u8d85\u8fc710s\u6ca1\u6709\u540c\u6b65\u6570\u636e replica.lag.time.max.ms = 10000 \u548cleader\u5dee4000\u6761\u6570\u636e replica.lag.max.messages = 4000 \u810f\u8282\u70b9\u9009\u4e3e kafka\u7684\u4e00\u79cd\u964d\u7ea7\u63aa\u65bd \u9009\u62e9\u7b2c\u4e00\u4e2a\u6062\u590d\u7684\u8282\u70b9\u4f5c\u4e3aleader\u8fdb\u884c\u670d\u52a1\uff0c\u5e76\u4ee5\u5b83\u7684\u6570\u636e\u4f5c\u4e3a\u57fa\u51c6","title":"6.2 ISR\u673a\u5236 In Sync Replica"},{"location":"db/kafka/inaction/#63broker","text":"\u65e0\u8bba\u6d88\u606f\u662f\u5426\u88ab\u6d88\u8d39\uff0ckafka\u90fd\u4f1a\u4fdd\u7559\u6240\u6709\u7684\u6d88\u606f\uff0c\u5728\u6d88\u606f\u7b56\u7565\u4e0a\u6709\u4e24\u79cd\u53ef\u4ee5\u9009\u62e9\u7684 \u57fa\u4e8e\u65f6\u95f4\uff1alog.retention.hours=168 # 7days \u57fa\u4e8e\u5927\u5c0f: log.retention.bytes=1073741824 # 10GB","title":"6.3Broker\u6570\u636e\u5b58\u50a8\u673a\u5236"},{"location":"db/kafka/inaction/#64","text":"\u5982\u679cconsumer\u8bbe\u7f6e\u4e3aautocommit\uff0c consumer\u4e00\u65e6\u8bfb\u53d6\u5230\u6570\u636e\u5c31\u8fdb\u884c\u63d0\u4ea4 \u8bfb\u5b8c\u6d88\u606f\u5148commit\uff0c\u5728\u8fdb\u884c\u5904\u7406 \u5982\u679c\u5904\u7406\u5931\u8d25\uff0c\u5219\u65e0\u6cd5\u91cd\u65b0\u518d\u8bfb\u53d6\u5230\u8fd9\u4e2a\u6570\u636e\u3002 # \u6f0f\u8bfb \u8fd9\u5bf9\u5e94\u4e86at most once \u8bfb\u5b8c\u6d88\u606f\u5148\u5904\u7406\u518dcommit \u5982\u5982\u679c\u5904\u7406\u5b8c\u4e4b\u540e\u8fd8\u6ca1\u6765\u5f97\u53cacommit\uff0cconsumer\u5d29\u6e83\u4e86\uff0c\u4f1a\u5bfc\u81f4consumer\u91cd\u542f\u540e\uff0c\u4f1a\u628a\u8be5\u6d88\u606f\u91cd\u590d\u5904\u7406\u4e00\u6b21\u3002 # \u91cd\u590d\u8bfb \u8fd9\u5bf9\u5e94\u4e86at least once \u4e00\u5b9a\u8981\u505a\u5230exactly once\u7684\uff0c\u9700\u8981\u534f\u8c03offset\u548c\u5b9e\u9645\u64cd\u4f5c\u7684\u8f93\u51fa \u4e24\u9636\u6bb5\u63d0\u4ea4","title":"6.4\u6d88\u8d39\u8005\u6570\u636e\u6d88\u8d39\u4fdd\u8bc1"},{"location":"db/kafka/inaction/#7kafka","text":"","title":"7kafka\u4f18\u5316"},{"location":"db/kafka/inaction/#71partition","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2apartition\u7684\u541e\u5410\u91cf\u4e3a \u51e0MB/s\uff0c\u589e\u52a0\u66f4\u591a\u7684partition\u610f\u5473\u7740 \u66f4\u9ad8\u7684\u5e76\u884c\u548c\u541e\u5410 \u62d3\u5c55\u540c\u4e00\u4e2a\u6d88\u8d39\u8005\u7ec4\u7684\u6d88\u8d39\u8005\u6570\u76ee \u5982\u679c\u6709\u5f88\u591a\u9650\u5236\u7684brokers\uff0c\u5219\u53ef\u4ee5\u5229\u7528\u5230brokers \u9020\u6210\u66f4\u591a\u7684zookeeper\u9009\u4e3e kafka\u6253\u5f00\u66f4\u591a\u7684\u6587\u4ef6 \u8c03\u6574\u7b56\u7565 \u5982\u679c\u96c6\u7fa4\u8f83\u5c0f\uff0c\u5219\u914d\u7f6e2*broker\u6570\u91cf\u7684partition\u6570\u76ee \u5982\u679c\u96c6\u7fa4\u8f83\u5927\uff0c\u5219\u914d\u7f6e1*broker\u6570\u91cf\u7684partition \u8003\u8651\u6700\u9ad8\u5cf0\u9700\u8981\u541e\u5410\u7684\u5e76\u884cconsumer\u6570\u91cf\uff0c\u8c03\u6574partition\u6570\u91cf\uff0c\u5982\u679c\u5e94\u7528\u573a\u666f\u9700\u898120\u4e2aconsumer\u8fdb\u884c\u6d88\u8d39\uff0c\u90a3\u4e48\u8bbe\u7f6e\u621020\u4e2apartition","title":"7.1partition\u6570\u76ee"},{"location":"db/kafka/inaction/#72replication-factor","text":"\u51b3\u5b9a\u4e86\u526f\u672c\u7684\u6570\u76ee\uff0c\u66f4\u591a\u7684\u526f\u672c\u610f\u5473\u7740 \u7cfb\u7edf\u66f4\u7a33\u5b9a \u66f4\u591a\u7684\u5ef6\u8fdf \u78c1\u76d8\u4f7f\u7528\u7387\u4f1a\u66f4\u9ad8 \u8c03\u6574\uff1a \u4e0d\u8981\u5728\u751f\u4ea7\u73af\u8282\u4e2d\u5c06RF\u8bbe\u7f6e\u4e3a1 \u5982\u679creplication\u6027\u80fd\u6210\u4e3a\u4e86\u74f6\u9888\uff0c\u4f7f\u7528\u66f4\u597d\u7684broker\uff0c\u800c\u4e0d\u662f\u964d\u4f4eRF\u7684\u6570\u91cf","title":"7.2replication factor"},{"location":"db/kafka/inaction/#73","text":"\u4e3a\u4e86\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u9700\u8981\u5b9a\u671f\u7684\u53bb\u6279\u91cf\u7684\u5199\u6587\u4ef6","title":"7.3\u6279\u91cf\u5199\u5165"},{"location":"db/mysql/innodb-lock/","text":"Innodb\u4e2d\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u548c\u9501\u7684\u5173\u7cfb Note \u672c\u6587\u8bb0\u5f55\u4e8e\u7f8e\u56e2\u6280\u672f\u535a\u5ba2 - \u4ecb\u7ecd\u4e86\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b - \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u9501\u8fbe\u6210\u5bf9\u5e94\u7684\u63a7\u5236 - \u4ecb\u7ecd\u4e86MVCC 1.Intro \u4e8b\u52a1\u7684\u56db\u79cd\u6027\u8d28ACID\uff0c\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002\u786e\u4fdd\u4e86\u4e8b\u52a1\u662f\u6b63\u786e\u53ef\u9760\u7684\u3002 \u539f\u5b50\u6027 \uff08Atomicity\uff09\uff1a\u4e00\u4e2a\u4e8b\u52a1\uff08transaction\uff09\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u6216\u8005\u5168\u90e8\u5b8c\u6210\uff0c\u6216\u8005\u5168\u90e8\u4e0d\u5b8c\u6210\uff0c\u4e0d\u4f1a\u7ed3\u675f\u5728\u4e2d\u95f4\u67d0\u4e2a\u73af\u8282\u3002\u4e8b\u52a1\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u4f1a\u88ab\u56de\u6eda\uff08Rollback\uff09\u5230\u4e8b\u52a1\u5f00\u59cb\u524d\u7684\u72b6\u6001\uff0c\u5c31\u50cf\u8fd9\u4e2a\u4e8b\u52a1\u4ece\u6765\u6ca1\u6709\u6267\u884c\u8fc7\u4e00\u6837\u3002\u5373\uff0c\u4e8b\u52a1\u4e0d\u53ef\u5206\u5272\u3001\u4e0d\u53ef\u7ea6\u7b80\u3002 \u4e00\u81f4\u6027 \uff08Consistency\uff09\uff1a\u5728\u4e8b\u52a1\u5f00\u59cb\u4e4b\u524d\u548c\u4e8b\u52a1\u7ed3\u675f\u4ee5\u540e\uff0c\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u6ca1\u6709\u88ab\u7834\u574f\u3002\u8fd9\u8868\u793a\u5199\u5165\u7684\u8d44\u6599\u5fc5\u987b\u5b8c\u5168\u7b26\u5408\u6240\u6709\u7684\u9884\u8bbe \u7ea6\u675f \u3001 \u89e6\u53d1\u5668 \u3001 \u7ea7\u8054\u56de\u6eda \u7b49\u3002 \u9694\u79bb\u6027 \uff08Isolation\uff09\uff1a\u6570\u636e\u5e93\u5141\u8bb8\u591a\u4e2a\u5e76\u53d1\u4e8b\u52a1\u540c\u65f6\u5bf9\u5176\u6570\u636e\u8fdb\u884c\u8bfb\u5199\u548c\u4fee\u6539\u7684\u80fd\u529b\uff0c\u9694\u79bb\u6027\u53ef\u4ee5\u9632\u6b62\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\u7531\u4e8e\u4ea4\u53c9\u6267\u884c\u800c\u5bfc\u81f4\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u3002\u4e8b\u52a1\u9694\u79bb\u5206\u4e3a\u4e0d\u540c\u7ea7\u522b\uff1a \u5305\u62ec\u672a\u63d0\u4ea4\u8bfb\uff08Read uncommitted\uff09\u3001 \u63d0\u4ea4\u8bfb\uff08read committed\uff09\u3001 \u53ef\u91cd\u590d\u8bfb\uff08repeatable read\uff09 \u4e32\u884c\u5316\uff08Serializable\uff09\u3002 \u6301\u4e45\u6027 \uff08Durability\uff09\uff1a\u4e8b\u52a1\u5904\u7406\u7ed3\u675f\u540e\uff0c\u5bf9\u6570\u636e\u7684\u4fee\u6539\u5c31\u662f\u6c38\u4e45\u7684\uff0c\u5373\u4fbf\u7cfb\u7edf\u6545\u969c\u4e5f\u4e0d\u4f1a\u4e22\u5931. 1 \u5728\u9694\u79bb\u6027\u548c\u4e00\u81f4\u6027\u4e0a\uff0c\u4e00\u822c\u91c7\u7528\u52a0\u9501\u7684\u65b9\u5f0f\u3002\u56e0\u4e3a\u6570\u636e\u5e93\u662f\u4e2a\u9ad8\u5e76\u53d1\u5e94\u7528\uff0c\u540c\u4e00\u65f6\u95f4\u4f1a\u6709\u5927\u91cf\u7684\u5e76\u53d1\u8bbf\u95ee\u3002\u5982\u679c\u8fc7\u5ea6\u52a0\u9501\uff0c\u4f1a\u6781\u5927\u7684\u5f71\u54cd\u5e76\u53d1\u5904\u7406\u80fd\u529b\u3002\u6240\u4ee5\u5bf9\u4e8e\u52a0\u9501\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u8bf4\u5c31\u662f\u6570\u636e\u5e93\u5bf9\u4e8e\u4e8b\u52a1\u5904\u7406\u7684\u7cbe\u9ad3\u6240\u5728\u3002 2.\u4e00\u6b21\u52a0\u9501\u8fd8\u662f\u4e24\u6bb5\u9501 \u4e00\u822c\u5e94\u7528\u90fd\u662f\u4e00\u6b21\u52a0\u9501\uff0c\u63d0\u524d\u77e5\u9053\u54ea\u4e9b\u6570\u636e\u4f1a\u88ab\u7528\u5230\uff0c\u7136\u540e\u5168\u90e8\u9501\u4f4f\uff0c\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u91ca\u653e\u9501\uff0c\u80fd\u591f\u6709\u6548\u7684\u907f\u514d\u5faa\u73af\u6b7b\u9501\u3002\u4f46\u662f\u6570\u636e\u5e93\u4e2d\u4e0d\u9002\u7528\uff0c\u6570\u636e\u5e93\u4e0d\u4f1a\u77e5\u9053\u54ea\u4e9b\u6570\u636e\u4f1a\u88ab\u7528\u5230\u3002 \u6240\u4ee5\u6570\u636e\u5e93\u4f7f\u7528\u4e86\u4e24\u6bb5\u9501\u3002\u5c06\u4e8b\u7269\u5206\u4e3a\u4e86\u4e24\u4e2a\u9636\u6bb5\uff0c\u52a0\u9501\u9636\u6bb5\uff0c\u548c\u89e3\u9501\u9636\u6bb5\u3002 \u52a0\u9501\u9636\u6bb5\uff1a\u5728\u8be5\u9636\u6bb5\u53ef\u4ee5\u8fdb\u884c\u52a0\u9501\u64cd\u4f5c\u3002\u5728\u5bf9\u4efb\u4f55\u6570\u636e\u8fdb\u884c\u8bfb\u64cd\u4f5c\u4e4b\u524d\u8981\u7533\u8bf7\u5e76\u83b7\u5f97S\u9501\uff08\u5171\u4eab\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u53ef\u4ee5\u7ee7\u7eed\u52a0\u5171\u4eab\u9501\uff0c\u4f46\u4e0d\u80fd\u52a0\u6392\u5b83\u9501\uff09\uff0c\u5728\u8fdb\u884c\u5199\u64cd\u4f5c\u4e4b\u524d\u8981\u7533\u8bf7\u5e76\u83b7\u5f97X\u9501\uff08\u6392\u5b83\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u4e0d\u80fd\u518d\u83b7\u5f97\u4efb\u4f55\u9501\uff09\u3002\u52a0\u9501\u4e0d\u6210\u529f\uff0c\u5219\u4e8b\u52a1\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u52a0\u9501\u6210\u529f\u624d\u7ee7\u7eed\u6267\u884c\u3002 \u89e3\u9501\u9636\u6bb5\uff1a\u5f53\u4e8b\u52a1\u91ca\u653e\u4e86\u4e00\u4e2a\u5c01\u9501\u4ee5\u540e\uff0c\u4e8b\u52a1\u8fdb\u5165\u89e3\u9501\u9636\u6bb5\uff0c\u5728\u8be5\u9636\u6bb5\u53ea\u80fd\u8fdb\u884c\u89e3\u9501\u64cd\u4f5c\u4e0d\u80fd\u518d\u8fdb\u884c\u52a0\u9501\u64cd\u4f5c\u3002 \u4e8b\u52a1 \u52a0\u9501/\u89e3\u9501 begin; Insert into xxx_table.... \u52a0insert\u9501 update xxx_table set ... \u52a0update\u5bf9\u5e94\u7684\u9501 delete from xxx_table ... \u52a0delete\u5bf9\u5e94\u7684\u9501 commit; \u4e8b\u52a1\u63d0\u4ea4\u65f6\uff0c\u540c\u65f6\u91ca\u653einsert, update, delete\u7684\u9501 \u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u65e0\u6cd5\u907f\u514d\u6b7b\u9501\uff0c\u4f46\u662f\u4e24\u6bb5\u9501\u534f\u8bae\u53ef\u4ee5\u4fdd\u8bc1\u4e8b\u52a1\u7684\u5e76\u53d1\u8c03\u5ea6\u662f\u4e32\u884c\u5316\uff08\u4e32\u884c\u5316\u5f88\u91cd\u8981\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6062\u590d\u548c\u5907\u4efd\u7684\u65f6\u5019\uff09\u7684\u3002 3.\u4e8b\u52a1\u7684\u52a0\u9501\u65b9\u5f0f 3.1\u4e8b\u52a1\u7684\u56db\u79cd\u9694\u79bb\u7ea7\u522b \u4e8b\u52a1\u4e2d\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u6027\uff0c\u63d0\u51fa\u4e86\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\u3002 \u810f\u8bfb\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u5230\u4e86\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u4e00\u4e2a\u4e8b\u52a1\u5728\u591a\u6b21\u8bfb\u53d6\u8868\u4e2d\u7684\u4e00\u884c\u6570\u636e\u65f6\uff0c\u6570\u636e\u4e0d\u4e00\u81f4\u3002 \u5e7b\u8bfb\uff1a\u4e8b\u52a1\u4e0d\u662f\u72ec\u7acb\u6267\u884c\u7684\uff0c\u8bfb\u53d6\u5230\u4e86\u5176\u4ed6\u4e8b\u7269\u65b0\u589e\u7684\u6570\u636e\u3002 \u9694\u79bb\u7ea7\u522b \u810f\u8bfb\uff08Dirty Read\uff09 \u4e0d\u53ef\u91cd\u590d\u8bfb\uff08NonRepeatable Read\uff09 \u5e7b\u8bfb\uff08Phantom Read\uff09 \u672a\u63d0\u4ea4\u8bfb \u53ef\u80fd \u53ef\u80fd \u53ef\u80fd \u5df2\u63d0\u4ea4\u8bfb \u4e0d\u53ef \u53ef\u80fd \u53ef\u80fd \u53ef\u91cd\u590d\u8bfb \u4e0d\u53ef\u80fd \u4e0d\u53ef\u80fd \u53ef\u80fd \u53ef\u7a7f\u884c\u5316 \u4e0d\u53ef\u80fd \u4e0d\u53ef\u80fd \u4e0d\u53ef\u80fd \u672a\u63d0\u4ea4\u8bfb\uff1a\u5141\u8bb8\u810f\u8bfb\uff0c\u4e5f\u5c31\u662f\u80fd\u591f\u8bfb\u53d6\u5230\u5176\u4ed6\u4e8b\u7269\u4e2d\u6ca1\u6709\u63d0\u4ea4\u7684\u6570\u636e\uff1b \u63d0\u4ea4\u8bfb\uff1a\u53ea\u80fd\u591f\u8bfb\u53d6\u5df2\u7ecf\u63d0\u4ea4\u7684\u6570\u636e\u3002Oracle\u7b49\u591a\u6570\u6570\u636e\u5e93\u7684\u9ed8\u8ba4\u662f\u8be5\u7ea7\u522b\u7684\uff1b \u53ef\u91cd\u590d\u8bfb\uff1a\u5728\u540c\u4e00\u4e2a\u4e8b\u7269\u5185\u7684\u67e5\u8be2\u90fd\u662f\u4e8b\u7269\u5f00\u59cb\u65f6\u523b\u4e00\u81f4\u7684\uff0c**InnoDB\u7684\u9ed8\u8ba4**\u7ea7\u522b\u3002\u4f46\u662f\u8fd8\u662f\u5b58\u5728\u5e7b\u8bfb\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u4e8b\u7269\u524d\u540e\u5bf9\u5e94\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u3002 \u4e32\u884c\u8bfb\uff1a\u5b8c\u5168\u4e32\u884c\u5316\u7684\u8bfb\uff0c\u6bcf\u6b21\u8bfb\u90fd\u9700\u8981\u8868\u7ea7\u522b\u7684\u5171\u4eab\u9501\uff0c\u8bfb\u5199\u90fd\u4f1a\u963b\u585e\u3002 3.2Mysql\u4e2d\u9501\u7684\u79cd\u7c7b MySQL\u4e2d\u9501\u7684\u79cd\u7c7b\u5f88\u591a\uff0c\u6709\u5e38\u89c1\u7684\u8868\u9501\u548c\u884c\u9501\uff0c\u4e5f\u6709\u65b0\u52a0\u5165\u7684Metadata Lock\u7b49\u7b49\uff0c \u8868\u9501\u662f\u5bf9\u4e00\u6574\u5f20\u8868\u52a0\u9501\uff0c\u867d\u7136\u53ef\u5206\u4e3a\u8bfb\u9501\u548c\u5199\u9501\uff0c\u4f46\u6bd5\u7adf\u662f\u9501\u4f4f\u6574\u5f20\u8868\uff0c\u4f1a\u5bfc\u81f4\u5e76\u53d1\u80fd\u529b\u4e0b\u964d\uff0c\u4e00\u822c\u662f\u505addl\u5904\u7406\u65f6\u4f7f\u7528\uff0c\u4f8b\u5982\u7ed9\u8868\u52a0\u5165\u7d22\u5f15\u7b49\u64cd\u4f5c\uff0c \u884c\u9501\u5219\u662f\u9501\u4f4f\u6570\u636e\u884c\uff0c\u8fd9\u79cd\u52a0\u9501\u65b9\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u7531\u4e8e\u53ea\u9501\u4f4f\u6709\u9650\u7684\u6570\u636e\uff0c\u5bf9\u4e8e\u5176\u5b83\u6570\u636e\u4e0d\u52a0\u9650\u5236\uff0c\u6240\u4ee5\u5e76\u53d1\u80fd\u529b\u5f3a\uff0cMySQL\u4e00\u822c\u90fd\u662f\u7528\u884c\u9501\u6765\u5904\u7406\u5e76\u53d1\u4e8b\u52a1\u3002 3.3\u63d0\u4ea4\u8bfb\uff08Read Committed\uff09 \u5df2\u63d0\u4ea4\u8bfb\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u65f6\u4e0d\u52a0\u9501\u7684\uff0c\u4f46\u662f\u6570\u636e\u7684\u5199\u5165\u3001\u4fee\u6539\u548c\u5220\u9664\u65f6\u9700\u8981\u52a0\u9501\u7684\u3002 MySQL > show create table class_teacher \\ G \\ Table : class_teacher Create Table : CREATE TABLE ` class_teacher ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` class_name ` varchar ( 100 ) COLLATE utf8mb4_unicode_ci NOT NULL , ` teacher_id ` int ( 11 ) NOT NULL , PRIMARY KEY ( ` id ` ), KEY ` idx_teacher_id ` ( ` teacher_id ` ) ) ENGINE = InnoDB AUTO_INCREMENT = 5 DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci MySQL > select * from class_teacher ; + ----+--------------+------------+ | id | class_name | teacher_id | + ----+--------------+------------+ | 1 | \u521d\u4e09\u4e00\u73ed | 1 | | 3 | \u521d\u4e8c\u4e00\u73ed | 2 | | 4 | \u521d\u4e8c\u4e8c\u73ed | 2 | + ----+--------------+------------+ Innodb\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\u65f6RR\u7ea7\u522b\u7684\uff0c\u53ef\u91cd\u590d\u8bfb\u7ea7\u522b\u7684\u3002\u6240\u4ee5\u9996\u5148\u5f97\u8bb2\u4f1a\u8bdd\u5f00\u542f\u6210\u4e3aRC\u7ea7\u522b\u7684\uff0c\u5e76\u4e14\u8bbe\u7f6ebinlog\u6a21\u5f0f\u3002 SET session transaction isolation level read committed ; SET SESSION binlog_format = 'ROW' ; \uff08\u6216\u8005\u662f MIXED \uff09 \u4e8b\u52a1A \u4e8b\u52a1B begin; begin; update class_teacher set class_name=\u2018\u521d\u4e09\u4e8c\u73ed\u2019 where teacher_id=1; update class_teacher set class_name=\u2018\u521d\u4e09\u4e09\u73ed\u2019 where teacher_id=1; commit; \u4e3a\u4e86\u9632\u6b62\u5e76\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4fee\u6539\u51b2\u7a81\uff0c\u4e8b\u52a1A\u4e2dMySQL\u7ed9teacher_id=1\u7684\u6570\u636e\u884c\u52a0\u9501\uff0c\u5e76\u4e00\u76f4\u4e0dcommit\uff08\u91ca\u653e\u9501\uff09\uff0c\u90a3\u4e48\u4e8b\u52a1B\u4e5f\u5c31\u4e00\u76f4\u62ff\u4e0d\u5230\u8be5\u884c\u9501\uff0cwait\u76f4\u5230\u8d85\u65f6\u3002 \u8fd9\u65f6\u6211\u4eec\u8981\u6ce8\u610f\u5230\uff0cteacher_id\u662f\u6709\u7d22\u5f15\u7684\uff0c\u5982\u679c\u662f**\u6ca1\u6709\u7d22\u5f15**\u7684class_name\u5462\uff1fupdate class_teacher set teacher_id=3 where class_name = \u2018\u521d\u4e09\u4e00\u73ed\u2019; \u90a3\u4e48MySQL\u4f1a\u7ed9**\u6574\u5f20\u8868\u7684\u6240\u6709\u6570\u636e\u884c**\u7684\u52a0\u884c\u9501\u3002 \u8fd9\u91cc\u542c\u8d77\u6765\u6709\u70b9\u4e0d\u53ef\u601d\u8bae\uff0c\u4f46\u662f\u5f53sql\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0cMySQL\u5e76\u4e0d\u77e5\u9053\u54ea\u4e9b\u6570\u636e\u884c\u662f class_name = \u2018\u521d\u4e09\u4e00\u73ed\u2019\u7684\uff08 \u6ca1\u6709\u7d22\u5f15**\u561b\uff09\uff0c**\u5982\u679c\u4e00\u4e2a\u6761\u4ef6\u65e0\u6cd5\u901a\u8fc7\u7d22\u5f15\u5feb\u901f\u8fc7\u6ee4\uff0c\u5b58\u50a8\u5f15\u64ce\u5c42\u9762\u5c31\u4f1a\u5c06\u6240\u6709\u8bb0\u5f55\u52a0\u9501\u540e\u8fd4\u56de \uff0c\u518d\u7531MySQL Server\u5c42\u8fdb\u884c\u8fc7\u6ee4\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u5f53\u4e2d\uff0cMySQL\u505a\u4e86\u4e00\u4e9b\u6539\u8fdb\uff0c\u5728MySQL Server\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53d1\u73b0\u4e0d\u6ee1\u8db3\u540e\uff0c\u4f1a\u8c03\u7528unlock_row\u65b9\u6cd5\uff0c\u628a\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\u91ca\u653e\u9501 (\u8fdd\u80cc\u4e86\u4e8c\u6bb5\u9501\u534f\u8bae\u7684\u7ea6\u675f)\u3002\u8fd9\u6837\u505a\uff0c\u4fdd\u8bc1\u4e86\u6700\u540e\u53ea\u4f1a\u6301\u6709\u6ee1\u8db3\u6761\u4ef6\u8bb0\u5f55\u4e0a\u7684\u9501\uff0c\u4f46\u662f\u6bcf\u6761\u8bb0\u5f55\u7684\u52a0\u9501\u64cd\u4f5c\u8fd8\u662f\u4e0d\u80fd\u7701\u7565\u7684\u3002\u53ef\u89c1\u5373\u4f7f\u662fMySQL\uff0c\u4e3a\u4e86\u6548\u7387\u4e5f\u662f\u4f1a\u8fdd\u53cd\u89c4\u8303\u7684\u3002[^ 2] \u8fd9\u79cd\u60c5\u51b5\u540c\u6837\u9002\u7528\u4e8eMySQL\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522bRR\u3002\u6240\u4ee5\u5bf9\u4e00\u4e2a\u6570\u636e\u91cf\u5f88\u5927\u7684\u8868\u505a\u6279\u91cf\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\u76f8\u5e94\u7684\u7d22\u5f15\uff0cMySQL Server\u8fc7\u6ee4\u6570\u636e\u7684\u7684\u65f6\u5019\u7279\u522b\u6162\uff0c\u5c31\u4f1a\u51fa\u73b0\u867d\u7136\u6ca1\u6709\u4fee\u6539\u67d0\u4e9b\u884c\u7684\u6570\u636e\uff0c\u4f46\u662f\u5b83\u4eec\u8fd8\u662f\u88ab\u9501\u4f4f\u4e86\u7684\u73b0\u8c61\u3002 3.4\u53ef\u91cd\u590d\u8bfb\uff08Repeatable Read\uff09 \u8fd9\u662fInnoDB\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\uff0c 3.4.1 \u8bfb \u8bfb\u4e5f\u5c31\u662f\uff0c\u53ef\u91cd\u590d\u8bfb\u3002\u53ef\u91cd\u590d\u8bfb\u8fd9\u4e00\u6982\u5ff5\uff1a\u4e00\u4e8b\u52a1\u7684\u591a\u4e2a\u5b9e\u4f8b\u5728\u5e76\u53d1\u8bfb\u53d6\u6570\u636e\u7684\u65f6\uff0c\u4f1a\u770b\u5230\u540c\u6837\u7684\u6570\u636e\u884c\u3002 RC\uff08\u4e0d\u53ef\u91cd\u8bfb\uff09\u6a21\u5f0f\u4e0b\u7684\u5c55\u73b0\uff1a \u4e8b\u52a1A \u4e8b\u52a1B begin; begin; select id,class_name,teacher_id from class_teacher where teacher_id=1; update class_teacher set class_name='\u521d\u4e09\u4e09\u73ed' where id=1; commit; select id,class_name,teacher_id from class_teacher where teacher_id=1; commit; \u8fd9\u65f6\u5019\u4e8b\u52a1A\u4f1a\u8bfb\u53d6\u5230\u4e8b\u52a1B\u521a\u66f4\u65b0\u540e\u7684\u7ed3\u679c\u3002\u4e00\u6b21\u540c\u6837\u7684\u67e5\u8be2\uff0c\u524d\u540e\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u8fd9\u5c31\u662f\u5bfc\u81f4\u4e86\u4e0d\u53ef\u91cd\u590d\u8bfb\u3002 RR\u7ea7\u522b\u4e0b\u7684 \u4e8b\u52a1A \u4e8b\u52a1B \u4e8b\u52a1C begin; begin; begin; select id,class_name,teacher_id from class_teacher where teacher_id=1;i update class_teacher set class_name='\u521d\u4e09\u4e09\u73ed' where id=1; commit; insert into class_teacher values (null,'\u521d\u4e09\u4e09\u73ed',1); commit; select id,class_name,teacher_id from class_teacher where teacher_id=1; commit; \u4e8b\u52a1A\u5148\u505a\u4e86\u4e00\u6b21\u8bfb\u53d6\uff0c\u4e8b\u52a1B\u4e2d\u95f4\u4fee\u6539\u4e86id=1\u7684\u6570\u636e\uff0c\u5e76commit\u4e4b\u540e\uff0c\u4e8b\u52a1A\u7b2c\u4e8c\u6b21\u8bfb\u5230\u7684\u6570\u636e\u548c\u7b2c\u4e00\u6b21\u5b8c\u5168\u76f8\u540c\u3002\u6240\u4ee5\u8bf4\u5b83\u662f\u53ef\u91cd\u8bfb\u7684\u3002\u90a3\u4e48MySQL\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u8fd9\u91cc\u59d1\u4e14\u5356\u4e2a\u5173\u5b50\uff0c\u6211\u4eec\u5f80\u4e0b\u770b\u3002 3.5 \u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u7684\u533a\u522b \u4e0d\u53ef\u91cd\u590d\u8bfb\u7684\u91cd\u70b9\u5728\u4e8eupdate\u548cdelete\uff0c\u800c\u5e7b\u8bfb\u7684\u91cd\u70b9\u5728insert\u4e0a\u3002 \u5982\u679c\u4f7f\u7528\u9501\u673a\u5236\u6765\u5b9e\u73b0\u8fd9\u4e24\u79cd\u9694\u79bb\u7ea7\u522b\uff0c\u5728\u53ef\u91cd\u590d\u8bfb\u4e2d\uff0c\u8be5sql\u7b2c\u4e00\u6b21\u8bfb\u53d6\u5230\u6570\u636e\u540e\uff0c\u5c31\u5c06\u8fd9\u4e9b\u6570\u636e\u52a0\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u65e0\u6cd5\u4fee\u6539\u8fd9\u4e9b\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u53ef\u91cd\u590d\u8bfb\u4e86\u3002 \u4f46\u8fd9\u79cd\u65b9\u6cd5\u5374\u65e0\u6cd5\u9501\u4f4finsert\u7684\u6570\u636e\uff0c\u6240\u4ee5\u5f53\u4e8b\u52a1A\u5148\u524d\u8bfb\u53d6\u4e86\u6570\u636e\uff0c\u6216\u8005\u4fee\u6539\u4e86\u5168\u90e8\u6570\u636e\uff0c\u4e8b\u52a1B\u8fd8\u662f\u53ef\u4ee5insert\u6570\u636e\u63d0\u4ea4\uff0c\u8fd9\u65f6\u4e8b\u52a1A\u5c31\u4f1a\u53d1\u73b0\u83ab\u540d\u5176\u5999\u591a\u4e86\u4e00\u6761\u4e4b\u524d\u6ca1\u6709\u7684\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u5e7b\u8bfb\uff0c\u4e0d\u80fd\u901a\u8fc7\u884c\u9501\u6765\u907f\u514d\u3002 \u9700\u8981Serializable\u9694\u79bb\u7ea7\u522b \uff0c\u8bfb\u7528\u8bfb\u9501\uff0c\u5199\u7528\u5199\u9501\uff0c\u8bfb\u9501\u548c\u5199\u9501\u4e92\u65a5\uff0c\u8fd9\u4e48\u505a\u53ef\u4ee5\u6709\u6548\u7684\u907f\u514d\u5e7b\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u810f\u8bfb\u7b49\u95ee\u9898\uff0c\u4f46\u4f1a\u6781\u5927\u7684\u964d\u4f4e\u6570\u636e\u5e93\u7684\u5e76\u53d1\u80fd\u529b\u3002 \u6240\u4ee5\u8bf4\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u6700\u5927\u7684\u533a\u522b\uff0c\u5c31\u5728\u4e8e\u5982\u4f55\u901a\u8fc7\u9501\u673a\u5236\u6765\u89e3\u51b3\u4ed6\u4eec\u4ea7\u751f\u7684\u95ee\u9898\u3002 MySQL\u3001ORACLE\u3001PostgreSQL\u7b49\u6210\u719f\u7684\u6570\u636e\u5e93\uff0c\u51fa\u4e8e\u6027\u80fd\u8003\u8651\uff0c\u90fd\u662f\u4f7f\u7528\u4e86\u4ee5\u4e50\u89c2\u9501\u4e3a\u7406\u8bba\u57fa\u7840\u7684MVCC\uff08\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff09\u6765\u907f\u514d\u8fd9\u4e24\u79cd\u95ee\u9898\u3002 \u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501 \u60b2\u89c2\u9501 \u6b63\u5982\u5176\u540d\uff0c\u5b83\u6307\u7684\u662f\u5bf9\u6570\u636e\u88ab\u5916\u754c\uff08\u5305\u62ec\u672c\u7cfb\u7edf\u5f53\u524d\u7684\u5176\u4ed6\u4e8b\u52a1\uff0c\u4ee5\u53ca\u6765\u81ea\u5916\u90e8\u7cfb\u7edf\u7684\u4e8b\u52a1\u5904\u7406\uff09\u4fee\u6539\u6301\u4fdd\u5b88\u6001\u5ea6\uff0c\u56e0\u6b64\uff0c\u5728\u6574\u4e2a\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u6570\u636e\u5904\u4e8e\u9501\u5b9a\u72b6\u6001\u3002\u60b2\u89c2\u9501\u7684\u5b9e\u73b0\uff0c\u5f80\u5f80\u4f9d\u9760\u6570\u636e\u5e93\u63d0\u4f9b\u7684\u9501\u673a\u5236\uff08\u4e5f\u53ea\u6709\u6570\u636e\u5e93\u5c42\u63d0\u4f9b\u7684\u9501\u673a\u5236\u624d\u80fd\u771f\u6b63\u4fdd\u8bc1\u6570\u636e\u8bbf\u95ee\u7684\u6392\u4ed6\u6027\uff0c\u5426\u5219\uff0c\u5373\u4f7f\u5728\u672c\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u4e86\u52a0\u9501\u673a\u5236\uff0c\u4e5f\u65e0\u6cd5\u4fdd\u8bc1\u5916\u90e8\u7cfb\u7edf\u4e0d\u4f1a\u4fee\u6539\u6570\u636e\uff09\u3002 \u5728\u60b2\u89c2\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e8b\u52a1\u7684\u9694\u79bb\u6027\uff0c\u5c31\u9700\u8981\u4e00\u81f4\u6027\u9501\u5b9a\u8bfb\u3002\u8bfb\u53d6\u6570\u636e\u65f6\u7ed9\u52a0\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u65e0\u6cd5\u4fee\u6539\u8fd9\u4e9b\u6570\u636e\u3002\u4fee\u6539\u5220\u9664\u6570\u636e\u65f6\u4e5f\u8981\u52a0\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e9b\u6570\u636e\u3002 \u4e50\u89c2\u9501 \u76f8\u5bf9\u60b2\u89c2\u9501\u800c\u8a00\uff0c\u4e50\u89c2\u9501\u673a\u5236\u91c7\u53d6\u4e86\u66f4\u52a0\u5bbd\u677e\u7684\u52a0\u9501\u673a\u5236\u3002\u60b2\u89c2\u9501\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f9d\u9760\u6570\u636e\u5e93\u7684\u9501\u673a\u5236\u5b9e\u73b0\uff0c\u4ee5\u4fdd\u8bc1\u64cd\u4f5c\u6700\u5927\u7a0b\u5ea6\u7684\u72ec\u5360\u6027\u3002\u4f46\u968f\u4e4b\u800c\u6765\u7684\u5c31\u662f\u6570\u636e\u5e93\u6027\u80fd\u7684\u5927\u91cf\u5f00\u9500\uff0c\u7279\u522b\u662f\u5bf9\u957f\u4e8b\u52a1\u800c\u8a00\uff0c\u8fd9\u6837\u7684\u5f00\u9500\u5f80\u5f80\u65e0\u6cd5\u627f\u53d7\u3002 \u800c\u4e50\u89c2\u9501\u673a\u5236\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e50\u89c2\u9501\uff0c\u5927\u591a\u662f\u57fa\u4e8e\u6570\u636e\u7248\u672c\uff08 Version \uff09\u8bb0\u5f55\u673a\u5236\u5b9e\u73b0\u3002\u4f55\u8c13\u6570\u636e\u7248\u672c\uff1f\u5373\u4e3a\u6570\u636e\u589e\u52a0\u4e00\u4e2a\u7248\u672c\u6807\u8bc6\uff0c\u5728\u57fa\u4e8e\u6570\u636e\u5e93\u8868\u7684\u7248\u672c\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u4e00\u822c\u662f\u901a\u8fc7\u4e3a\u6570\u636e\u5e93\u8868\u589e\u52a0\u4e00\u4e2a \u201cversion\u201d \u5b57\u6bb5\u6765\u5b9e\u73b0\u3002\u8bfb\u53d6\u51fa\u6570\u636e\u65f6\uff0c\u5c06\u6b64\u7248\u672c\u53f7\u4e00\u540c\u8bfb\u51fa\uff0c\u4e4b\u540e\u66f4\u65b0\u65f6\uff0c\u5bf9\u6b64\u7248\u672c\u53f7\u52a0\u4e00\u3002\u6b64\u65f6\uff0c\u5c06\u63d0\u4ea4\u6570\u636e\u7684\u7248\u672c\u6570\u636e\u4e0e\u6570\u636e\u5e93\u8868\u5bf9\u5e94\u8bb0\u5f55\u7684\u5f53\u524d\u7248\u672c\u4fe1\u606f\u8fdb\u884c\u6bd4\u5bf9\uff0c\u5982\u679c\u63d0\u4ea4\u7684\u6570\u636e\u7248\u672c\u53f7\u5927\u4e8e\u6570\u636e\u5e93\u8868\u5f53\u524d\u7248\u672c\u53f7\uff0c\u5219\u4e88\u4ee5\u66f4\u65b0\uff0c\u5426\u5219\u8ba4\u4e3a\u662f\u8fc7\u671f\u6570\u636e\u3002 MVCC\u5728MySQL\u7684InnoDB\u4e2d\u7684\u5b9e\u73b0 \u5728InnoDB\u4e2d\uff0c\u4f1a\u5728\u6bcf\u884c\u6570\u636e\u540e\u6dfb\u52a0\u4e24\u4e2a\u989d\u5916\u7684\u9690\u85cf\u7684\u503c\u6765\u5b9e\u73b0MVCC\uff0c\u8fd9\u4e24\u4e2a\u503c\u4e00\u4e2a\u8bb0\u5f55\u8fd9\u884c\u6570\u636e\u4f55\u65f6\u88ab\u521b\u5efa\uff0c\u53e6\u5916\u4e00\u4e2a\u8bb0\u5f55\u8fd9\u884c\u6570\u636e\u4f55\u65f6\u8fc7\u671f\uff08\u6216\u8005\u88ab\u5220\u9664\uff09\u3002 \u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u5b58\u50a8\u7684\u5e76\u4e0d\u662f\u65f6\u95f4\uff0c\u800c\u662f\u4e8b\u52a1\u7684**\u7248\u672c\u53f7**\uff0c\u6bcf\u5f00\u542f\u4e00\u4e2a\u65b0\u4e8b\u52a1\uff0c\u4e8b\u52a1\u7684\u7248\u672c\u53f7\u5c31\u4f1a\u9012\u589e\u3002 \u5728\u53ef\u91cd\u8bfbRepeatable reads\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e0b\uff1a SELECT\u65f6\uff0c\u8bfb\u53d6\u521b\u5efa\u7248\u672c\u53f7<=\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\uff0c\u5220\u9664\u7248\u672c\u53f7\u4e3a\u7a7a\u6216>\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u3002 INSERT\u65f6\uff0c\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u4e3a\u884c\u7684\u521b\u5efa\u7248\u672c\u53f7 DELETE\u65f6\uff0c\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u4e3a\u884c\u7684\u5220\u9664\u7248\u672c\u53f7 UPDATE\u65f6\uff0c\u63d2\u5165\u4e00\u6761\u65b0\u7eaa\u5f55\uff0c\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u4e3a\u884c\u521b\u5efa\u7248\u672c\u53f7\uff0c\u540c\u65f6\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u5230\u539f\u6765\u5220\u9664\u7684\u884c \u901a\u8fc7MVCC\uff0c\u867d\u7136\u6bcf\u884c\u8bb0\u5f55\u90fd\u9700\u8981\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u66f4\u591a\u7684\u884c\u68c0\u67e5\u5de5\u4f5c\u4ee5\u53ca\u4e00\u4e9b\u989d\u5916\u7684\u7ef4\u62a4\u5de5\u4f5c\uff0c\u4f46\u53ef\u4ee5\u51cf\u5c11\u9501\u7684\u4f7f\u7528\uff0c\u5927\u591a\u6570\u8bfb\u64cd\u4f5c\u90fd\u4e0d\u7528\u52a0\u9501\uff0c\u8bfb\u6570\u636e\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u6027\u80fd\u5f88\u597d\uff0c\u5e76\u4e14\u4e5f\u80fd\u4fdd\u8bc1\u53ea\u4f1a\u8bfb\u53d6\u5230\u7b26\u5408\u6807\u51c6\u7684\u884c\uff0c\u4e5f\u53ea\u9501\u4f4f\u5fc5\u8981\u884c\u3002 \u539f\u6587\u5730\u5740 https://tech.meituan.com/2014/08/20/innodb-lock.html https://zh.wikipedia.org/wiki/ACID#cite_note-acid-1 \u21a9 \uff08\u53c2\u89c1\u300a\u9ad8\u6027\u80fdMySQL\u300b\u4e2d\u6587\u7b2c\u4e09\u7248p181\uff09 \u21a9","title":"Innodb\u4e2d\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u548c\u9501\u7684\u5173\u7cfb"},{"location":"db/mysql/innodb-lock/#innodb","text":"Note \u672c\u6587\u8bb0\u5f55\u4e8e\u7f8e\u56e2\u6280\u672f\u535a\u5ba2 - \u4ecb\u7ecd\u4e86\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b - \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u9501\u8fbe\u6210\u5bf9\u5e94\u7684\u63a7\u5236 - \u4ecb\u7ecd\u4e86MVCC","title":"Innodb\u4e2d\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u548c\u9501\u7684\u5173\u7cfb"},{"location":"db/mysql/innodb-lock/#1intro","text":"\u4e8b\u52a1\u7684\u56db\u79cd\u6027\u8d28ACID\uff0c\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002\u786e\u4fdd\u4e86\u4e8b\u52a1\u662f\u6b63\u786e\u53ef\u9760\u7684\u3002 \u539f\u5b50\u6027 \uff08Atomicity\uff09\uff1a\u4e00\u4e2a\u4e8b\u52a1\uff08transaction\uff09\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u6216\u8005\u5168\u90e8\u5b8c\u6210\uff0c\u6216\u8005\u5168\u90e8\u4e0d\u5b8c\u6210\uff0c\u4e0d\u4f1a\u7ed3\u675f\u5728\u4e2d\u95f4\u67d0\u4e2a\u73af\u8282\u3002\u4e8b\u52a1\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u4f1a\u88ab\u56de\u6eda\uff08Rollback\uff09\u5230\u4e8b\u52a1\u5f00\u59cb\u524d\u7684\u72b6\u6001\uff0c\u5c31\u50cf\u8fd9\u4e2a\u4e8b\u52a1\u4ece\u6765\u6ca1\u6709\u6267\u884c\u8fc7\u4e00\u6837\u3002\u5373\uff0c\u4e8b\u52a1\u4e0d\u53ef\u5206\u5272\u3001\u4e0d\u53ef\u7ea6\u7b80\u3002 \u4e00\u81f4\u6027 \uff08Consistency\uff09\uff1a\u5728\u4e8b\u52a1\u5f00\u59cb\u4e4b\u524d\u548c\u4e8b\u52a1\u7ed3\u675f\u4ee5\u540e\uff0c\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u6ca1\u6709\u88ab\u7834\u574f\u3002\u8fd9\u8868\u793a\u5199\u5165\u7684\u8d44\u6599\u5fc5\u987b\u5b8c\u5168\u7b26\u5408\u6240\u6709\u7684\u9884\u8bbe \u7ea6\u675f \u3001 \u89e6\u53d1\u5668 \u3001 \u7ea7\u8054\u56de\u6eda \u7b49\u3002 \u9694\u79bb\u6027 \uff08Isolation\uff09\uff1a\u6570\u636e\u5e93\u5141\u8bb8\u591a\u4e2a\u5e76\u53d1\u4e8b\u52a1\u540c\u65f6\u5bf9\u5176\u6570\u636e\u8fdb\u884c\u8bfb\u5199\u548c\u4fee\u6539\u7684\u80fd\u529b\uff0c\u9694\u79bb\u6027\u53ef\u4ee5\u9632\u6b62\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\u7531\u4e8e\u4ea4\u53c9\u6267\u884c\u800c\u5bfc\u81f4\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u3002\u4e8b\u52a1\u9694\u79bb\u5206\u4e3a\u4e0d\u540c\u7ea7\u522b\uff1a \u5305\u62ec\u672a\u63d0\u4ea4\u8bfb\uff08Read uncommitted\uff09\u3001 \u63d0\u4ea4\u8bfb\uff08read committed\uff09\u3001 \u53ef\u91cd\u590d\u8bfb\uff08repeatable read\uff09 \u4e32\u884c\u5316\uff08Serializable\uff09\u3002 \u6301\u4e45\u6027 \uff08Durability\uff09\uff1a\u4e8b\u52a1\u5904\u7406\u7ed3\u675f\u540e\uff0c\u5bf9\u6570\u636e\u7684\u4fee\u6539\u5c31\u662f\u6c38\u4e45\u7684\uff0c\u5373\u4fbf\u7cfb\u7edf\u6545\u969c\u4e5f\u4e0d\u4f1a\u4e22\u5931. 1 \u5728\u9694\u79bb\u6027\u548c\u4e00\u81f4\u6027\u4e0a\uff0c\u4e00\u822c\u91c7\u7528\u52a0\u9501\u7684\u65b9\u5f0f\u3002\u56e0\u4e3a\u6570\u636e\u5e93\u662f\u4e2a\u9ad8\u5e76\u53d1\u5e94\u7528\uff0c\u540c\u4e00\u65f6\u95f4\u4f1a\u6709\u5927\u91cf\u7684\u5e76\u53d1\u8bbf\u95ee\u3002\u5982\u679c\u8fc7\u5ea6\u52a0\u9501\uff0c\u4f1a\u6781\u5927\u7684\u5f71\u54cd\u5e76\u53d1\u5904\u7406\u80fd\u529b\u3002\u6240\u4ee5\u5bf9\u4e8e\u52a0\u9501\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u8bf4\u5c31\u662f\u6570\u636e\u5e93\u5bf9\u4e8e\u4e8b\u52a1\u5904\u7406\u7684\u7cbe\u9ad3\u6240\u5728\u3002","title":"1.Intro"},{"location":"db/mysql/innodb-lock/#2","text":"\u4e00\u822c\u5e94\u7528\u90fd\u662f\u4e00\u6b21\u52a0\u9501\uff0c\u63d0\u524d\u77e5\u9053\u54ea\u4e9b\u6570\u636e\u4f1a\u88ab\u7528\u5230\uff0c\u7136\u540e\u5168\u90e8\u9501\u4f4f\uff0c\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u91ca\u653e\u9501\uff0c\u80fd\u591f\u6709\u6548\u7684\u907f\u514d\u5faa\u73af\u6b7b\u9501\u3002\u4f46\u662f\u6570\u636e\u5e93\u4e2d\u4e0d\u9002\u7528\uff0c\u6570\u636e\u5e93\u4e0d\u4f1a\u77e5\u9053\u54ea\u4e9b\u6570\u636e\u4f1a\u88ab\u7528\u5230\u3002 \u6240\u4ee5\u6570\u636e\u5e93\u4f7f\u7528\u4e86\u4e24\u6bb5\u9501\u3002\u5c06\u4e8b\u7269\u5206\u4e3a\u4e86\u4e24\u4e2a\u9636\u6bb5\uff0c\u52a0\u9501\u9636\u6bb5\uff0c\u548c\u89e3\u9501\u9636\u6bb5\u3002 \u52a0\u9501\u9636\u6bb5\uff1a\u5728\u8be5\u9636\u6bb5\u53ef\u4ee5\u8fdb\u884c\u52a0\u9501\u64cd\u4f5c\u3002\u5728\u5bf9\u4efb\u4f55\u6570\u636e\u8fdb\u884c\u8bfb\u64cd\u4f5c\u4e4b\u524d\u8981\u7533\u8bf7\u5e76\u83b7\u5f97S\u9501\uff08\u5171\u4eab\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u53ef\u4ee5\u7ee7\u7eed\u52a0\u5171\u4eab\u9501\uff0c\u4f46\u4e0d\u80fd\u52a0\u6392\u5b83\u9501\uff09\uff0c\u5728\u8fdb\u884c\u5199\u64cd\u4f5c\u4e4b\u524d\u8981\u7533\u8bf7\u5e76\u83b7\u5f97X\u9501\uff08\u6392\u5b83\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u4e0d\u80fd\u518d\u83b7\u5f97\u4efb\u4f55\u9501\uff09\u3002\u52a0\u9501\u4e0d\u6210\u529f\uff0c\u5219\u4e8b\u52a1\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u52a0\u9501\u6210\u529f\u624d\u7ee7\u7eed\u6267\u884c\u3002 \u89e3\u9501\u9636\u6bb5\uff1a\u5f53\u4e8b\u52a1\u91ca\u653e\u4e86\u4e00\u4e2a\u5c01\u9501\u4ee5\u540e\uff0c\u4e8b\u52a1\u8fdb\u5165\u89e3\u9501\u9636\u6bb5\uff0c\u5728\u8be5\u9636\u6bb5\u53ea\u80fd\u8fdb\u884c\u89e3\u9501\u64cd\u4f5c\u4e0d\u80fd\u518d\u8fdb\u884c\u52a0\u9501\u64cd\u4f5c\u3002 \u4e8b\u52a1 \u52a0\u9501/\u89e3\u9501 begin; Insert into xxx_table.... \u52a0insert\u9501 update xxx_table set ... \u52a0update\u5bf9\u5e94\u7684\u9501 delete from xxx_table ... \u52a0delete\u5bf9\u5e94\u7684\u9501 commit; \u4e8b\u52a1\u63d0\u4ea4\u65f6\uff0c\u540c\u65f6\u91ca\u653einsert, update, delete\u7684\u9501 \u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u65e0\u6cd5\u907f\u514d\u6b7b\u9501\uff0c\u4f46\u662f\u4e24\u6bb5\u9501\u534f\u8bae\u53ef\u4ee5\u4fdd\u8bc1\u4e8b\u52a1\u7684\u5e76\u53d1\u8c03\u5ea6\u662f\u4e32\u884c\u5316\uff08\u4e32\u884c\u5316\u5f88\u91cd\u8981\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6062\u590d\u548c\u5907\u4efd\u7684\u65f6\u5019\uff09\u7684\u3002","title":"2.\u4e00\u6b21\u52a0\u9501\u8fd8\u662f\u4e24\u6bb5\u9501"},{"location":"db/mysql/innodb-lock/#3","text":"","title":"3.\u4e8b\u52a1\u7684\u52a0\u9501\u65b9\u5f0f"},{"location":"db/mysql/innodb-lock/#31","text":"\u4e8b\u52a1\u4e2d\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u6027\uff0c\u63d0\u51fa\u4e86\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\u3002 \u810f\u8bfb\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u5230\u4e86\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u4e00\u4e2a\u4e8b\u52a1\u5728\u591a\u6b21\u8bfb\u53d6\u8868\u4e2d\u7684\u4e00\u884c\u6570\u636e\u65f6\uff0c\u6570\u636e\u4e0d\u4e00\u81f4\u3002 \u5e7b\u8bfb\uff1a\u4e8b\u52a1\u4e0d\u662f\u72ec\u7acb\u6267\u884c\u7684\uff0c\u8bfb\u53d6\u5230\u4e86\u5176\u4ed6\u4e8b\u7269\u65b0\u589e\u7684\u6570\u636e\u3002 \u9694\u79bb\u7ea7\u522b \u810f\u8bfb\uff08Dirty Read\uff09 \u4e0d\u53ef\u91cd\u590d\u8bfb\uff08NonRepeatable Read\uff09 \u5e7b\u8bfb\uff08Phantom Read\uff09 \u672a\u63d0\u4ea4\u8bfb \u53ef\u80fd \u53ef\u80fd \u53ef\u80fd \u5df2\u63d0\u4ea4\u8bfb \u4e0d\u53ef \u53ef\u80fd \u53ef\u80fd \u53ef\u91cd\u590d\u8bfb \u4e0d\u53ef\u80fd \u4e0d\u53ef\u80fd \u53ef\u80fd \u53ef\u7a7f\u884c\u5316 \u4e0d\u53ef\u80fd \u4e0d\u53ef\u80fd \u4e0d\u53ef\u80fd \u672a\u63d0\u4ea4\u8bfb\uff1a\u5141\u8bb8\u810f\u8bfb\uff0c\u4e5f\u5c31\u662f\u80fd\u591f\u8bfb\u53d6\u5230\u5176\u4ed6\u4e8b\u7269\u4e2d\u6ca1\u6709\u63d0\u4ea4\u7684\u6570\u636e\uff1b \u63d0\u4ea4\u8bfb\uff1a\u53ea\u80fd\u591f\u8bfb\u53d6\u5df2\u7ecf\u63d0\u4ea4\u7684\u6570\u636e\u3002Oracle\u7b49\u591a\u6570\u6570\u636e\u5e93\u7684\u9ed8\u8ba4\u662f\u8be5\u7ea7\u522b\u7684\uff1b \u53ef\u91cd\u590d\u8bfb\uff1a\u5728\u540c\u4e00\u4e2a\u4e8b\u7269\u5185\u7684\u67e5\u8be2\u90fd\u662f\u4e8b\u7269\u5f00\u59cb\u65f6\u523b\u4e00\u81f4\u7684\uff0c**InnoDB\u7684\u9ed8\u8ba4**\u7ea7\u522b\u3002\u4f46\u662f\u8fd8\u662f\u5b58\u5728\u5e7b\u8bfb\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u4e8b\u7269\u524d\u540e\u5bf9\u5e94\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u3002 \u4e32\u884c\u8bfb\uff1a\u5b8c\u5168\u4e32\u884c\u5316\u7684\u8bfb\uff0c\u6bcf\u6b21\u8bfb\u90fd\u9700\u8981\u8868\u7ea7\u522b\u7684\u5171\u4eab\u9501\uff0c\u8bfb\u5199\u90fd\u4f1a\u963b\u585e\u3002","title":"3.1\u4e8b\u52a1\u7684\u56db\u79cd\u9694\u79bb\u7ea7\u522b"},{"location":"db/mysql/innodb-lock/#32mysql","text":"MySQL\u4e2d\u9501\u7684\u79cd\u7c7b\u5f88\u591a\uff0c\u6709\u5e38\u89c1\u7684\u8868\u9501\u548c\u884c\u9501\uff0c\u4e5f\u6709\u65b0\u52a0\u5165\u7684Metadata Lock\u7b49\u7b49\uff0c \u8868\u9501\u662f\u5bf9\u4e00\u6574\u5f20\u8868\u52a0\u9501\uff0c\u867d\u7136\u53ef\u5206\u4e3a\u8bfb\u9501\u548c\u5199\u9501\uff0c\u4f46\u6bd5\u7adf\u662f\u9501\u4f4f\u6574\u5f20\u8868\uff0c\u4f1a\u5bfc\u81f4\u5e76\u53d1\u80fd\u529b\u4e0b\u964d\uff0c\u4e00\u822c\u662f\u505addl\u5904\u7406\u65f6\u4f7f\u7528\uff0c\u4f8b\u5982\u7ed9\u8868\u52a0\u5165\u7d22\u5f15\u7b49\u64cd\u4f5c\uff0c \u884c\u9501\u5219\u662f\u9501\u4f4f\u6570\u636e\u884c\uff0c\u8fd9\u79cd\u52a0\u9501\u65b9\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u7531\u4e8e\u53ea\u9501\u4f4f\u6709\u9650\u7684\u6570\u636e\uff0c\u5bf9\u4e8e\u5176\u5b83\u6570\u636e\u4e0d\u52a0\u9650\u5236\uff0c\u6240\u4ee5\u5e76\u53d1\u80fd\u529b\u5f3a\uff0cMySQL\u4e00\u822c\u90fd\u662f\u7528\u884c\u9501\u6765\u5904\u7406\u5e76\u53d1\u4e8b\u52a1\u3002","title":"3.2Mysql\u4e2d\u9501\u7684\u79cd\u7c7b"},{"location":"db/mysql/innodb-lock/#33read-committed","text":"\u5df2\u63d0\u4ea4\u8bfb\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u65f6\u4e0d\u52a0\u9501\u7684\uff0c\u4f46\u662f\u6570\u636e\u7684\u5199\u5165\u3001\u4fee\u6539\u548c\u5220\u9664\u65f6\u9700\u8981\u52a0\u9501\u7684\u3002 MySQL > show create table class_teacher \\ G \\ Table : class_teacher Create Table : CREATE TABLE ` class_teacher ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` class_name ` varchar ( 100 ) COLLATE utf8mb4_unicode_ci NOT NULL , ` teacher_id ` int ( 11 ) NOT NULL , PRIMARY KEY ( ` id ` ), KEY ` idx_teacher_id ` ( ` teacher_id ` ) ) ENGINE = InnoDB AUTO_INCREMENT = 5 DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci MySQL > select * from class_teacher ; + ----+--------------+------------+ | id | class_name | teacher_id | + ----+--------------+------------+ | 1 | \u521d\u4e09\u4e00\u73ed | 1 | | 3 | \u521d\u4e8c\u4e00\u73ed | 2 | | 4 | \u521d\u4e8c\u4e8c\u73ed | 2 | + ----+--------------+------------+ Innodb\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\u65f6RR\u7ea7\u522b\u7684\uff0c\u53ef\u91cd\u590d\u8bfb\u7ea7\u522b\u7684\u3002\u6240\u4ee5\u9996\u5148\u5f97\u8bb2\u4f1a\u8bdd\u5f00\u542f\u6210\u4e3aRC\u7ea7\u522b\u7684\uff0c\u5e76\u4e14\u8bbe\u7f6ebinlog\u6a21\u5f0f\u3002 SET session transaction isolation level read committed ; SET SESSION binlog_format = 'ROW' ; \uff08\u6216\u8005\u662f MIXED \uff09 \u4e8b\u52a1A \u4e8b\u52a1B begin; begin; update class_teacher set class_name=\u2018\u521d\u4e09\u4e8c\u73ed\u2019 where teacher_id=1; update class_teacher set class_name=\u2018\u521d\u4e09\u4e09\u73ed\u2019 where teacher_id=1; commit; \u4e3a\u4e86\u9632\u6b62\u5e76\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4fee\u6539\u51b2\u7a81\uff0c\u4e8b\u52a1A\u4e2dMySQL\u7ed9teacher_id=1\u7684\u6570\u636e\u884c\u52a0\u9501\uff0c\u5e76\u4e00\u76f4\u4e0dcommit\uff08\u91ca\u653e\u9501\uff09\uff0c\u90a3\u4e48\u4e8b\u52a1B\u4e5f\u5c31\u4e00\u76f4\u62ff\u4e0d\u5230\u8be5\u884c\u9501\uff0cwait\u76f4\u5230\u8d85\u65f6\u3002 \u8fd9\u65f6\u6211\u4eec\u8981\u6ce8\u610f\u5230\uff0cteacher_id\u662f\u6709\u7d22\u5f15\u7684\uff0c\u5982\u679c\u662f**\u6ca1\u6709\u7d22\u5f15**\u7684class_name\u5462\uff1fupdate class_teacher set teacher_id=3 where class_name = \u2018\u521d\u4e09\u4e00\u73ed\u2019; \u90a3\u4e48MySQL\u4f1a\u7ed9**\u6574\u5f20\u8868\u7684\u6240\u6709\u6570\u636e\u884c**\u7684\u52a0\u884c\u9501\u3002 \u8fd9\u91cc\u542c\u8d77\u6765\u6709\u70b9\u4e0d\u53ef\u601d\u8bae\uff0c\u4f46\u662f\u5f53sql\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0cMySQL\u5e76\u4e0d\u77e5\u9053\u54ea\u4e9b\u6570\u636e\u884c\u662f class_name = \u2018\u521d\u4e09\u4e00\u73ed\u2019\u7684\uff08 \u6ca1\u6709\u7d22\u5f15**\u561b\uff09\uff0c**\u5982\u679c\u4e00\u4e2a\u6761\u4ef6\u65e0\u6cd5\u901a\u8fc7\u7d22\u5f15\u5feb\u901f\u8fc7\u6ee4\uff0c\u5b58\u50a8\u5f15\u64ce\u5c42\u9762\u5c31\u4f1a\u5c06\u6240\u6709\u8bb0\u5f55\u52a0\u9501\u540e\u8fd4\u56de \uff0c\u518d\u7531MySQL Server\u5c42\u8fdb\u884c\u8fc7\u6ee4\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u5f53\u4e2d\uff0cMySQL\u505a\u4e86\u4e00\u4e9b\u6539\u8fdb\uff0c\u5728MySQL Server\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53d1\u73b0\u4e0d\u6ee1\u8db3\u540e\uff0c\u4f1a\u8c03\u7528unlock_row\u65b9\u6cd5\uff0c\u628a\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\u91ca\u653e\u9501 (\u8fdd\u80cc\u4e86\u4e8c\u6bb5\u9501\u534f\u8bae\u7684\u7ea6\u675f)\u3002\u8fd9\u6837\u505a\uff0c\u4fdd\u8bc1\u4e86\u6700\u540e\u53ea\u4f1a\u6301\u6709\u6ee1\u8db3\u6761\u4ef6\u8bb0\u5f55\u4e0a\u7684\u9501\uff0c\u4f46\u662f\u6bcf\u6761\u8bb0\u5f55\u7684\u52a0\u9501\u64cd\u4f5c\u8fd8\u662f\u4e0d\u80fd\u7701\u7565\u7684\u3002\u53ef\u89c1\u5373\u4f7f\u662fMySQL\uff0c\u4e3a\u4e86\u6548\u7387\u4e5f\u662f\u4f1a\u8fdd\u53cd\u89c4\u8303\u7684\u3002[^ 2] \u8fd9\u79cd\u60c5\u51b5\u540c\u6837\u9002\u7528\u4e8eMySQL\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522bRR\u3002\u6240\u4ee5\u5bf9\u4e00\u4e2a\u6570\u636e\u91cf\u5f88\u5927\u7684\u8868\u505a\u6279\u91cf\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\u76f8\u5e94\u7684\u7d22\u5f15\uff0cMySQL Server\u8fc7\u6ee4\u6570\u636e\u7684\u7684\u65f6\u5019\u7279\u522b\u6162\uff0c\u5c31\u4f1a\u51fa\u73b0\u867d\u7136\u6ca1\u6709\u4fee\u6539\u67d0\u4e9b\u884c\u7684\u6570\u636e\uff0c\u4f46\u662f\u5b83\u4eec\u8fd8\u662f\u88ab\u9501\u4f4f\u4e86\u7684\u73b0\u8c61\u3002","title":"3.3\u63d0\u4ea4\u8bfb\uff08Read Committed\uff09"},{"location":"db/mysql/innodb-lock/#34repeatable-read","text":"\u8fd9\u662fInnoDB\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\uff0c","title":"3.4\u53ef\u91cd\u590d\u8bfb\uff08Repeatable Read\uff09"},{"location":"db/mysql/innodb-lock/#341","text":"\u8bfb\u4e5f\u5c31\u662f\uff0c\u53ef\u91cd\u590d\u8bfb\u3002\u53ef\u91cd\u590d\u8bfb\u8fd9\u4e00\u6982\u5ff5\uff1a\u4e00\u4e8b\u52a1\u7684\u591a\u4e2a\u5b9e\u4f8b\u5728\u5e76\u53d1\u8bfb\u53d6\u6570\u636e\u7684\u65f6\uff0c\u4f1a\u770b\u5230\u540c\u6837\u7684\u6570\u636e\u884c\u3002 RC\uff08\u4e0d\u53ef\u91cd\u8bfb\uff09\u6a21\u5f0f\u4e0b\u7684\u5c55\u73b0\uff1a \u4e8b\u52a1A \u4e8b\u52a1B begin; begin; select id,class_name,teacher_id from class_teacher where teacher_id=1; update class_teacher set class_name='\u521d\u4e09\u4e09\u73ed' where id=1; commit; select id,class_name,teacher_id from class_teacher where teacher_id=1; commit; \u8fd9\u65f6\u5019\u4e8b\u52a1A\u4f1a\u8bfb\u53d6\u5230\u4e8b\u52a1B\u521a\u66f4\u65b0\u540e\u7684\u7ed3\u679c\u3002\u4e00\u6b21\u540c\u6837\u7684\u67e5\u8be2\uff0c\u524d\u540e\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u8fd9\u5c31\u662f\u5bfc\u81f4\u4e86\u4e0d\u53ef\u91cd\u590d\u8bfb\u3002 RR\u7ea7\u522b\u4e0b\u7684 \u4e8b\u52a1A \u4e8b\u52a1B \u4e8b\u52a1C begin; begin; begin; select id,class_name,teacher_id from class_teacher where teacher_id=1;i update class_teacher set class_name='\u521d\u4e09\u4e09\u73ed' where id=1; commit; insert into class_teacher values (null,'\u521d\u4e09\u4e09\u73ed',1); commit; select id,class_name,teacher_id from class_teacher where teacher_id=1; commit; \u4e8b\u52a1A\u5148\u505a\u4e86\u4e00\u6b21\u8bfb\u53d6\uff0c\u4e8b\u52a1B\u4e2d\u95f4\u4fee\u6539\u4e86id=1\u7684\u6570\u636e\uff0c\u5e76commit\u4e4b\u540e\uff0c\u4e8b\u52a1A\u7b2c\u4e8c\u6b21\u8bfb\u5230\u7684\u6570\u636e\u548c\u7b2c\u4e00\u6b21\u5b8c\u5168\u76f8\u540c\u3002\u6240\u4ee5\u8bf4\u5b83\u662f\u53ef\u91cd\u8bfb\u7684\u3002\u90a3\u4e48MySQL\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u8fd9\u91cc\u59d1\u4e14\u5356\u4e2a\u5173\u5b50\uff0c\u6211\u4eec\u5f80\u4e0b\u770b\u3002","title":"3.4.1 \u8bfb"},{"location":"db/mysql/innodb-lock/#35","text":"\u4e0d\u53ef\u91cd\u590d\u8bfb\u7684\u91cd\u70b9\u5728\u4e8eupdate\u548cdelete\uff0c\u800c\u5e7b\u8bfb\u7684\u91cd\u70b9\u5728insert\u4e0a\u3002 \u5982\u679c\u4f7f\u7528\u9501\u673a\u5236\u6765\u5b9e\u73b0\u8fd9\u4e24\u79cd\u9694\u79bb\u7ea7\u522b\uff0c\u5728\u53ef\u91cd\u590d\u8bfb\u4e2d\uff0c\u8be5sql\u7b2c\u4e00\u6b21\u8bfb\u53d6\u5230\u6570\u636e\u540e\uff0c\u5c31\u5c06\u8fd9\u4e9b\u6570\u636e\u52a0\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u65e0\u6cd5\u4fee\u6539\u8fd9\u4e9b\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u53ef\u91cd\u590d\u8bfb\u4e86\u3002 \u4f46\u8fd9\u79cd\u65b9\u6cd5\u5374\u65e0\u6cd5\u9501\u4f4finsert\u7684\u6570\u636e\uff0c\u6240\u4ee5\u5f53\u4e8b\u52a1A\u5148\u524d\u8bfb\u53d6\u4e86\u6570\u636e\uff0c\u6216\u8005\u4fee\u6539\u4e86\u5168\u90e8\u6570\u636e\uff0c\u4e8b\u52a1B\u8fd8\u662f\u53ef\u4ee5insert\u6570\u636e\u63d0\u4ea4\uff0c\u8fd9\u65f6\u4e8b\u52a1A\u5c31\u4f1a\u53d1\u73b0\u83ab\u540d\u5176\u5999\u591a\u4e86\u4e00\u6761\u4e4b\u524d\u6ca1\u6709\u7684\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u5e7b\u8bfb\uff0c\u4e0d\u80fd\u901a\u8fc7\u884c\u9501\u6765\u907f\u514d\u3002 \u9700\u8981Serializable\u9694\u79bb\u7ea7\u522b \uff0c\u8bfb\u7528\u8bfb\u9501\uff0c\u5199\u7528\u5199\u9501\uff0c\u8bfb\u9501\u548c\u5199\u9501\u4e92\u65a5\uff0c\u8fd9\u4e48\u505a\u53ef\u4ee5\u6709\u6548\u7684\u907f\u514d\u5e7b\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u810f\u8bfb\u7b49\u95ee\u9898\uff0c\u4f46\u4f1a\u6781\u5927\u7684\u964d\u4f4e\u6570\u636e\u5e93\u7684\u5e76\u53d1\u80fd\u529b\u3002 \u6240\u4ee5\u8bf4\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u6700\u5927\u7684\u533a\u522b\uff0c\u5c31\u5728\u4e8e\u5982\u4f55\u901a\u8fc7\u9501\u673a\u5236\u6765\u89e3\u51b3\u4ed6\u4eec\u4ea7\u751f\u7684\u95ee\u9898\u3002 MySQL\u3001ORACLE\u3001PostgreSQL\u7b49\u6210\u719f\u7684\u6570\u636e\u5e93\uff0c\u51fa\u4e8e\u6027\u80fd\u8003\u8651\uff0c\u90fd\u662f\u4f7f\u7528\u4e86\u4ee5\u4e50\u89c2\u9501\u4e3a\u7406\u8bba\u57fa\u7840\u7684MVCC\uff08\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff09\u6765\u907f\u514d\u8fd9\u4e24\u79cd\u95ee\u9898\u3002","title":"3.5 \u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u7684\u533a\u522b"},{"location":"db/mysql/innodb-lock/#_1","text":"","title":"\u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501"},{"location":"db/mysql/innodb-lock/#_2","text":"\u6b63\u5982\u5176\u540d\uff0c\u5b83\u6307\u7684\u662f\u5bf9\u6570\u636e\u88ab\u5916\u754c\uff08\u5305\u62ec\u672c\u7cfb\u7edf\u5f53\u524d\u7684\u5176\u4ed6\u4e8b\u52a1\uff0c\u4ee5\u53ca\u6765\u81ea\u5916\u90e8\u7cfb\u7edf\u7684\u4e8b\u52a1\u5904\u7406\uff09\u4fee\u6539\u6301\u4fdd\u5b88\u6001\u5ea6\uff0c\u56e0\u6b64\uff0c\u5728\u6574\u4e2a\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u6570\u636e\u5904\u4e8e\u9501\u5b9a\u72b6\u6001\u3002\u60b2\u89c2\u9501\u7684\u5b9e\u73b0\uff0c\u5f80\u5f80\u4f9d\u9760\u6570\u636e\u5e93\u63d0\u4f9b\u7684\u9501\u673a\u5236\uff08\u4e5f\u53ea\u6709\u6570\u636e\u5e93\u5c42\u63d0\u4f9b\u7684\u9501\u673a\u5236\u624d\u80fd\u771f\u6b63\u4fdd\u8bc1\u6570\u636e\u8bbf\u95ee\u7684\u6392\u4ed6\u6027\uff0c\u5426\u5219\uff0c\u5373\u4f7f\u5728\u672c\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u4e86\u52a0\u9501\u673a\u5236\uff0c\u4e5f\u65e0\u6cd5\u4fdd\u8bc1\u5916\u90e8\u7cfb\u7edf\u4e0d\u4f1a\u4fee\u6539\u6570\u636e\uff09\u3002 \u5728\u60b2\u89c2\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e8b\u52a1\u7684\u9694\u79bb\u6027\uff0c\u5c31\u9700\u8981\u4e00\u81f4\u6027\u9501\u5b9a\u8bfb\u3002\u8bfb\u53d6\u6570\u636e\u65f6\u7ed9\u52a0\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u65e0\u6cd5\u4fee\u6539\u8fd9\u4e9b\u6570\u636e\u3002\u4fee\u6539\u5220\u9664\u6570\u636e\u65f6\u4e5f\u8981\u52a0\u9501\uff0c\u5176\u5b83\u4e8b\u52a1\u65e0\u6cd5\u8bfb\u53d6\u8fd9\u4e9b\u6570\u636e\u3002","title":"\u60b2\u89c2\u9501"},{"location":"db/mysql/innodb-lock/#_3","text":"\u76f8\u5bf9\u60b2\u89c2\u9501\u800c\u8a00\uff0c\u4e50\u89c2\u9501\u673a\u5236\u91c7\u53d6\u4e86\u66f4\u52a0\u5bbd\u677e\u7684\u52a0\u9501\u673a\u5236\u3002\u60b2\u89c2\u9501\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f9d\u9760\u6570\u636e\u5e93\u7684\u9501\u673a\u5236\u5b9e\u73b0\uff0c\u4ee5\u4fdd\u8bc1\u64cd\u4f5c\u6700\u5927\u7a0b\u5ea6\u7684\u72ec\u5360\u6027\u3002\u4f46\u968f\u4e4b\u800c\u6765\u7684\u5c31\u662f\u6570\u636e\u5e93\u6027\u80fd\u7684\u5927\u91cf\u5f00\u9500\uff0c\u7279\u522b\u662f\u5bf9\u957f\u4e8b\u52a1\u800c\u8a00\uff0c\u8fd9\u6837\u7684\u5f00\u9500\u5f80\u5f80\u65e0\u6cd5\u627f\u53d7\u3002 \u800c\u4e50\u89c2\u9501\u673a\u5236\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e50\u89c2\u9501\uff0c\u5927\u591a\u662f\u57fa\u4e8e\u6570\u636e\u7248\u672c\uff08 Version \uff09\u8bb0\u5f55\u673a\u5236\u5b9e\u73b0\u3002\u4f55\u8c13\u6570\u636e\u7248\u672c\uff1f\u5373\u4e3a\u6570\u636e\u589e\u52a0\u4e00\u4e2a\u7248\u672c\u6807\u8bc6\uff0c\u5728\u57fa\u4e8e\u6570\u636e\u5e93\u8868\u7684\u7248\u672c\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u4e00\u822c\u662f\u901a\u8fc7\u4e3a\u6570\u636e\u5e93\u8868\u589e\u52a0\u4e00\u4e2a \u201cversion\u201d \u5b57\u6bb5\u6765\u5b9e\u73b0\u3002\u8bfb\u53d6\u51fa\u6570\u636e\u65f6\uff0c\u5c06\u6b64\u7248\u672c\u53f7\u4e00\u540c\u8bfb\u51fa\uff0c\u4e4b\u540e\u66f4\u65b0\u65f6\uff0c\u5bf9\u6b64\u7248\u672c\u53f7\u52a0\u4e00\u3002\u6b64\u65f6\uff0c\u5c06\u63d0\u4ea4\u6570\u636e\u7684\u7248\u672c\u6570\u636e\u4e0e\u6570\u636e\u5e93\u8868\u5bf9\u5e94\u8bb0\u5f55\u7684\u5f53\u524d\u7248\u672c\u4fe1\u606f\u8fdb\u884c\u6bd4\u5bf9\uff0c\u5982\u679c\u63d0\u4ea4\u7684\u6570\u636e\u7248\u672c\u53f7\u5927\u4e8e\u6570\u636e\u5e93\u8868\u5f53\u524d\u7248\u672c\u53f7\uff0c\u5219\u4e88\u4ee5\u66f4\u65b0\uff0c\u5426\u5219\u8ba4\u4e3a\u662f\u8fc7\u671f\u6570\u636e\u3002","title":"\u4e50\u89c2\u9501"},{"location":"db/mysql/innodb-lock/#mvccmysqlinnodb","text":"\u5728InnoDB\u4e2d\uff0c\u4f1a\u5728\u6bcf\u884c\u6570\u636e\u540e\u6dfb\u52a0\u4e24\u4e2a\u989d\u5916\u7684\u9690\u85cf\u7684\u503c\u6765\u5b9e\u73b0MVCC\uff0c\u8fd9\u4e24\u4e2a\u503c\u4e00\u4e2a\u8bb0\u5f55\u8fd9\u884c\u6570\u636e\u4f55\u65f6\u88ab\u521b\u5efa\uff0c\u53e6\u5916\u4e00\u4e2a\u8bb0\u5f55\u8fd9\u884c\u6570\u636e\u4f55\u65f6\u8fc7\u671f\uff08\u6216\u8005\u88ab\u5220\u9664\uff09\u3002 \u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u5b58\u50a8\u7684\u5e76\u4e0d\u662f\u65f6\u95f4\uff0c\u800c\u662f\u4e8b\u52a1\u7684**\u7248\u672c\u53f7**\uff0c\u6bcf\u5f00\u542f\u4e00\u4e2a\u65b0\u4e8b\u52a1\uff0c\u4e8b\u52a1\u7684\u7248\u672c\u53f7\u5c31\u4f1a\u9012\u589e\u3002 \u5728\u53ef\u91cd\u8bfbRepeatable reads\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e0b\uff1a SELECT\u65f6\uff0c\u8bfb\u53d6\u521b\u5efa\u7248\u672c\u53f7<=\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\uff0c\u5220\u9664\u7248\u672c\u53f7\u4e3a\u7a7a\u6216>\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u3002 INSERT\u65f6\uff0c\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u4e3a\u884c\u7684\u521b\u5efa\u7248\u672c\u53f7 DELETE\u65f6\uff0c\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u4e3a\u884c\u7684\u5220\u9664\u7248\u672c\u53f7 UPDATE\u65f6\uff0c\u63d2\u5165\u4e00\u6761\u65b0\u7eaa\u5f55\uff0c\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u4e3a\u884c\u521b\u5efa\u7248\u672c\u53f7\uff0c\u540c\u65f6\u4fdd\u5b58\u5f53\u524d\u4e8b\u52a1\u7248\u672c\u53f7\u5230\u539f\u6765\u5220\u9664\u7684\u884c \u901a\u8fc7MVCC\uff0c\u867d\u7136\u6bcf\u884c\u8bb0\u5f55\u90fd\u9700\u8981\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u66f4\u591a\u7684\u884c\u68c0\u67e5\u5de5\u4f5c\u4ee5\u53ca\u4e00\u4e9b\u989d\u5916\u7684\u7ef4\u62a4\u5de5\u4f5c\uff0c\u4f46\u53ef\u4ee5\u51cf\u5c11\u9501\u7684\u4f7f\u7528\uff0c\u5927\u591a\u6570\u8bfb\u64cd\u4f5c\u90fd\u4e0d\u7528\u52a0\u9501\uff0c\u8bfb\u6570\u636e\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u6027\u80fd\u5f88\u597d\uff0c\u5e76\u4e14\u4e5f\u80fd\u4fdd\u8bc1\u53ea\u4f1a\u8bfb\u53d6\u5230\u7b26\u5408\u6807\u51c6\u7684\u884c\uff0c\u4e5f\u53ea\u9501\u4f4f\u5fc5\u8981\u884c\u3002","title":"MVCC\u5728MySQL\u7684InnoDB\u4e2d\u7684\u5b9e\u73b0"},{"location":"db/mysql/innodb-lock/#_4","text":"https://tech.meituan.com/2014/08/20/innodb-lock.html https://zh.wikipedia.org/wiki/ACID#cite_note-acid-1 \u21a9 \uff08\u53c2\u89c1\u300a\u9ad8\u6027\u80fdMySQL\u300b\u4e2d\u6587\u7b2c\u4e09\u7248p181\uff09 \u21a9","title":"\u539f\u6587\u5730\u5740"},{"location":"db/mysql/mysql/","text":"mysql 1.\u5f15\u5165 \u6570\u636e\u5e93\u5206\u7c7b \u5173\u7cfb\u6570\u636e\u5e93 Mysql\u3001Oracle\u3001SQLlite \u901a\u8fc7\u8868\u548c\u8868\u7684\u4e4b\u95f4\u3001\u884c\u548c\u5217\u4e4b\u95f4\u7684\u5173\u7cfb\u6765\u8fdb\u884c\u6570\u636e\u5b58\u50a8 \u975e\u5173\u7cfb not only sql Reids\u3001MongoDB \u5bf9\u8c61\u5b58\u50a8\uff0c\u5b58\u50a8\u5bf9\u8c61\u81ea\u8eab\u7684\u5c5e\u6027 RDBMS \u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf DDL database define language DML * manage * DQL * query * DCL * control * 2 \u64cd\u4f5c\u6570\u636e\u5e93 2.1\u6570\u636e\u5e93 \u65b0\u5efa create database [if not exists] dbName; \u5220\u9664 Drop database [if exists] dbname; 2.2\u8868 \u5217\u7c7b\u578b \u6570\u503c Type Storage (Bytes) Minimum Value Signed Minimum Value Unsigned Maximum Value Signed Maximum Value Unsigned TINYINT 1 -128 0 127 255 SMALLINT 2 -32768 0 32767 65535 MEDIUMINT 3 -8388608 0 8388607 16777215 INT 4 -2147483648 0 2147483647 4294967295 BIGINT 8 -263 0 2^63-1 2^64-1 tinyint 1 \u5b57\u8282 smallint 2 mediumint 3 int 4 int(4) \u4e8eint(M)\u53ea\u4e0e0\u586b\u5145\u6709\u5173\uff0c\u6700\u5927\u663e\u793a\u957f\u5ea6\u6709\u5173\u3002 bigint 8 float 4 double 8 decimal \u5b57\u7b26\u4e32\u6d6e\u70b9\u6570\uff0c\u505a\u91d1\u878d\u8fd0\u7b97 \u5b57\u7b26\u4e32 char 0-255 **varchar 0-65535 **\u5e38\u7528\u53d8\u91cf tinytext 2*8 -1 text 2*16 -1 \u4fdd\u5b58\u5927\u6587\u672c \u65f6\u95f4 date YYYY-MM-DD \u65e5\u671f time HH-MM-SS \u65f6\u95f4 datetime YYYY-MM-DD HH:MM:SS timestamp \u65f6\u95f4\u6233 1970.1.1 \u8f83\u4e3a\u5e38\u7528 year null \u6ca1\u6709\u503c 2.3\u8868 \u5b57\u6bb5\u5c5e\u6027 unsigned \u65e0\u7b26\u53f7\u6574\u5f62\uff0c\u4e0d\u53ef\u4e3a\u8d1f\u6570 zerofill 0\u586b\u5145 \u4e0d\u8db3\u7684\u4f4d\u6570\u75280\u6765\u586b\u5145 eg: int(3), 5 , 005 autoincrement \u7528\u6765\u8bbe\u7f6e\u552f\u4e00\u4e3b\u952e \u81ea\u5b9a\u4e49\u8d77\u59cb\u503c Not Null \u4e0d\u8d4b\u503c\u4e3a\u9519 default value 2.4\u521b\u5efa\u8868 CREATE TABLE IF NOT EXISTS ` student ` ( ` id ` INT ( 4 ) NOT NULL AUTO_INCREMENT COMMENT 'id' , ` name ` VARCHAR ( 30 ) NOT NULL DEFAULT 'unkonwnuser' COMMENT 'name' , ` pwd ` VARCHAR ( 30 ) NOT NULL DEFAULT '123456' COMMENT 'password' , ` sex ` VARCHAR ( 2 ) NOT NULL DEFAULT '\u5973' COMMENT 'sexual' , ` birthday ` DATETIME DEFAULT NULL COMMENT 'birthday' , ` address ` VARCHAR ( 100 ) DEFAULT NULL COMMENT 'home_address' , ` email ` VARCHAR ( 50 ) DEFAULT NULL COMMENT 'email' , PRIMARY KEY ( ` id ` ) ) ENGINE = INNODB DEFAULT CHARSET = utf8 ; \u683c\u5f0f CREATE TABLE IF NOT EXISTS ` student ` ( ` \u5b57\u6bb5 ` \u5217\u7c7b\u578b [ \u5c5e\u6027 ] [ \u7d22\u5f15 ] [ \u6ce8\u91ca ], ..... ` \u5b57\u6bb5 ` \u5217\u7c7b\u578b [ \u5c5e\u6027 ] [ \u7d22\u5f15 ] [ \u6ce8\u91ca ], PRIMARY KEY ( ` key1 ` , ` key2 ` ) )[ \u8868\u7c7b\u578b ][ \u5b57\u7b26\u96c6\u8bbe\u7f6e ][ \u6ce8\u91ca ] show create database ` school ` ; show create table student ; desc student ; 2.5\u6570\u636e\u5e93\u5f15\u64ce innodb & myisam MYISAM INNODB \u4e8b\u52a1\u652f\u6301 \u4e0d\u652f\u6301 \u652f\u6301 \u6570\u636e\u884c\u9501\u5b9a \u4e0d\u652f\u6301\uff08\u8868\u9501\uff09 \u652f\u6301 \u5916\u952e \u4e0d\u652f\u6301 \u652f\u6301 \u5168\u6587\u7d22\u5f15 \u652f\u6301 \u4e0d\u652f\u6301 \u8868\u7a7a\u95f4\u5927\u5c0f \u8f83\u5c0f \u8f83\u5927\uff0c\u7ea6\u4e3aMYISAM 2\u500d MYISAM \u8282\u7ea6\u65f6\u95f4\uff0c\u901f\u5ea6\u5feb INNODB \u5b89\u5168\u6027\u3001\u4e8b\u52a1\u5904\u7406\u3001\u5916\u952e\u652f\u6301\u591a\u8868\u591a\u7528\u6237 \u5728\u7269\u7406\u7a7a\u95f4\u5b58\u5728\u7684\u4f4d\u7f6e \u6570\u636e\u5e93\u672c\u8d28\u662f\u6587\u4ef6\u5b58\u50a8 Mysql\u5f15\u64ce\u5728\u7269\u7406\u6587\u4ef6\u4e0a\u7684\u533a\u522b InnoDB\u5728\u6570\u636e\u5e93\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a*.frm\u6587\u4ef6\uff0c\u4ee5\u53ca\u4e0a\u7ea7\u76ee\u5f55\u4e0b\u7684 *.idb myIsam *.frm - \u8868\u7ed3\u6784\u5b9a\u4e49\u6587\u4ef6 *.myd - \u6570\u636e\u6587\u4ef6 *.myi - \u7d22\u5f15\u6587\u4ef6 \u5b57\u7b26\u96c6\u7f16\u7801 charset = utf8 2.6\u4fee\u6539\u548c\u5220\u9664\u8868 alter table PAGENAME \u64cd\u4f5c ; -- \u91cd\u547d\u540d\u8868 alter table ` teacher ` rename as ` teacher1 ` ; alter table ` teacher1 ` rename as ` teacher ` ; -- \u589e\u52a0\u65b0\u7684\u5b57\u6bb5 alter table ` teacher ` add ` city ` varchar ( 20 ) default null comment 'city' ; alter table ` teacher ` change age1 age int ( 10 ); -- \u91cd\u547d\u540d\u5b57\u6bb5 alter table ` teacher ` modify age int ( 2 ); -- \u4fee\u6539\u7ea6\u675f alter table ` teacher ` drop age ; -- \u5220\u9664\u5b57\u6bb5 -- \u5220\u9664\u8868 drop table if exists teacher ; \u6ce8\u610f\u4e8b\u9879\uff1a `` \u5b57\u6bb5\u540d \u6ce8\u91ca\u4f7f\u7528 -- sql \u5173\u952e\u5b57\u5927\u5c0f\u4e0d\u654f\u611f 3.mysql\u6570\u636e\u5e93\u7ba1\u7406 3.1 \u5916\u952e \u5b66\u751f\u7684grade\u5217\uff0c\u5f15\u7528\u5e74\u7eaa\u8868\u7684id create table ` grade ` ( ` gradeID ` int ( 10 ) not null auto_increment comment 'the id of grade' , ` gradeName ` varchar ( 50 ) not null comment 'name of grade' , PRIMARY KEY ( ` gradeID ` ) ) engine = innoDB default charset = UTF8MB3 ; -- \u5b66\u751f\u8868\u7684gradeID\u5b57\u6bb5 \u8981\u5f15\u7528gradeid -- \u5b9a\u4e49\u5916\u952ekey -- \u7ed9\u8fd9\u4e2a\u5916\u952e\u6dfb\u52a0\u7ea6\u675f reference \u5f15\u7528 CREATE TABLE ` student ` ( ` id ` int NOT NULL AUTO_INCREMENT COMMENT 'id' , ` name ` varchar ( 30 ) NOT NULL DEFAULT 'unkonwnuser' COMMENT 'name' , ` pwd ` varchar ( 30 ) NOT NULL DEFAULT '123456' COMMENT 'password' , ` sex ` varchar ( 2 ) NOT NULL DEFAULT '\u5973' COMMENT 'sexual' , ` birthday ` datetime DEFAULT NULL COMMENT 'birthday' , ` address ` varchar ( 100 ) DEFAULT NULL COMMENT 'home_address' , ` email ` varchar ( 50 ) DEFAULT NULL COMMENT 'email' , ` gradeID ` int ( 10 ) not null comment 'the grade' , PRIMARY KEY ( ` id ` ), key ` FK_gradeID ` ( ` gradeID ` ), constraint ` FK_gradeID ` foreign key ( ` gradeID ` ) references ` grade ` ( ` gradeID ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb3 ; \u5220\u9664\u5148\u5220\u9664\u4ece\u8868\u540e\u5220\u9664\u4e3b\u8868\u3002 -- \u521b\u5efa\u8868\u7684\u65f6\u5019\u6ca1\u6709\u5173\u7cfb ALTER Table ` student ` ADD COLUMN ` gradeID ` INT ( 10 ) NOT NULL COMMENT 'grade id' ; ALTER TABLE ` student ` ADD CONSTRAINT ` FK_gradeID ` FOREIGN KEY ( ` gradeID ` ) REFERENCES ` grade ` ( gradeID ); \u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u6570\u636e\u5e93\u8fc7\u591a\u4f1a\u9020\u6210\u56f0\u6270\u3002 \u6700\u4f73\u5b9e\u8df5 \u6570\u636e\u8868\u53ea\u6709\u672c\u8eab\u7684\u8868 \u5982\u679c\u8981\u4f7f\u7528\u591a\u5f20\u8868\u5219\u4f7f\u7528\u5916\u952e\uff0c\u901a\u8fc7\u7a0b\u5e8f\u903b\u8f91\u6765\u8fdb\u884c\u5b9e\u73b0 3.2DML\u8bed\u8a00 \u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff0c\u6570\u636e\u5b58\u50a8\uff0c\u6570\u636e\u7ba1\u7406 insert update delete 3.3 \u63d2\u5165 INSERT INTO table_name([word1],[word2]) VALUES('value1', 'value2', 'value3') \u5b57\u6bb5\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u662f\u503c\u9700\u8981\u4e00\u4e00\u5bf9\u5e94 \u53ef\u4ee5\u540c\u65f6\u63d2\u5165\u591a\u6761\u6570\u636e -- \u63d2\u5165\u8bed\u53e5 -- insert into table_name([col1]) values('value1'),('values') INSERT INTO ` grade ` ( ` gradeName ` ) values ( '\u5927\u56db' ); -- insert into \u4e0d\u6307\u5b9a\u5b57\u6bb5\u5219\u4f1a\u4e00\u4e00\u5339\u914d INSERT INTO ` grade ` ( ` gradeName ` ) value ( '\u5927\u4e09' ), ( '\u5927\u4e8c' ), ( '\u5927\u4e00' ); INSERT INTO ` student ` ( ` name ` , ` pwd ` , ` sex ` ) VALUES ( '\u9648\u79cb\u5b9e' , '123asdzxc' , '\u7537' ),( 'zjj' , '123asdzxc' , '\u7537' ); 3.4 \u4fee\u6539 UPDATE table_name SET column_name = value WHERE \u6761\u4ef6[] -- \u4fee\u6539student\u540d\u5b57 UPDATE ` student ` SET ` name `= 'zhangshuntao' where id = 1 ; -- \u4e0d\u6307\u5b9a\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u4fee\u6539\u6389\u6240\u6709\u7684\u8868 -- \u4fee\u6539\u591a\u4e2a\u5b57\u6bb5 UPDATE ` student ` SET ` name ` = 'qiusiu' , ` email `= '123@qq.com' where id = 1 ; **\u6761\u4ef6\uff1a**Where \u5b50\u53e5 \u64cd\u4f5c\u7b26 \u542b\u4e49 \u8303\u56f4 \u7ed3\u679c = \u7b49\u4e8e 5=6 false != \u4e0d\u7b49\u4e8e 5!=6 > < <= >= BETWEEN ... and \u95ed\u5408\u533a\u95f4 BETWEEN 2 and 5 [2, 5] AND \u548c OR \u6216\u8005 -- \u901a\u8fc7\u591a\u4e2a\u6761\u4ef6\u5b9a\u4e49 UPDATE ` student ` SET ` name ` = '\u591a\u6761\u8bed\u53e5\u4fee\u6539\u7684' where ` name `= 'zjj' AND ` pwd `= '9999' ; UPDATE table_name SET column_name = value WHERE \u6761\u4ef6[] \u6ce8\u610f column_name \u5e26\u4e0a `` condition\uff0c\u5e05\u9009\u7684\u6761\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u5219\u4f1a\u4fee\u6539\u6240\u6709\u7684\u5217 value\u53ef\u4ee5\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u53d8 \u591a\u4e2a\u8bbe\u7f6e\u7684\u5c5e\u6027\u4e4b\u95f4\uff0c\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00 3.5 \u5220\u9664 DELETE FROM table_name WHREE [condition] delete from ` student ; delete from ` student ` where id = 1 ; TRUNCATE \u5b8c\u5168\u60c5\u51b5\u6570\u636e\u5e93\uff0c\u7ed3\u6784\u548c\u7d22\u5f15\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316 TRUNCATE table_name \u76f8\u540c\u70b9\uff1a\u90fd\u80fd\u5220\u9664\u6570\u636e\uff0c\u4f46\u662f\u4e0d\u4f1a\u5220\u9664\u8868\u7ed3\u6784 \u4e0d\u540c\u70b9\uff1a TRAUNCATE \u4f1a\u91cd\u7f6e\u81ea\u589e\u8ba1\u6570\u5668 TRUNCATE \u4e0d\u5f71\u54cd\u4e8b\u52a1 \u4e86\u89e3\uff0c DELETE \u5220\u9664\u95ee\u9898 \uff0c\u91cd\u542f\u6570\u636e\u5e93\uff0c\u73b0\u8c61\uff1a InnoDB \u81ea\u589e\u5217\u4f1a\u4ece1\u5f00\u59cb\uff0c\u56e0\u4e3aInnoDB\u7684\u81ea\u589e\u8ba1\u6570\u5668\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d MyISAM \u7ee7\u7eed\u4ece\u4e0a\u4e00\u4e2a\u81ea\u589e\u91cf\u5f00\u59cb\uff0c\u56e0\u4e3a\u81ea\u589e\u8ba1\u6570\u5b58\u5728\u4e8e\u6587\u4ef6\u4e4b\u4e2d 4.DQL\u6570\u636e\u5e93\u67e5\u8be2\u8bed\u8a00 4.1 DQL \u6570\u636e\u67e5\u8be2\u8bed\u8a00 date query language \u6240\u6709\u67e5\u8be2\u64cd\u4f5c\u90fd\u7528Select \u7b80\u5355\u7684\u67e5\u8be2\u548c\u590d\u6742\u67e5\u8be2\u90fd\u80fd\u505a \u6570\u636e\u5e93\u6838\u5fc3\u8bed\u8a00\uff0c\u6700\u91cd\u8981\u7684\u8bed\u8a00 \u4f7f\u7528\u6700\u9ad8\u9891 \u8bed\u6cd5 SELECT \u5b57\u6bb5... FROM \u8868 -- \u67e5\u8be2\u5168\u90e8\u5b66\u751f SELECT * from ` student ` ; -- \u67e5\u8be2\u5236\u5b9a\u5b57\u6bb5 SELECT ` studentno ` a , ` studentname ` b FROM ` student ` ; -- \u7ed9\u7ed3\u679c\u4f7f\u7528\u522b\u540d, \u7ed9\u8868\u5176\u522b\u540d SELECT ` studentno ` AS '\u5b66\u53f7' , ` studentname ` AS '\u540d\u5b57' From ` student ` ; -- \u51fd\u6570 Concat(a, b) SELECT CONCAT ( 'name: ' , studentname ) AS name FROM ` student ` ; \u5982\u679c\u5b57\u6bb5\u540d\u4e0d\u591f\u597d\u7406\u89e3\uff0c\u53ef\u4ee5\u4f7f\u7528AS\u6307\u5b9a\u5b57\u6bb5\u540d 4.2 \u67e5\u8be2\u6307\u5b9a\u5b57\u6bb5 \u53bb\u91cd SELECT DISTINCT SELECT * from result ; -- \u67e5\u8be2\u5168\u90e8\u6210\u7ee9 -- \u67e5\u8be2\u6709\u90a3\u4e9b\u540c\u5b66\u53c2\u52a0\u4e86\u8003\u8bd5 select ` studentno ` from result ; select DISTINCT ` studentno ` from result ; \u6570\u636e\u5e93\u4e2d\u7684\u5217 -- select vserion() select version (); -- \u51fd\u6570 select 100 * 3 - 1 AS result ; -- \u8868\u8fbe\u5f0f SELECT @@ AUTO_INCREMENT_INCREMENT ; -- \u53d8\u91cf -- \u5b66\u9662\u8003\u8bd5\u6210\u7ee9+1\u5206\u67e5\u770b SELECT ` studentno ` , ` studentresult ` AS beforeResult , ` studentresult `+ 1 AS AfterResult FROM result ; \u6570\u636e\u5e93\u4e2d\u7684\u8868\u8fbe\u5f0f\uff1a\u6587\u672c\u503c\uff0c\u5217\uff0cNull\uff0c\u51fd\u6570\uff0c\u8ba1\u7b97\u8868\u8fbe\u5f0f\uff0c\u7cfb\u7edf\u53d8\u91cf\u2026\u2026 SELECT \u8868\u8fbe\u5f0f FROM \u8868 4.3 where\u6761\u4ef6\u5b57\u53e5 \u6240\u6709\u80fd\u591f\u4f7f\u7528\u5728\u68c0\u7d22\u6570\u636e\u4e2d\u7684\u503c \u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u8868\u8fbe\u5f0f\u7ec4\u6210 \u8fd0\u7b97\u7b26 \u8bed\u6cd5 \u63cf\u8ff0 and a and b or a or a Not not a ! \u5c3d\u91cf\u4f7f\u7528\u5355\u8bcd -- where SELECT studentno , ` studentresult ` from result where studentresult >= 95 and studentresult <= 100 ; -- between and \u67e5\u8be2\u533a\u95f4 select studentno , studentresult from result where studentresult between 95 and 100 ; -- \u9664\u4e861000\u53f7\u5b66\u751f\u4ee5\u5916\u7684\u6210\u7ee9 select studentno , studentresult AS \u9ad8\u5206\u79d1\u76ee from result where studentno != 1000 and studentresult between 90 and 100 ; select studentno , studentresult from result where not studentno = 1000 ; \u6a21\u7cca\u67e5\u8be2\uff1a\u6bd4\u8f83\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \u8bed\u6cd5 \u63cf\u8ff0 IS NULL a is null IS NOT NULL BETWEEN a between b and c like a like b SQL \u5982\u679cA\u80fd\u5339\u914d\u5230B\uff0c\u5219\u7ed3\u679c\u4e3a\u771f in a in (a1,a2,a3) a\u5728a1,a2,a3\u4e2d\u5219\u4e3a\u771f -- \u6a21\u7cca\u67e5\u8be2 -- \u67e5\u8be2\u59d3\u5218\u7684\u540c\u5b66 -- like \u7ed3\u5408 %\uff080\u5230\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff09_\uff08\u4e00\u4e2a\u5b57\u7b26\uff09 SELECT ` studentno ` , studentname from student where studentname like '\u674e%' ; -- like \u7ed3\u5408 %\uff080\u5230\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff09_\uff08\u4e00\u4e2a\u5b57\u7b26\uff09 SELECT ` studentno ` , studentname from student where studentname like '\u674e___' ; -- \u67e5\u8be2\u540d\u5b57\u4e2d\u6709\u725b\u5b57\u7684\u540c\u5b66 SELECT ` studentno ` , studentname from student where studentname like '%\u725b%' ; -- in \u5305\u542b\u5173\u7cfb -- \u67e5\u8be21001\uff0c1002\uff0c1003\u53f7\u540c\u5b66 select ` studentno ` , ` studentname ` from ` student ` where studentno in ( 1001 , 1002 , 1003 ); -- \u67e5\u8be2\u5728\u5317\u4eac\u7684\u5b66\u751f select ` studentno ` , ` studentname ` , ` address ` from ` student ` where address in ( '\u5317\u4eac\u671d\u9633' ); -- null \u548cnot null -- \u67e5\u8be2\u5730\u5740\u4e3a\u7a7a\u7684\u5b66\u751f select studentno , studentname , address from student where address = '' ; -- \u67e5\u8be2\u51fa\u751f\u65e5\u671f\u7684\u540c\u5b66 select studentno , studentname from student where borndate is null ; 4.4 \u8054\u8868\u67e5\u8be2 Join \u5de6\u8868 \uff0c\u53f3\u8868 LeftJoin InnerJoin Right join -- \u67e5\u8be2\u53c2\u52a0\u4e86\u8003\u8bd5\u7684\u540c\u5b66\uff0c\u5b66\u53f7\uff0c \u540d\u5b57\uff0c\u79d1\u76ee\u7f16\u53f7\uff0c\u5206\u6570 /* 1. \u9700\u8981\u90a3\u4e9b\u8868 2\uff0c\u9700\u8981\u4f7f\u7528\u54ea\u4e00\u79cd\u8fde\u63a5\u67e5\u8be2? 7\u4e2d \u786e\u5b9a\u4ea4\u53c9\u70b9\uff0c\u6570\u636e\u76f8\u540c\u7684 \u5224\u65ad\u6761\u4ef6 \u5b66\u751f\u8868\u4e2d\u7684studentNO = \u6210\u7ee9\u8868\u4e2d\u7684studentNo */ SELECT s . studentno , s . studentname , subjectno , studentresult from student s inner join result r on s . studentno = r . studentno ; select s . studentno , studentname , subjectno , studentresult from student s right join result r on r . studentno = s . studentno ; -- select s . studentno , studentname , subjectno , studentresult from student s left join result r on r . studentno = s . studentno ; \u64cd\u4f5c \u63cf\u8ff0 \u57fa\u51c6 Inner join \u8868\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5339\u914d\u5c31\u4f1a\u8fd4\u56de left join \u4f1a\u4ece\u5de6\u8868\u4e2d\u8fd4\u56de\u6240\u6709\u7684\u503c\uff0c\u53f3\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u503c\u4e5f\u4f1a\u8fd4\u56de\u51fa\u6765 \u5df2\u5de6\u8868\u4e3a\u57fa\u51c6 right join \u4f1a\u4ece\u53f3\u8868\u4e2d\u8fd4\u56de\u6240\u6709\u7684\u503c\uff0c\u5de6\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u503c\u4e5f\u4f1a\u8fd4\u56de\u51fa\u6765 \u4ee5\u53f3\u8868\u4e3a\u57fa\u51c6 -- \u67e5\u8be2\u7f3a\u8003\u7684\u540c\u5b66 select s . studentno , studentname , subjectno , studentresult from student s left join result r on r . studentno = s . studentno where studentresult is null ; -- \u5b66\u53f7\uff0c\u5b66\u751f\u59d3\u540d\uff0c\u79d1\u76ee\u540d\uff0c\u5206\u6570 select s . studentno , studentname , subjectname , studentresult from student s inner join result r on r . studentno = s . studentno left join subject j on r . subjectno = j . subjectno 4.4.1\u81ea\u8fde\u63a5 \u81ea\u5df1\u7684\u8868\u548c\u81ea\u5df1\u7684\u8868\u8fde\u63a5\uff0c\u6838\u5fc3\uff1a\u4e00\u5f20\u8868\u62c6\u5206\u6210\u4e24\u5f20\u4e00\u6837\u7684\u8868\u3002 select c1 . categoryname as p , c2 . categoryname as s from category c1 , category c2 where c1 . categoryid = c2 . pid ; SELECT [ ALL | DISTINCT ] { * | table . * | [ table . filed1 [ as alias1 ][, table . filed2 [ as alias2 ][,...]]] } FROM table_name [ as table_alias ] [ left | right | inner join table_name2 ] -- \u8054\u5408\u67e5\u8be2 [ where ...] [ Group by ...] -- \u6309\u54ea\u4e9b\u4e2a\u8ba1\u7b97\u6765\u5206\u7ec4 [ Having ] -- \u8fc7\u6ee4\u5206\u7ec4\u9700\u8981\u7684\u6b21\u8981\u6761\u4ef6 [ order by ...] -- \u6392\u5e8f\u6761\u4ef6 [ limit { [ offset ,] row_count | row_countOFFSET offset } ]; -- \u6307\u5b9a\u8bb0\u5f55\u9700\u8981\u7684\u8bb0\u5f55\u4ece\u54ea\u4e00\u6761\u9053\u90a3\u4e00\u6761 4.5 \u5206\u9875\u548c\u6392\u5e8f -- \u5206\u9875 \u548c \u6392\u5e8f -- \u5347\u5e8fASC\uff0c \u964d\u5e8fDESC -- \u7f51\u9875\uff1a\u5f53\u524d\u3001\u603b\u7684\u9875\u6570\u3001\u9875\u9762\u5927\u5c0f -- LIMIT 0,5 \u4ece 1 \uff5e5 -- LIMIT 1\uff0c6 \u4ece 2\uff5e6 select r . studentno , studentname , studentresult from result r inner join student s on r . studentno = s . studentno order by studentresult limit 1 offset 4 ; -- \u7b2c\u4e00\u9875 0-5 -- \u7b2c\u4e8c\u9875 5-5 -- \u7b2c\u4e09\u9875 10-5 -- \u7b2cn\u9875 (n-1)*5 - 5 (pageNum-1)*pageSize,pageSize -- totalPage = total / pageSize limit \u8d77\u59cb\u503c \u9875\u9762\u5927\u5c0f 4.6 \u5b50\u67e5\u8be2 where ( ) \u5728where\u8bed\u53e5\u4e2d\u5728\u518d\u5d4c\u5957\u4e00\u4e2a\u67e5\u8be2 -- \u9ad8\u7b49\u6570\u5b66-1\u7684\u79d1\u76ee select distinct s . studentno , studentname , subjectno from student s inner join result r on s . studentno = r . studentno where studentresult >= 80 and subjectno = ( select subjectno from subject where subjectname = '\u9ad8\u7b49\u6570\u5b66-1' ); select distinct studentno , studentname from student where studentno in ( select studentno from result where studentresult >= 80 and subjectno = ( select subjectno from subject where subjectname = '\u9ad8\u7b49\u6570\u5b66-1' ) ); -- \u67e5\u8be2\u8bfe\u7a0b\u4e3a\u9ad8\u7b49\u6570\u5b66-2 \u4e14\u5206\u6570\u4e0d\u5c0f\u4e8e80\u5206\u7684\u540c\u5b66\u5b66\u53f7\u548c\u59d3\u540d select distinct r . studentno , studentname from student s inner join result r on r . studentno = s . studentno inner join subject sub on r . subjectno = sub . subjectno where subjectname = '\u9ad8\u7b49\u6570\u5b66-1' and studentresult > 80 ; 5. mysql \u51fd\u6570 5.1 \u5e38\u7528\u51fd\u6570 -- \u5e38\u7528\u51fd\u6570 select abs ( - 8 ) select CEILING ( 9 . 4 ); -- \u5411\u4e0a\u533a\u9547 select FLOOR ( 9 . 1 ); select RAND (); -- \u5224\u65ad\u6570\u7684\u7b26\u53f7 select sign ( - 9 ); -- \u5b57\u7b26\u4e32\u51fd\u6570 select char_length ( '\u5373\u4f7f\u6211\u7231\u4f60' ); select concat ( '1' , '-' , ' ' , '8' ); select insert ( 'qiuqiu' , 1 , 3 , '123' ); select lower ( 'aBBBc' ); select upper ( 'abababab' ); select instr ( 'hello' , 'lo' ); select replace ( 'woaiwoainiainiaini' , 'ai' , '\u7231' ); select substr ( 'woaiwoaini' , 3 ); select reverse ( '123456' ); -- \u67e5\u8be2\u59d3\u674e\u7684\u540c\u5b66 select REPLACE ( studentname , '\u674e' , 'li' ) from student where studentname like '\u674e%' ; -- \u65f6\u95f4\u548c\u65e5\u671f\u51fd\u6570 select current_date (); select current_time (); select now (); select localtime (); select sysdate (); select year ( now ()); select day ( now ()); -- \u7528\u6237 select version (); select user (); select system_user (); 5.2 \u805a\u5408\u51fd\u6570 \u51fd\u6570\u540d\u79f0 \u63cf\u8ff0 COUNT() SUM() AVG() MAX() ` MIN() ... -- \u805a\u5408\u51fd\u6570 -- \u90fd\u80fd\u591f\u505a\u7edf\u8ba1\uff0c select count ( gradeid ) from student ; -- \u6307\u5b9a\u5217\uff0c\u4f1a\u5ffd\u7565\u6240\u6709\u7684null\u503c\uff0c\u5f53\u5217\u5b57\u6bb5\u4e3a\u4e3b\u952e\u7684\u65f6\u5019\uff0c\u5219\u662f\u6700\u5feb\u7684\u3002 select count ( * ) from student ; -- \u4e0d\u4f1a\u5ffd\u7565null\u503c, \u672c\u8d28\u90fd\u662f\u8ba1\u7b97\u884c\u6570\uff0ccount*\u4f1a\u8ba1\u7b97\u6240\u6709\u7684\u884c\u6570 select count ( 1 ) from student ; -- \u4e0d\u4f1a\u5ffd\u7565null\u503c\uff0c\u672c\u8d28\u90fd\u662f\u8ba1\u7b97\u884c\u6570\uff0ccount(1)\u4f1a\u628a\u6240\u6709\u7684\u5f52\u4f4d\u4e00\u5217\u53ea\u4f1a\u8d70\u4e00\u6b21 select sum ( studentresult ) as sum , avg ( studentresult ) as avg , max ( studentresult ) as max , min ( studentresult ) as min from result ; -- \u67e5\u8be2\u4e0d\u540c\u8bfe\u7a0b\u7684\u5e73\u5747\u5206\uff0c\u6700\u9ad8\u5206\uff0c\u6700\u4f4e\u5206 -- \u4e0d\u540c\u7684\u8bfe\u7a0b\u8fdb\u884c\u5206\u7ec4 select subjectname as name , avg ( studentresult ) as avg , max ( studentresult ) as max , min ( studentresult ) as min , count ( 1 ) as count from result r inner join subject s on r . subjectno = s . subjectno group by r . subjectno -- \u901a\u8fc7\u4ec0\u4e48\u5b57\u6bb5\u8fdb\u884c\u5206\u7ec4 having avg > 80 ; -- \u5206\u7ec4\u6761\u4ef6 5.3 \u6570\u636e\u5e93\u7ea7\u522b\u7684md5\u52a0\u5bc6 \u4ec0\u4e48\u662fMD5,\u4fe1\u606f\u6458\u8981\u7b97\u6cd5\u3002 MD5\u4e0d\u53ef\u9006\uff0c\u5177\u4f53\u7684\u503c\u7684md5\u662f\u4e00\u81f4\u7684 show create table testmd5 ; insert into testmd5 values ( 2 , 'zhangsan' , '123' ), ( 3 , 'zhangsa1n' , '123' ); update testmd5 set pwd = md5 ( pwd ) where id = 1 ; update testmd5 set pwd = md5 ( pwd ) where not id = 1 ; -- \u63d2\u5165\u7684\u65f6\u5019\u8fdb\u884c\u52a0\u5bc6 insert into testmd5 ( name , pwd ) values ( 'xiaoming' , md5 ( '123456' )); -- \u5982\u4f55\u6821\u9a8c\uff0c\u5c06\u4f20\u5165\u8fdb\u6765\u7684\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\uff0c\u5bf9\u6bd4\u52a0\u5bc6\u4e4b\u540e\u7684\u503c select * from testmd5 where name = 'zhangsan' and pwd = md5 ( '123' ); 6.\u4e8b\u52a1 6.1 \u4ec0\u4e48\u662f\u4e8b\u52a1\uff08transaction\uff09 \u591a\u6761sql\uff0c\u8981\u4e48\u6210\u529f\uff0c\u8981\u4e48\u90fd\u5931\u8d25 \u5c06\u4e00\u7ec4sql\uff0c\u653e\u5728\u4e00\u4e2a\u6279\u6b21\u4e2d\u53bb\u6267\u884c \u4e8b\u52a1\u539f\u5219\uff1aACID \u539f\u5b50\u6027\uff08Atomicity\uff09\uff0c\u4e00\u81f4\u6027\uff08Consistency\uff09\uff0c\u9694\u79bb\u6027\uff08Isolation\uff09\uff0c\u6301\u4e45\u6027\uff08Durability\uff09 \u539f\u5b50\u6027 \uff1a \u8981\u4e48\u90fd\u5b8c\u6210\uff0c\u8981\u4e48\u90fd\u5931\u8d25 \u4e00\u81f4\u6027 \uff1a\u4e8b\u52a1\u524d\u540e\u6570\u636e\u7684\u5b8c\u6574\u6027\u8981\u4fdd\u6301\u4e00\u81f4 \u6301\u4e45\u6027 \uff1a\u4e8b\u52a1\u7684\u7ed3\u675f\u72b6\u6001\u4e0d\u4f1a\u968f\u7740\u5916\u754c\u72b6\u6001\u5bfc\u81f4\u6570\u636e\u4e22\u5931 \u6ca1\u6709\u63d0\u4ea4\uff0c\u6062\u590d\u5230\u539f\u6765\u72b6\u6001 \u4e00\u65e6\u63d0\u4ea4\uff0c\u5c31\u4f1a\u6301\u4e45\u5316 \u9694\u79bb\u6027 \uff1a\u591a\u4e2a\u7528\u6237\u7528\u6237\u5e76\u53d1\u64cd\u4f5c\u4fdd\u8bc1\u4e8b\u52a1\u76f8\u4e92\u9694\u79bb\uff0c 6.2 \u9694\u79bb\u5bfc\u81f4\u7684\u95ee\u9898 \u810f\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u5230\u4e86\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u6ca1\u6709\u63d0\u4ea4\u7684\u6570\u636e\u3002 \u4e0d\u53ef\u91cd\u590d\u5ea6 \u4e00\u4e2a\u4e8b\u52a1\u5728\u591a\u6b21\u8bfb\u53d6\u8868\u4e2d\u4e00\u884c\u6570\u636e\uff0c\u591a\u6b21\u8bfb\u53d6\u7ed3\u679c\u4e0d\u540c\u3002\uff08\u4e0d\u4e00\u5b9a\u4e0d\u5bf9\uff0c\u4e0d\u662f\u9519\u8bef\uff09 \u5e7b\u8bfb \u5728\u4e00\u4e2a\u4e8b\u52a1\u91cc\u8bfb\u53d6\u5230\u4e86\u522b\u7684\u4e8b\u52a1\u63d2\u5165\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u524d\u540e\u8bfb\u53d6\u4e0d\u4e00\u81f4\u3002 6.3 \u6267\u884c\u4e8b\u52a1 \u6267\u884c\u4e8b\u52a1 -- mysql\u662f\u9ed8\u8ba4\u6253\u5f00\u4e8b\u52a1\u7684 -- \u624b\u52a8\u5904\u7406\u4e8b\u52a1 set autocommit = 0 ; -- \u5173\u95ed -- \u4e8b\u52a1\u5f00\u542f start transaction ; -- \u63d0\u4ea4 commit ; -- \u56de\u6eda rollback ; set autocommit = 1 ; -- \u5f00\u542f -- savepoint ; -- \u8bbe\u7f6e\u4e00\u4e2a\u4e8b\u52a1\u7684\u4fdd\u5b58\u70b9 rollback to savepoint ; -- \u56de\u6eda\u4fdd\u5b58\u70b9 release savepoint ; -- \u5220\u9664\u4fdd\u5b58\u70b9 -- drop database shop ; create database shop char set utf8 collate utf8_general_ci ; use shop ; CREATE TABLE ` account ` ( ` id ` int NOT NULL AUTO_INCREMENT , ` name ` varchar ( 30 ) NOT NULL , ` money ` decimal ( 9 , 2 ) NOT NULL , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb3 show create table account insert into account ( name , money ) values ( 'qiuqiu' , 90000 ); update account set money = 2000 . 00 where id = 1 ; insert into account ( name , money ) values ( 'zhuzhu' , 10000 . 00 ); -- \u6a21\u62df\u8f6c\u8d26 set autocommit = 0 ; start transaction ; update account set money = money - 500 where name = 'qiuqiu' ; update account set money = money + 500 where name = 'zhuzhu' ; COMMIT ; -- \u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u5c31\u4f1a\u88ab\u88ab\u6301\u4e45\u5316 rollback ; set autocommit = 1 ; 7.\u7d22\u5f15 7.1 \u7d22\u5f15\u7684\u5206\u7c7b \u7d22\u5f15\u662f\u5e2e\u52a9mysql\u9ad8\u6548\u83b7\u53d6\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\u3002 codinglabs mysql\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u8ba1\u53ca\u7b97\u6cd5\u539f\u7406 \u4e3b\u952e\u7d22\u5f15 primary key \u552f\u4e00\u6807\u8bc6\uff0c\u4e3b\u952e\u4e0d\u53ef\u91cd\u590d \u552f\u4e00\u7d22\u5f15 unique key \u907f\u514d\u91cd\u590d\u7684\u5217\uff0c\u552f\u4e00\u53ef\u4ee5\u91cd\u590d\uff0c\u591a\u4e2a\u5217\u90fd\u53ef\u4ee5\u90fd\u53ef\u53ef\u4ee5\u4e3a\u552f\u4e00\u7d22\u5f15\u3002 \u5e38\u89c4\u7d22\u5f15 key \u9ed8\u8ba4\u7684\uff0cindex\u6216\u8005key\u5173\u952e\u5b57\u6765\u8bbe\u7f6e \u5168\u6587\u7d22\u5f15 fulltext \u5feb\u901f\u5b9a\u4f4d\u7d22\u5f15 -- \u7d22\u5f15\u4f7f\u7528 -- 1\u3002\u5728\u521b\u5efa\u65f6\u589e\u52a0 -- 2\u3002\u5728\u521b\u5efa\u5b8c\u6210\u540e\u901a\u8fc7alter\u64cd\u4f5c\u8868\u52a0\u5165 use school ; show indexes from student ; -- \u589e\u52a0\u4e00\u4e2a\u7f29\u5f71 alter table school . student add fulltext index studentname1 ( studentname ); -- \u5220\u9664\u4e00\u4e2a\u7f29\u5f71 alter table school . student drop key studentname1 ; -- explain \u5206\u6790sql\u6267\u884c\u72b6\u6001 explain select * from student ; explain select * from student where match ( studentname ) against ( '\u5f20\u4f1f' ); 7.2\u6d4b\u8bd5\u7d22\u5f15 -- \u521b\u5efa\u7528\u6237\u8868 CREATE TABLE ` app_user ` ( ` id ` bigint unsigned NOT NULL AUTO_INCREMENT , ` name ` varchar ( 50 ) DEFAULT '' COMMENT 'name' , ` email ` varchar ( 50 ) NOT NULL COMMENT 'mail' , ` phone ` varchar ( 20 ) DEFAULT '' , ` gender ` tinyint unsigned DEFAULT '0' , ` password ` varchar ( 100 ) NOT NULL , ` age ` tinyint DEFAULT '0' , ` create_time ` datetime DEFAULT CURRENT_TIMESTAMP , ` update_time ` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ; \u63d2\u5165\u6570\u636e -- \u63d2\u5165\u4e00\u767e\u4e07\u6761\u6570\u636e delimiter $$ -- \u5199\u5165\u51fd\u6570 create function mock_data () returns int begin declare num int default 1000000 ; declare i int default 0 ; while i < num do -- \u63d2\u5165\u8bed\u53e5 insert into app_user ( name , email , phone , gender , password , age ) values ( concat ( 'user' , i ), '123@qq.com' , concat ( '18' , floor ( rand () * (( 999999999 - 100000000 ) + 100000000 ))), floor ( rand () * 2 ), uuid (), rand () * 100 ); set i = i + 1 ; end while ; return i ; end ; select mock_data (); explain select * from app_user where name = 'user9999' ; -- 993261rows 1 s 156 ms explain select * from app_user where name = 'user999999' ; -- 993261 1 s 156 ms select * from student ; -- 24 ms drop index id_app_user_name on app_user ; create index id_app_user_name on app_user ( name ); alter table app_user add index id_app_user_name ( name ); explain select * from app_user where name = 'user9999' ; -- 27ms 1rows explain select age as age from app_user order by age desc limit 1 offset 2 ; \u5efa\u7acb\u7d22\u5f15\u80fd\u591f\u6781\u5927\u7684\u7f29\u77ed\u67e5\u8be2\u65f6\u95f4 \u9700\u8981\u5efa\u7acb\u5728\u5f88\u5c11\u4fee\u6539\u7684\u5b57\u6bb5\u4e0a\u3002 7.3\u7d22\u5f15\u539f\u5219 \u4e0d\u8981\u5bf9\u7ecf\u5e38\u53d8\u52a8\u7684\u6570\u636e\u5efa\u7d22\u5f15 \u7d22\u5f15\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d \u7d22\u5f15\u4e00\u822c\u5efa\u7acb\u5728\u7ecf\u5e38 \u67e5\u8be2\u7684\u6570\u636e\u4e0a\u3002 \u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784 btree\uff1a Innodb hash \u8ba4\u771f\u8bfb\uff1a https://blog.codinglabs.org/articles/theory-of-mysql-index.html 8.\u6743\u9650\u7ba1\u7406 8.1\u7528\u6237\u7ba1\u7406 \u7528\u6237\u8868\uff1amysql.user \u5bf9\u8fd9\u5f20\u8868\u8fdb\u884c\u589e\u5220\u6539\u67e5\uff0c create user cc_test identified by '123456' ; set password = PASSWORD ( '123456' ); set password for cc_test = PASSWORD ( '123456' ); rename user cc_test to cc_test2 ; -- grant all privileges on * . * to cc_test2 ; show grants for cc_test2 show grants for root ; revoke all privileges on * . * form cc_test2 ; drop user cc_test ; 8.2\u6570\u636e\u5e93\u5907\u4efd \u4e3a\u4ec0\u4e48\u8981\u5907\u4efd\uff0c\uff1a \u9632\u6b62\u6570\u636e\u4e22\u5931 \u6570\u636e\u4e13\u4e1a \u6570\u636e\u5e93\u5907\u4efd\u65b9\u5f0f\uff1a \u62f7\u8d1d\u7269\u7406\u6587\u4ef6 \u53ef\u89c6\u5316\u5de5\u5177\u8fdb\u884c\u5907\u4efd\u548c\u5bfc\u51fa \u547d\u4ee4\u884c > mysqldump -h hostname -u root -p password database_name table_name > **.sql # \u5012\u5165\u5907\u4efd\u6587\u4ef6 soucre path_sql.sql # mysql 9.\u6570\u636e\u5e93\u8bbe\u8ba1 9.1\u8bbe\u8ba1\u6570\u636e\u5e93 \u7cdf\u7cd5\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\uff1a \u6570\u636e\u6bb5\u91cd\u590d\uff0c\u5197\u4f59 \u6570\u636e\u5e93\u63d2\u5165\u548c\u5220\u9664\u4ea7\u751f\u5f02\u5e38\u3002\u3010\u5c4f\u853d\u4f7f\u7528\u5916\u952e\u3011 \u7a0b\u5e8f\u6027\u80fd\u5dee \u826f\u597d\u7684\u6570\u636e\u5e93\u8bbe\u8ba1 \u5b58\u50a8\u4e2d\u7a7a\u95f4 \u4fdd\u8bc1\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027 \u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5173\u4e8e\u6570\u636e\u5e93\u7684\u8bbe\u8ba1 \uff1a \u5206\u6790\u9700\u6c42\uff1a \u5206\u6790\u4e1a\u52a1\u548c\u9700\u6c42\u5904\u7406\u7684\u6570\u636e\u5e93\u7684\u7ee3\u7403 \u6982\u8981\u65f6\u95f4\uff1a\u8bbe\u8ba1\u5173\u7cfb\u56feE-R\u56fe \u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u5e93 \uff1a\u4e00\u4e2a\u535a\u5ba2 \u8868 \u7528\u6237\u8868 \u5206\u7c7b\u8868\uff08\u6587\u7ae0\u5206\u7c7b\uff0c\u521b\u5efa\u8005\uff09 \u6587\u7ae0\u8868\uff08\u6587\u7ae0\u4fe1\u606f\uff09 \u53cb\u94fe\u8868 \u6807\u8bc6\u5b9e\u4f53\u7c7b 9.2 \u4e09\u5927\u8303\u5f0f \u4e09\u5927\u8303\u5f0f \u7b2c\u4e00\u8303\u5f0f \u6570\u636e\u8868\u7684\u6bcf\u4e00\u5217\u90fd\u662f\u4e0d\u53ef\u5206\u5272\u7684\u539f\u5b50\u6570\u636e\u9879 \u7b2c\u4e8c\u8303\u5f0f \u524d\u63d0\uff1a\u6ee1\u8db3\u7b2c\u4e00\u8303\u5f0f\uff0c \u5c5e\u6027\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c \u6bcf\u4e00\u5f20\u6570\u636e\u8868\u53ea\u63cf\u8ff0\u4e00\u4ef6\u4e8b\u60c5 \u7b2c\u4e09\u8303\u5f0f \u524d\u63d0\uff1a\u6ee1\u8db3\u7b2c\u4e00\u8303\u5f0f\uff0c\u548c\u7b2c\u4e8c\u8303\u5f0f \u6d88\u9664\u4f9d\u8d56\u548c\u4f20\u9012\u6027 \uff0c\u5c5e\u6027\u4e4b\u95f4\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u975e\u4e3b\u5c5e\u6027 \u5e73\u8861\u89c4\u8303\u4e8e\u6027\u80fd\u4e4b\u95f4\u7684\u95ee\u9898 \u5173\u8054\u67e5\u8be2\u7684\u8868\u4e0d\u53ef\u4ee5\u8d85\u8fc7\u4e09\u5f20 \u8003\u8651\u5230\u4f53\u9a8c\u3001\u76ee\u6807\u4ee5\u53ca\u9700\u6c42\uff0c\u6027\u80fd\u66f4\u52a0\u91cd\u8981 \u5197\u4f59\u5b57\u6bb5\u80fd\u591f\u51cf\u5c11\u67e5\u8be2\uff0c\u63d0\u9ad8\u6027\u80fd \u5728\u4fdd\u8bc1\u6027\u80fd\u7684\u524d\u63d0\u4e0b\uff0c\u9002\u5f53\u8003\u8651\u89c4\u8303\u6027 \u589e\u52a0\u8ba1\u7b97\u5217\uff0c\u5927\u6570\u636e\u91cf\u51cf\u5c11\u5230\u5c0f\u6570\u636e\u91cf\u3002 10\u5176\u4ed6 sql\u6ce8\u5165 web\u5e94\u7528\u6ca1\u6709\u5bf9\u7528\u6237\u8f93\u5165\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5728\u4e8b\u5148\u540e\u7aef\u7a0b\u5e8f\u4e2d\u7684sql\u4e2d\u63d2\u5165sql\u8bed\u53e5\u6765\u6267\u884c\u975e\u6cd5\u7684\u64cd\u4f5c\u3002 -- before select * from users where name = a and pwd = 1123 ; -- after select * from users where name = a or 1 = 1 and pwd = 123 or 1 = 1 ; \u4f7f\u7528\u9884\u7f16\u8bd1\u3001\u4ee5\u53ca\u5bf9\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u8fc7\u6ee4\u7b49\u65b9\u5f0f\u6765\u8fdb\u884c\u5e94\u5bf9\u3002","title":"\u5feb\u901fmysql\u6458\u8981"},{"location":"db/mysql/mysql/#mysql","text":"","title":"mysql"},{"location":"db/mysql/mysql/#1","text":"","title":"1.\u5f15\u5165"},{"location":"db/mysql/mysql/#_1","text":"","title":"\u6570\u636e\u5e93\u5206\u7c7b"},{"location":"db/mysql/mysql/#_2","text":"Mysql\u3001Oracle\u3001SQLlite \u901a\u8fc7\u8868\u548c\u8868\u7684\u4e4b\u95f4\u3001\u884c\u548c\u5217\u4e4b\u95f4\u7684\u5173\u7cfb\u6765\u8fdb\u884c\u6570\u636e\u5b58\u50a8","title":"\u5173\u7cfb\u6570\u636e\u5e93"},{"location":"db/mysql/mysql/#not-only-sql","text":"Reids\u3001MongoDB \u5bf9\u8c61\u5b58\u50a8\uff0c\u5b58\u50a8\u5bf9\u8c61\u81ea\u8eab\u7684\u5c5e\u6027","title":"\u975e\u5173\u7cfb not only sql"},{"location":"db/mysql/mysql/#rdbms","text":"DDL database define language DML * manage * DQL * query * DCL * control *","title":"RDBMS \u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf"},{"location":"db/mysql/mysql/#2","text":"","title":"2 \u64cd\u4f5c\u6570\u636e\u5e93"},{"location":"db/mysql/mysql/#21","text":"","title":"2.1\u6570\u636e\u5e93"},{"location":"db/mysql/mysql/#_3","text":"create database [if not exists] dbName;","title":"\u65b0\u5efa"},{"location":"db/mysql/mysql/#_4","text":"Drop database [if exists] dbname;","title":"\u5220\u9664"},{"location":"db/mysql/mysql/#22","text":"","title":"2.2\u8868 \u5217\u7c7b\u578b"},{"location":"db/mysql/mysql/#_5","text":"Type Storage (Bytes) Minimum Value Signed Minimum Value Unsigned Maximum Value Signed Maximum Value Unsigned TINYINT 1 -128 0 127 255 SMALLINT 2 -32768 0 32767 65535 MEDIUMINT 3 -8388608 0 8388607 16777215 INT 4 -2147483648 0 2147483647 4294967295 BIGINT 8 -263 0 2^63-1 2^64-1 tinyint 1 \u5b57\u8282 smallint 2 mediumint 3 int 4 int(4) \u4e8eint(M)\u53ea\u4e0e0\u586b\u5145\u6709\u5173\uff0c\u6700\u5927\u663e\u793a\u957f\u5ea6\u6709\u5173\u3002 bigint 8 float 4 double 8 decimal \u5b57\u7b26\u4e32\u6d6e\u70b9\u6570\uff0c\u505a\u91d1\u878d\u8fd0\u7b97","title":"\u6570\u503c"},{"location":"db/mysql/mysql/#_6","text":"char 0-255 **varchar 0-65535 **\u5e38\u7528\u53d8\u91cf tinytext 2*8 -1 text 2*16 -1 \u4fdd\u5b58\u5927\u6587\u672c","title":"\u5b57\u7b26\u4e32"},{"location":"db/mysql/mysql/#_7","text":"date YYYY-MM-DD \u65e5\u671f time HH-MM-SS \u65f6\u95f4 datetime YYYY-MM-DD HH:MM:SS timestamp \u65f6\u95f4\u6233 1970.1.1 \u8f83\u4e3a\u5e38\u7528 year","title":"\u65f6\u95f4"},{"location":"db/mysql/mysql/#null","text":"\u6ca1\u6709\u503c","title":"null"},{"location":"db/mysql/mysql/#23","text":"","title":"2.3\u8868 \u5b57\u6bb5\u5c5e\u6027"},{"location":"db/mysql/mysql/#unsigned","text":"\u65e0\u7b26\u53f7\u6574\u5f62\uff0c\u4e0d\u53ef\u4e3a\u8d1f\u6570","title":"unsigned"},{"location":"db/mysql/mysql/#zerofill","text":"0\u586b\u5145 \u4e0d\u8db3\u7684\u4f4d\u6570\u75280\u6765\u586b\u5145 eg: int(3), 5 , 005","title":"zerofill"},{"location":"db/mysql/mysql/#autoincrement","text":"\u7528\u6765\u8bbe\u7f6e\u552f\u4e00\u4e3b\u952e \u81ea\u5b9a\u4e49\u8d77\u59cb\u503c","title":"autoincrement"},{"location":"db/mysql/mysql/#not-null","text":"\u4e0d\u8d4b\u503c\u4e3a\u9519","title":"Not Null"},{"location":"db/mysql/mysql/#default-value","text":"","title":"default value"},{"location":"db/mysql/mysql/#24","text":"CREATE TABLE IF NOT EXISTS ` student ` ( ` id ` INT ( 4 ) NOT NULL AUTO_INCREMENT COMMENT 'id' , ` name ` VARCHAR ( 30 ) NOT NULL DEFAULT 'unkonwnuser' COMMENT 'name' , ` pwd ` VARCHAR ( 30 ) NOT NULL DEFAULT '123456' COMMENT 'password' , ` sex ` VARCHAR ( 2 ) NOT NULL DEFAULT '\u5973' COMMENT 'sexual' , ` birthday ` DATETIME DEFAULT NULL COMMENT 'birthday' , ` address ` VARCHAR ( 100 ) DEFAULT NULL COMMENT 'home_address' , ` email ` VARCHAR ( 50 ) DEFAULT NULL COMMENT 'email' , PRIMARY KEY ( ` id ` ) ) ENGINE = INNODB DEFAULT CHARSET = utf8 ; \u683c\u5f0f CREATE TABLE IF NOT EXISTS ` student ` ( ` \u5b57\u6bb5 ` \u5217\u7c7b\u578b [ \u5c5e\u6027 ] [ \u7d22\u5f15 ] [ \u6ce8\u91ca ], ..... ` \u5b57\u6bb5 ` \u5217\u7c7b\u578b [ \u5c5e\u6027 ] [ \u7d22\u5f15 ] [ \u6ce8\u91ca ], PRIMARY KEY ( ` key1 ` , ` key2 ` ) )[ \u8868\u7c7b\u578b ][ \u5b57\u7b26\u96c6\u8bbe\u7f6e ][ \u6ce8\u91ca ] show create database ` school ` ; show create table student ; desc student ;","title":"2.4\u521b\u5efa\u8868"},{"location":"db/mysql/mysql/#25","text":"","title":"2.5\u6570\u636e\u5e93\u5f15\u64ce"},{"location":"db/mysql/mysql/#innodb-myisam","text":"MYISAM INNODB \u4e8b\u52a1\u652f\u6301 \u4e0d\u652f\u6301 \u652f\u6301 \u6570\u636e\u884c\u9501\u5b9a \u4e0d\u652f\u6301\uff08\u8868\u9501\uff09 \u652f\u6301 \u5916\u952e \u4e0d\u652f\u6301 \u652f\u6301 \u5168\u6587\u7d22\u5f15 \u652f\u6301 \u4e0d\u652f\u6301 \u8868\u7a7a\u95f4\u5927\u5c0f \u8f83\u5c0f \u8f83\u5927\uff0c\u7ea6\u4e3aMYISAM 2\u500d MYISAM \u8282\u7ea6\u65f6\u95f4\uff0c\u901f\u5ea6\u5feb INNODB \u5b89\u5168\u6027\u3001\u4e8b\u52a1\u5904\u7406\u3001\u5916\u952e\u652f\u6301\u591a\u8868\u591a\u7528\u6237 \u5728\u7269\u7406\u7a7a\u95f4\u5b58\u5728\u7684\u4f4d\u7f6e \u6570\u636e\u5e93\u672c\u8d28\u662f\u6587\u4ef6\u5b58\u50a8 Mysql\u5f15\u64ce\u5728\u7269\u7406\u6587\u4ef6\u4e0a\u7684\u533a\u522b InnoDB\u5728\u6570\u636e\u5e93\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a*.frm\u6587\u4ef6\uff0c\u4ee5\u53ca\u4e0a\u7ea7\u76ee\u5f55\u4e0b\u7684 *.idb myIsam *.frm - \u8868\u7ed3\u6784\u5b9a\u4e49\u6587\u4ef6 *.myd - \u6570\u636e\u6587\u4ef6 *.myi - \u7d22\u5f15\u6587\u4ef6","title":"innodb &amp; myisam"},{"location":"db/mysql/mysql/#_8","text":"charset = utf8","title":"\u5b57\u7b26\u96c6\u7f16\u7801"},{"location":"db/mysql/mysql/#26","text":"alter table PAGENAME \u64cd\u4f5c ; -- \u91cd\u547d\u540d\u8868 alter table ` teacher ` rename as ` teacher1 ` ; alter table ` teacher1 ` rename as ` teacher ` ; -- \u589e\u52a0\u65b0\u7684\u5b57\u6bb5 alter table ` teacher ` add ` city ` varchar ( 20 ) default null comment 'city' ; alter table ` teacher ` change age1 age int ( 10 ); -- \u91cd\u547d\u540d\u5b57\u6bb5 alter table ` teacher ` modify age int ( 2 ); -- \u4fee\u6539\u7ea6\u675f alter table ` teacher ` drop age ; -- \u5220\u9664\u5b57\u6bb5 -- \u5220\u9664\u8868 drop table if exists teacher ; \u6ce8\u610f\u4e8b\u9879\uff1a `` \u5b57\u6bb5\u540d \u6ce8\u91ca\u4f7f\u7528 -- sql \u5173\u952e\u5b57\u5927\u5c0f\u4e0d\u654f\u611f","title":"2.6\u4fee\u6539\u548c\u5220\u9664\u8868"},{"location":"db/mysql/mysql/#3mysql","text":"","title":"3.mysql\u6570\u636e\u5e93\u7ba1\u7406"},{"location":"db/mysql/mysql/#31","text":"\u5b66\u751f\u7684grade\u5217\uff0c\u5f15\u7528\u5e74\u7eaa\u8868\u7684id create table ` grade ` ( ` gradeID ` int ( 10 ) not null auto_increment comment 'the id of grade' , ` gradeName ` varchar ( 50 ) not null comment 'name of grade' , PRIMARY KEY ( ` gradeID ` ) ) engine = innoDB default charset = UTF8MB3 ; -- \u5b66\u751f\u8868\u7684gradeID\u5b57\u6bb5 \u8981\u5f15\u7528gradeid -- \u5b9a\u4e49\u5916\u952ekey -- \u7ed9\u8fd9\u4e2a\u5916\u952e\u6dfb\u52a0\u7ea6\u675f reference \u5f15\u7528 CREATE TABLE ` student ` ( ` id ` int NOT NULL AUTO_INCREMENT COMMENT 'id' , ` name ` varchar ( 30 ) NOT NULL DEFAULT 'unkonwnuser' COMMENT 'name' , ` pwd ` varchar ( 30 ) NOT NULL DEFAULT '123456' COMMENT 'password' , ` sex ` varchar ( 2 ) NOT NULL DEFAULT '\u5973' COMMENT 'sexual' , ` birthday ` datetime DEFAULT NULL COMMENT 'birthday' , ` address ` varchar ( 100 ) DEFAULT NULL COMMENT 'home_address' , ` email ` varchar ( 50 ) DEFAULT NULL COMMENT 'email' , ` gradeID ` int ( 10 ) not null comment 'the grade' , PRIMARY KEY ( ` id ` ), key ` FK_gradeID ` ( ` gradeID ` ), constraint ` FK_gradeID ` foreign key ( ` gradeID ` ) references ` grade ` ( ` gradeID ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb3 ; \u5220\u9664\u5148\u5220\u9664\u4ece\u8868\u540e\u5220\u9664\u4e3b\u8868\u3002 -- \u521b\u5efa\u8868\u7684\u65f6\u5019\u6ca1\u6709\u5173\u7cfb ALTER Table ` student ` ADD COLUMN ` gradeID ` INT ( 10 ) NOT NULL COMMENT 'grade id' ; ALTER TABLE ` student ` ADD CONSTRAINT ` FK_gradeID ` FOREIGN KEY ( ` gradeID ` ) REFERENCES ` grade ` ( gradeID ); \u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u6570\u636e\u5e93\u8fc7\u591a\u4f1a\u9020\u6210\u56f0\u6270\u3002 \u6700\u4f73\u5b9e\u8df5 \u6570\u636e\u8868\u53ea\u6709\u672c\u8eab\u7684\u8868 \u5982\u679c\u8981\u4f7f\u7528\u591a\u5f20\u8868\u5219\u4f7f\u7528\u5916\u952e\uff0c\u901a\u8fc7\u7a0b\u5e8f\u903b\u8f91\u6765\u8fdb\u884c\u5b9e\u73b0","title":"3.1 \u5916\u952e"},{"location":"db/mysql/mysql/#32dml","text":"\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff0c\u6570\u636e\u5b58\u50a8\uff0c\u6570\u636e\u7ba1\u7406","title":"3.2DML\u8bed\u8a00"},{"location":"db/mysql/mysql/#insert","text":"","title":"insert"},{"location":"db/mysql/mysql/#update","text":"","title":"update"},{"location":"db/mysql/mysql/#delete","text":"","title":"delete"},{"location":"db/mysql/mysql/#33","text":"INSERT INTO table_name([word1],[word2]) VALUES('value1', 'value2', 'value3') \u5b57\u6bb5\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u662f\u503c\u9700\u8981\u4e00\u4e00\u5bf9\u5e94 \u53ef\u4ee5\u540c\u65f6\u63d2\u5165\u591a\u6761\u6570\u636e -- \u63d2\u5165\u8bed\u53e5 -- insert into table_name([col1]) values('value1'),('values') INSERT INTO ` grade ` ( ` gradeName ` ) values ( '\u5927\u56db' ); -- insert into \u4e0d\u6307\u5b9a\u5b57\u6bb5\u5219\u4f1a\u4e00\u4e00\u5339\u914d INSERT INTO ` grade ` ( ` gradeName ` ) value ( '\u5927\u4e09' ), ( '\u5927\u4e8c' ), ( '\u5927\u4e00' ); INSERT INTO ` student ` ( ` name ` , ` pwd ` , ` sex ` ) VALUES ( '\u9648\u79cb\u5b9e' , '123asdzxc' , '\u7537' ),( 'zjj' , '123asdzxc' , '\u7537' );","title":"3.3 \u63d2\u5165"},{"location":"db/mysql/mysql/#34","text":"UPDATE table_name SET column_name = value WHERE \u6761\u4ef6[] -- \u4fee\u6539student\u540d\u5b57 UPDATE ` student ` SET ` name `= 'zhangshuntao' where id = 1 ; -- \u4e0d\u6307\u5b9a\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u4fee\u6539\u6389\u6240\u6709\u7684\u8868 -- \u4fee\u6539\u591a\u4e2a\u5b57\u6bb5 UPDATE ` student ` SET ` name ` = 'qiusiu' , ` email `= '123@qq.com' where id = 1 ; **\u6761\u4ef6\uff1a**Where \u5b50\u53e5 \u64cd\u4f5c\u7b26 \u542b\u4e49 \u8303\u56f4 \u7ed3\u679c = \u7b49\u4e8e 5=6 false != \u4e0d\u7b49\u4e8e 5!=6 > < <= >= BETWEEN ... and \u95ed\u5408\u533a\u95f4 BETWEEN 2 and 5 [2, 5] AND \u548c OR \u6216\u8005 -- \u901a\u8fc7\u591a\u4e2a\u6761\u4ef6\u5b9a\u4e49 UPDATE ` student ` SET ` name ` = '\u591a\u6761\u8bed\u53e5\u4fee\u6539\u7684' where ` name `= 'zjj' AND ` pwd `= '9999' ; UPDATE table_name SET column_name = value WHERE \u6761\u4ef6[] \u6ce8\u610f column_name \u5e26\u4e0a `` condition\uff0c\u5e05\u9009\u7684\u6761\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u5219\u4f1a\u4fee\u6539\u6240\u6709\u7684\u5217 value\u53ef\u4ee5\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u53d8 \u591a\u4e2a\u8bbe\u7f6e\u7684\u5c5e\u6027\u4e4b\u95f4\uff0c\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00","title":"3.4 \u4fee\u6539"},{"location":"db/mysql/mysql/#35","text":"DELETE FROM table_name WHREE [condition] delete from ` student ; delete from ` student ` where id = 1 ; TRUNCATE \u5b8c\u5168\u60c5\u51b5\u6570\u636e\u5e93\uff0c\u7ed3\u6784\u548c\u7d22\u5f15\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316 TRUNCATE table_name \u76f8\u540c\u70b9\uff1a\u90fd\u80fd\u5220\u9664\u6570\u636e\uff0c\u4f46\u662f\u4e0d\u4f1a\u5220\u9664\u8868\u7ed3\u6784 \u4e0d\u540c\u70b9\uff1a TRAUNCATE \u4f1a\u91cd\u7f6e\u81ea\u589e\u8ba1\u6570\u5668 TRUNCATE \u4e0d\u5f71\u54cd\u4e8b\u52a1 \u4e86\u89e3\uff0c DELETE \u5220\u9664\u95ee\u9898 \uff0c\u91cd\u542f\u6570\u636e\u5e93\uff0c\u73b0\u8c61\uff1a InnoDB \u81ea\u589e\u5217\u4f1a\u4ece1\u5f00\u59cb\uff0c\u56e0\u4e3aInnoDB\u7684\u81ea\u589e\u8ba1\u6570\u5668\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d MyISAM \u7ee7\u7eed\u4ece\u4e0a\u4e00\u4e2a\u81ea\u589e\u91cf\u5f00\u59cb\uff0c\u56e0\u4e3a\u81ea\u589e\u8ba1\u6570\u5b58\u5728\u4e8e\u6587\u4ef6\u4e4b\u4e2d","title":"3.5 \u5220\u9664"},{"location":"db/mysql/mysql/#4dql","text":"","title":"4.DQL\u6570\u636e\u5e93\u67e5\u8be2\u8bed\u8a00"},{"location":"db/mysql/mysql/#41-dql","text":"\u6570\u636e\u67e5\u8be2\u8bed\u8a00 date query language \u6240\u6709\u67e5\u8be2\u64cd\u4f5c\u90fd\u7528Select \u7b80\u5355\u7684\u67e5\u8be2\u548c\u590d\u6742\u67e5\u8be2\u90fd\u80fd\u505a \u6570\u636e\u5e93\u6838\u5fc3\u8bed\u8a00\uff0c\u6700\u91cd\u8981\u7684\u8bed\u8a00 \u4f7f\u7528\u6700\u9ad8\u9891 \u8bed\u6cd5 SELECT \u5b57\u6bb5... FROM \u8868 -- \u67e5\u8be2\u5168\u90e8\u5b66\u751f SELECT * from ` student ` ; -- \u67e5\u8be2\u5236\u5b9a\u5b57\u6bb5 SELECT ` studentno ` a , ` studentname ` b FROM ` student ` ; -- \u7ed9\u7ed3\u679c\u4f7f\u7528\u522b\u540d, \u7ed9\u8868\u5176\u522b\u540d SELECT ` studentno ` AS '\u5b66\u53f7' , ` studentname ` AS '\u540d\u5b57' From ` student ` ; -- \u51fd\u6570 Concat(a, b) SELECT CONCAT ( 'name: ' , studentname ) AS name FROM ` student ` ; \u5982\u679c\u5b57\u6bb5\u540d\u4e0d\u591f\u597d\u7406\u89e3\uff0c\u53ef\u4ee5\u4f7f\u7528AS\u6307\u5b9a\u5b57\u6bb5\u540d","title":"4.1 DQL"},{"location":"db/mysql/mysql/#42","text":"\u53bb\u91cd SELECT DISTINCT SELECT * from result ; -- \u67e5\u8be2\u5168\u90e8\u6210\u7ee9 -- \u67e5\u8be2\u6709\u90a3\u4e9b\u540c\u5b66\u53c2\u52a0\u4e86\u8003\u8bd5 select ` studentno ` from result ; select DISTINCT ` studentno ` from result ; \u6570\u636e\u5e93\u4e2d\u7684\u5217 -- select vserion() select version (); -- \u51fd\u6570 select 100 * 3 - 1 AS result ; -- \u8868\u8fbe\u5f0f SELECT @@ AUTO_INCREMENT_INCREMENT ; -- \u53d8\u91cf -- \u5b66\u9662\u8003\u8bd5\u6210\u7ee9+1\u5206\u67e5\u770b SELECT ` studentno ` , ` studentresult ` AS beforeResult , ` studentresult `+ 1 AS AfterResult FROM result ; \u6570\u636e\u5e93\u4e2d\u7684\u8868\u8fbe\u5f0f\uff1a\u6587\u672c\u503c\uff0c\u5217\uff0cNull\uff0c\u51fd\u6570\uff0c\u8ba1\u7b97\u8868\u8fbe\u5f0f\uff0c\u7cfb\u7edf\u53d8\u91cf\u2026\u2026 SELECT \u8868\u8fbe\u5f0f FROM \u8868","title":"4.2 \u67e5\u8be2\u6307\u5b9a\u5b57\u6bb5"},{"location":"db/mysql/mysql/#43-where","text":"\u6240\u6709\u80fd\u591f\u4f7f\u7528\u5728\u68c0\u7d22\u6570\u636e\u4e2d\u7684\u503c \u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u8868\u8fbe\u5f0f\u7ec4\u6210 \u8fd0\u7b97\u7b26 \u8bed\u6cd5 \u63cf\u8ff0 and a and b or a or a Not not a ! \u5c3d\u91cf\u4f7f\u7528\u5355\u8bcd -- where SELECT studentno , ` studentresult ` from result where studentresult >= 95 and studentresult <= 100 ; -- between and \u67e5\u8be2\u533a\u95f4 select studentno , studentresult from result where studentresult between 95 and 100 ; -- \u9664\u4e861000\u53f7\u5b66\u751f\u4ee5\u5916\u7684\u6210\u7ee9 select studentno , studentresult AS \u9ad8\u5206\u79d1\u76ee from result where studentno != 1000 and studentresult between 90 and 100 ; select studentno , studentresult from result where not studentno = 1000 ; \u6a21\u7cca\u67e5\u8be2\uff1a\u6bd4\u8f83\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \u8bed\u6cd5 \u63cf\u8ff0 IS NULL a is null IS NOT NULL BETWEEN a between b and c like a like b SQL \u5982\u679cA\u80fd\u5339\u914d\u5230B\uff0c\u5219\u7ed3\u679c\u4e3a\u771f in a in (a1,a2,a3) a\u5728a1,a2,a3\u4e2d\u5219\u4e3a\u771f -- \u6a21\u7cca\u67e5\u8be2 -- \u67e5\u8be2\u59d3\u5218\u7684\u540c\u5b66 -- like \u7ed3\u5408 %\uff080\u5230\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff09_\uff08\u4e00\u4e2a\u5b57\u7b26\uff09 SELECT ` studentno ` , studentname from student where studentname like '\u674e%' ; -- like \u7ed3\u5408 %\uff080\u5230\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff09_\uff08\u4e00\u4e2a\u5b57\u7b26\uff09 SELECT ` studentno ` , studentname from student where studentname like '\u674e___' ; -- \u67e5\u8be2\u540d\u5b57\u4e2d\u6709\u725b\u5b57\u7684\u540c\u5b66 SELECT ` studentno ` , studentname from student where studentname like '%\u725b%' ; -- in \u5305\u542b\u5173\u7cfb -- \u67e5\u8be21001\uff0c1002\uff0c1003\u53f7\u540c\u5b66 select ` studentno ` , ` studentname ` from ` student ` where studentno in ( 1001 , 1002 , 1003 ); -- \u67e5\u8be2\u5728\u5317\u4eac\u7684\u5b66\u751f select ` studentno ` , ` studentname ` , ` address ` from ` student ` where address in ( '\u5317\u4eac\u671d\u9633' ); -- null \u548cnot null -- \u67e5\u8be2\u5730\u5740\u4e3a\u7a7a\u7684\u5b66\u751f select studentno , studentname , address from student where address = '' ; -- \u67e5\u8be2\u51fa\u751f\u65e5\u671f\u7684\u540c\u5b66 select studentno , studentname from student where borndate is null ;","title":"4.3 where\u6761\u4ef6\u5b57\u53e5"},{"location":"db/mysql/mysql/#44","text":"Join \u5de6\u8868 \uff0c\u53f3\u8868 LeftJoin InnerJoin Right join -- \u67e5\u8be2\u53c2\u52a0\u4e86\u8003\u8bd5\u7684\u540c\u5b66\uff0c\u5b66\u53f7\uff0c \u540d\u5b57\uff0c\u79d1\u76ee\u7f16\u53f7\uff0c\u5206\u6570 /* 1. \u9700\u8981\u90a3\u4e9b\u8868 2\uff0c\u9700\u8981\u4f7f\u7528\u54ea\u4e00\u79cd\u8fde\u63a5\u67e5\u8be2? 7\u4e2d \u786e\u5b9a\u4ea4\u53c9\u70b9\uff0c\u6570\u636e\u76f8\u540c\u7684 \u5224\u65ad\u6761\u4ef6 \u5b66\u751f\u8868\u4e2d\u7684studentNO = \u6210\u7ee9\u8868\u4e2d\u7684studentNo */ SELECT s . studentno , s . studentname , subjectno , studentresult from student s inner join result r on s . studentno = r . studentno ; select s . studentno , studentname , subjectno , studentresult from student s right join result r on r . studentno = s . studentno ; -- select s . studentno , studentname , subjectno , studentresult from student s left join result r on r . studentno = s . studentno ; \u64cd\u4f5c \u63cf\u8ff0 \u57fa\u51c6 Inner join \u8868\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5339\u914d\u5c31\u4f1a\u8fd4\u56de left join \u4f1a\u4ece\u5de6\u8868\u4e2d\u8fd4\u56de\u6240\u6709\u7684\u503c\uff0c\u53f3\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u503c\u4e5f\u4f1a\u8fd4\u56de\u51fa\u6765 \u5df2\u5de6\u8868\u4e3a\u57fa\u51c6 right join \u4f1a\u4ece\u53f3\u8868\u4e2d\u8fd4\u56de\u6240\u6709\u7684\u503c\uff0c\u5de6\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u503c\u4e5f\u4f1a\u8fd4\u56de\u51fa\u6765 \u4ee5\u53f3\u8868\u4e3a\u57fa\u51c6 -- \u67e5\u8be2\u7f3a\u8003\u7684\u540c\u5b66 select s . studentno , studentname , subjectno , studentresult from student s left join result r on r . studentno = s . studentno where studentresult is null ; -- \u5b66\u53f7\uff0c\u5b66\u751f\u59d3\u540d\uff0c\u79d1\u76ee\u540d\uff0c\u5206\u6570 select s . studentno , studentname , subjectname , studentresult from student s inner join result r on r . studentno = s . studentno left join subject j on r . subjectno = j . subjectno","title":"4.4 \u8054\u8868\u67e5\u8be2"},{"location":"db/mysql/mysql/#441","text":"\u81ea\u5df1\u7684\u8868\u548c\u81ea\u5df1\u7684\u8868\u8fde\u63a5\uff0c\u6838\u5fc3\uff1a\u4e00\u5f20\u8868\u62c6\u5206\u6210\u4e24\u5f20\u4e00\u6837\u7684\u8868\u3002 select c1 . categoryname as p , c2 . categoryname as s from category c1 , category c2 where c1 . categoryid = c2 . pid ; SELECT [ ALL | DISTINCT ] { * | table . * | [ table . filed1 [ as alias1 ][, table . filed2 [ as alias2 ][,...]]] } FROM table_name [ as table_alias ] [ left | right | inner join table_name2 ] -- \u8054\u5408\u67e5\u8be2 [ where ...] [ Group by ...] -- \u6309\u54ea\u4e9b\u4e2a\u8ba1\u7b97\u6765\u5206\u7ec4 [ Having ] -- \u8fc7\u6ee4\u5206\u7ec4\u9700\u8981\u7684\u6b21\u8981\u6761\u4ef6 [ order by ...] -- \u6392\u5e8f\u6761\u4ef6 [ limit { [ offset ,] row_count | row_countOFFSET offset } ]; -- \u6307\u5b9a\u8bb0\u5f55\u9700\u8981\u7684\u8bb0\u5f55\u4ece\u54ea\u4e00\u6761\u9053\u90a3\u4e00\u6761","title":"4.4.1\u81ea\u8fde\u63a5"},{"location":"db/mysql/mysql/#45","text":"-- \u5206\u9875 \u548c \u6392\u5e8f -- \u5347\u5e8fASC\uff0c \u964d\u5e8fDESC -- \u7f51\u9875\uff1a\u5f53\u524d\u3001\u603b\u7684\u9875\u6570\u3001\u9875\u9762\u5927\u5c0f -- LIMIT 0,5 \u4ece 1 \uff5e5 -- LIMIT 1\uff0c6 \u4ece 2\uff5e6 select r . studentno , studentname , studentresult from result r inner join student s on r . studentno = s . studentno order by studentresult limit 1 offset 4 ; -- \u7b2c\u4e00\u9875 0-5 -- \u7b2c\u4e8c\u9875 5-5 -- \u7b2c\u4e09\u9875 10-5 -- \u7b2cn\u9875 (n-1)*5 - 5 (pageNum-1)*pageSize,pageSize -- totalPage = total / pageSize limit \u8d77\u59cb\u503c \u9875\u9762\u5927\u5c0f","title":"4.5 \u5206\u9875\u548c\u6392\u5e8f"},{"location":"db/mysql/mysql/#46","text":"where ( ) \u5728where\u8bed\u53e5\u4e2d\u5728\u518d\u5d4c\u5957\u4e00\u4e2a\u67e5\u8be2 -- \u9ad8\u7b49\u6570\u5b66-1\u7684\u79d1\u76ee select distinct s . studentno , studentname , subjectno from student s inner join result r on s . studentno = r . studentno where studentresult >= 80 and subjectno = ( select subjectno from subject where subjectname = '\u9ad8\u7b49\u6570\u5b66-1' ); select distinct studentno , studentname from student where studentno in ( select studentno from result where studentresult >= 80 and subjectno = ( select subjectno from subject where subjectname = '\u9ad8\u7b49\u6570\u5b66-1' ) ); -- \u67e5\u8be2\u8bfe\u7a0b\u4e3a\u9ad8\u7b49\u6570\u5b66-2 \u4e14\u5206\u6570\u4e0d\u5c0f\u4e8e80\u5206\u7684\u540c\u5b66\u5b66\u53f7\u548c\u59d3\u540d select distinct r . studentno , studentname from student s inner join result r on r . studentno = s . studentno inner join subject sub on r . subjectno = sub . subjectno where subjectname = '\u9ad8\u7b49\u6570\u5b66-1' and studentresult > 80 ;","title":"4.6 \u5b50\u67e5\u8be2"},{"location":"db/mysql/mysql/#5-mysql","text":"","title":"5. mysql \u51fd\u6570"},{"location":"db/mysql/mysql/#51","text":"-- \u5e38\u7528\u51fd\u6570 select abs ( - 8 ) select CEILING ( 9 . 4 ); -- \u5411\u4e0a\u533a\u9547 select FLOOR ( 9 . 1 ); select RAND (); -- \u5224\u65ad\u6570\u7684\u7b26\u53f7 select sign ( - 9 ); -- \u5b57\u7b26\u4e32\u51fd\u6570 select char_length ( '\u5373\u4f7f\u6211\u7231\u4f60' ); select concat ( '1' , '-' , ' ' , '8' ); select insert ( 'qiuqiu' , 1 , 3 , '123' ); select lower ( 'aBBBc' ); select upper ( 'abababab' ); select instr ( 'hello' , 'lo' ); select replace ( 'woaiwoainiainiaini' , 'ai' , '\u7231' ); select substr ( 'woaiwoaini' , 3 ); select reverse ( '123456' ); -- \u67e5\u8be2\u59d3\u674e\u7684\u540c\u5b66 select REPLACE ( studentname , '\u674e' , 'li' ) from student where studentname like '\u674e%' ; -- \u65f6\u95f4\u548c\u65e5\u671f\u51fd\u6570 select current_date (); select current_time (); select now (); select localtime (); select sysdate (); select year ( now ()); select day ( now ()); -- \u7528\u6237 select version (); select user (); select system_user ();","title":"5.1 \u5e38\u7528\u51fd\u6570"},{"location":"db/mysql/mysql/#52","text":"\u51fd\u6570\u540d\u79f0 \u63cf\u8ff0 COUNT() SUM() AVG() MAX() ` MIN() ... -- \u805a\u5408\u51fd\u6570 -- \u90fd\u80fd\u591f\u505a\u7edf\u8ba1\uff0c select count ( gradeid ) from student ; -- \u6307\u5b9a\u5217\uff0c\u4f1a\u5ffd\u7565\u6240\u6709\u7684null\u503c\uff0c\u5f53\u5217\u5b57\u6bb5\u4e3a\u4e3b\u952e\u7684\u65f6\u5019\uff0c\u5219\u662f\u6700\u5feb\u7684\u3002 select count ( * ) from student ; -- \u4e0d\u4f1a\u5ffd\u7565null\u503c, \u672c\u8d28\u90fd\u662f\u8ba1\u7b97\u884c\u6570\uff0ccount*\u4f1a\u8ba1\u7b97\u6240\u6709\u7684\u884c\u6570 select count ( 1 ) from student ; -- \u4e0d\u4f1a\u5ffd\u7565null\u503c\uff0c\u672c\u8d28\u90fd\u662f\u8ba1\u7b97\u884c\u6570\uff0ccount(1)\u4f1a\u628a\u6240\u6709\u7684\u5f52\u4f4d\u4e00\u5217\u53ea\u4f1a\u8d70\u4e00\u6b21 select sum ( studentresult ) as sum , avg ( studentresult ) as avg , max ( studentresult ) as max , min ( studentresult ) as min from result ; -- \u67e5\u8be2\u4e0d\u540c\u8bfe\u7a0b\u7684\u5e73\u5747\u5206\uff0c\u6700\u9ad8\u5206\uff0c\u6700\u4f4e\u5206 -- \u4e0d\u540c\u7684\u8bfe\u7a0b\u8fdb\u884c\u5206\u7ec4 select subjectname as name , avg ( studentresult ) as avg , max ( studentresult ) as max , min ( studentresult ) as min , count ( 1 ) as count from result r inner join subject s on r . subjectno = s . subjectno group by r . subjectno -- \u901a\u8fc7\u4ec0\u4e48\u5b57\u6bb5\u8fdb\u884c\u5206\u7ec4 having avg > 80 ; -- \u5206\u7ec4\u6761\u4ef6","title":"5.2 \u805a\u5408\u51fd\u6570"},{"location":"db/mysql/mysql/#53-md5","text":"\u4ec0\u4e48\u662fMD5,\u4fe1\u606f\u6458\u8981\u7b97\u6cd5\u3002 MD5\u4e0d\u53ef\u9006\uff0c\u5177\u4f53\u7684\u503c\u7684md5\u662f\u4e00\u81f4\u7684 show create table testmd5 ; insert into testmd5 values ( 2 , 'zhangsan' , '123' ), ( 3 , 'zhangsa1n' , '123' ); update testmd5 set pwd = md5 ( pwd ) where id = 1 ; update testmd5 set pwd = md5 ( pwd ) where not id = 1 ; -- \u63d2\u5165\u7684\u65f6\u5019\u8fdb\u884c\u52a0\u5bc6 insert into testmd5 ( name , pwd ) values ( 'xiaoming' , md5 ( '123456' )); -- \u5982\u4f55\u6821\u9a8c\uff0c\u5c06\u4f20\u5165\u8fdb\u6765\u7684\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\uff0c\u5bf9\u6bd4\u52a0\u5bc6\u4e4b\u540e\u7684\u503c select * from testmd5 where name = 'zhangsan' and pwd = md5 ( '123' );","title":"5.3 \u6570\u636e\u5e93\u7ea7\u522b\u7684md5\u52a0\u5bc6"},{"location":"db/mysql/mysql/#6","text":"","title":"6.\u4e8b\u52a1"},{"location":"db/mysql/mysql/#61-transaction","text":"\u591a\u6761sql\uff0c\u8981\u4e48\u6210\u529f\uff0c\u8981\u4e48\u90fd\u5931\u8d25 \u5c06\u4e00\u7ec4sql\uff0c\u653e\u5728\u4e00\u4e2a\u6279\u6b21\u4e2d\u53bb\u6267\u884c \u4e8b\u52a1\u539f\u5219\uff1aACID \u539f\u5b50\u6027\uff08Atomicity\uff09\uff0c\u4e00\u81f4\u6027\uff08Consistency\uff09\uff0c\u9694\u79bb\u6027\uff08Isolation\uff09\uff0c\u6301\u4e45\u6027\uff08Durability\uff09 \u539f\u5b50\u6027 \uff1a \u8981\u4e48\u90fd\u5b8c\u6210\uff0c\u8981\u4e48\u90fd\u5931\u8d25 \u4e00\u81f4\u6027 \uff1a\u4e8b\u52a1\u524d\u540e\u6570\u636e\u7684\u5b8c\u6574\u6027\u8981\u4fdd\u6301\u4e00\u81f4 \u6301\u4e45\u6027 \uff1a\u4e8b\u52a1\u7684\u7ed3\u675f\u72b6\u6001\u4e0d\u4f1a\u968f\u7740\u5916\u754c\u72b6\u6001\u5bfc\u81f4\u6570\u636e\u4e22\u5931 \u6ca1\u6709\u63d0\u4ea4\uff0c\u6062\u590d\u5230\u539f\u6765\u72b6\u6001 \u4e00\u65e6\u63d0\u4ea4\uff0c\u5c31\u4f1a\u6301\u4e45\u5316 \u9694\u79bb\u6027 \uff1a\u591a\u4e2a\u7528\u6237\u7528\u6237\u5e76\u53d1\u64cd\u4f5c\u4fdd\u8bc1\u4e8b\u52a1\u76f8\u4e92\u9694\u79bb\uff0c","title":"6.1 \u4ec0\u4e48\u662f\u4e8b\u52a1\uff08transaction\uff09"},{"location":"db/mysql/mysql/#62","text":"","title":"6.2 \u9694\u79bb\u5bfc\u81f4\u7684\u95ee\u9898"},{"location":"db/mysql/mysql/#_9","text":"\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u5230\u4e86\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u6ca1\u6709\u63d0\u4ea4\u7684\u6570\u636e\u3002","title":"\u810f\u8bfb"},{"location":"db/mysql/mysql/#_10","text":"\u4e00\u4e2a\u4e8b\u52a1\u5728\u591a\u6b21\u8bfb\u53d6\u8868\u4e2d\u4e00\u884c\u6570\u636e\uff0c\u591a\u6b21\u8bfb\u53d6\u7ed3\u679c\u4e0d\u540c\u3002\uff08\u4e0d\u4e00\u5b9a\u4e0d\u5bf9\uff0c\u4e0d\u662f\u9519\u8bef\uff09","title":"\u4e0d\u53ef\u91cd\u590d\u5ea6"},{"location":"db/mysql/mysql/#_11","text":"\u5728\u4e00\u4e2a\u4e8b\u52a1\u91cc\u8bfb\u53d6\u5230\u4e86\u522b\u7684\u4e8b\u52a1\u63d2\u5165\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u524d\u540e\u8bfb\u53d6\u4e0d\u4e00\u81f4\u3002","title":"\u5e7b\u8bfb"},{"location":"db/mysql/mysql/#63","text":"\u6267\u884c\u4e8b\u52a1 -- mysql\u662f\u9ed8\u8ba4\u6253\u5f00\u4e8b\u52a1\u7684 -- \u624b\u52a8\u5904\u7406\u4e8b\u52a1 set autocommit = 0 ; -- \u5173\u95ed -- \u4e8b\u52a1\u5f00\u542f start transaction ; -- \u63d0\u4ea4 commit ; -- \u56de\u6eda rollback ; set autocommit = 1 ; -- \u5f00\u542f -- savepoint ; -- \u8bbe\u7f6e\u4e00\u4e2a\u4e8b\u52a1\u7684\u4fdd\u5b58\u70b9 rollback to savepoint ; -- \u56de\u6eda\u4fdd\u5b58\u70b9 release savepoint ; -- \u5220\u9664\u4fdd\u5b58\u70b9 -- drop database shop ; create database shop char set utf8 collate utf8_general_ci ; use shop ; CREATE TABLE ` account ` ( ` id ` int NOT NULL AUTO_INCREMENT , ` name ` varchar ( 30 ) NOT NULL , ` money ` decimal ( 9 , 2 ) NOT NULL , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb3 show create table account insert into account ( name , money ) values ( 'qiuqiu' , 90000 ); update account set money = 2000 . 00 where id = 1 ; insert into account ( name , money ) values ( 'zhuzhu' , 10000 . 00 ); -- \u6a21\u62df\u8f6c\u8d26 set autocommit = 0 ; start transaction ; update account set money = money - 500 where name = 'qiuqiu' ; update account set money = money + 500 where name = 'zhuzhu' ; COMMIT ; -- \u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u5c31\u4f1a\u88ab\u88ab\u6301\u4e45\u5316 rollback ; set autocommit = 1 ;","title":"6.3 \u6267\u884c\u4e8b\u52a1"},{"location":"db/mysql/mysql/#7","text":"","title":"7.\u7d22\u5f15"},{"location":"db/mysql/mysql/#71","text":"\u7d22\u5f15\u662f\u5e2e\u52a9mysql\u9ad8\u6548\u83b7\u53d6\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\u3002 codinglabs mysql\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u8ba1\u53ca\u7b97\u6cd5\u539f\u7406 \u4e3b\u952e\u7d22\u5f15 primary key \u552f\u4e00\u6807\u8bc6\uff0c\u4e3b\u952e\u4e0d\u53ef\u91cd\u590d \u552f\u4e00\u7d22\u5f15 unique key \u907f\u514d\u91cd\u590d\u7684\u5217\uff0c\u552f\u4e00\u53ef\u4ee5\u91cd\u590d\uff0c\u591a\u4e2a\u5217\u90fd\u53ef\u4ee5\u90fd\u53ef\u53ef\u4ee5\u4e3a\u552f\u4e00\u7d22\u5f15\u3002 \u5e38\u89c4\u7d22\u5f15 key \u9ed8\u8ba4\u7684\uff0cindex\u6216\u8005key\u5173\u952e\u5b57\u6765\u8bbe\u7f6e \u5168\u6587\u7d22\u5f15 fulltext \u5feb\u901f\u5b9a\u4f4d\u7d22\u5f15 -- \u7d22\u5f15\u4f7f\u7528 -- 1\u3002\u5728\u521b\u5efa\u65f6\u589e\u52a0 -- 2\u3002\u5728\u521b\u5efa\u5b8c\u6210\u540e\u901a\u8fc7alter\u64cd\u4f5c\u8868\u52a0\u5165 use school ; show indexes from student ; -- \u589e\u52a0\u4e00\u4e2a\u7f29\u5f71 alter table school . student add fulltext index studentname1 ( studentname ); -- \u5220\u9664\u4e00\u4e2a\u7f29\u5f71 alter table school . student drop key studentname1 ; -- explain \u5206\u6790sql\u6267\u884c\u72b6\u6001 explain select * from student ; explain select * from student where match ( studentname ) against ( '\u5f20\u4f1f' );","title":"7.1 \u7d22\u5f15\u7684\u5206\u7c7b"},{"location":"db/mysql/mysql/#72","text":"-- \u521b\u5efa\u7528\u6237\u8868 CREATE TABLE ` app_user ` ( ` id ` bigint unsigned NOT NULL AUTO_INCREMENT , ` name ` varchar ( 50 ) DEFAULT '' COMMENT 'name' , ` email ` varchar ( 50 ) NOT NULL COMMENT 'mail' , ` phone ` varchar ( 20 ) DEFAULT '' , ` gender ` tinyint unsigned DEFAULT '0' , ` password ` varchar ( 100 ) NOT NULL , ` age ` tinyint DEFAULT '0' , ` create_time ` datetime DEFAULT CURRENT_TIMESTAMP , ` update_time ` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ; \u63d2\u5165\u6570\u636e -- \u63d2\u5165\u4e00\u767e\u4e07\u6761\u6570\u636e delimiter $$ -- \u5199\u5165\u51fd\u6570 create function mock_data () returns int begin declare num int default 1000000 ; declare i int default 0 ; while i < num do -- \u63d2\u5165\u8bed\u53e5 insert into app_user ( name , email , phone , gender , password , age ) values ( concat ( 'user' , i ), '123@qq.com' , concat ( '18' , floor ( rand () * (( 999999999 - 100000000 ) + 100000000 ))), floor ( rand () * 2 ), uuid (), rand () * 100 ); set i = i + 1 ; end while ; return i ; end ; select mock_data (); explain select * from app_user where name = 'user9999' ; -- 993261rows 1 s 156 ms explain select * from app_user where name = 'user999999' ; -- 993261 1 s 156 ms select * from student ; -- 24 ms drop index id_app_user_name on app_user ; create index id_app_user_name on app_user ( name ); alter table app_user add index id_app_user_name ( name ); explain select * from app_user where name = 'user9999' ; -- 27ms 1rows explain select age as age from app_user order by age desc limit 1 offset 2 ; \u5efa\u7acb\u7d22\u5f15\u80fd\u591f\u6781\u5927\u7684\u7f29\u77ed\u67e5\u8be2\u65f6\u95f4 \u9700\u8981\u5efa\u7acb\u5728\u5f88\u5c11\u4fee\u6539\u7684\u5b57\u6bb5\u4e0a\u3002","title":"7.2\u6d4b\u8bd5\u7d22\u5f15"},{"location":"db/mysql/mysql/#73","text":"\u4e0d\u8981\u5bf9\u7ecf\u5e38\u53d8\u52a8\u7684\u6570\u636e\u5efa\u7d22\u5f15 \u7d22\u5f15\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d \u7d22\u5f15\u4e00\u822c\u5efa\u7acb\u5728\u7ecf\u5e38 \u67e5\u8be2\u7684\u6570\u636e\u4e0a\u3002 \u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784 btree\uff1a Innodb hash \u8ba4\u771f\u8bfb\uff1a https://blog.codinglabs.org/articles/theory-of-mysql-index.html","title":"7.3\u7d22\u5f15\u539f\u5219"},{"location":"db/mysql/mysql/#8","text":"","title":"8.\u6743\u9650\u7ba1\u7406"},{"location":"db/mysql/mysql/#81","text":"\u7528\u6237\u8868\uff1amysql.user \u5bf9\u8fd9\u5f20\u8868\u8fdb\u884c\u589e\u5220\u6539\u67e5\uff0c create user cc_test identified by '123456' ; set password = PASSWORD ( '123456' ); set password for cc_test = PASSWORD ( '123456' ); rename user cc_test to cc_test2 ; -- grant all privileges on * . * to cc_test2 ; show grants for cc_test2 show grants for root ; revoke all privileges on * . * form cc_test2 ; drop user cc_test ;","title":"8.1\u7528\u6237\u7ba1\u7406"},{"location":"db/mysql/mysql/#82","text":"\u4e3a\u4ec0\u4e48\u8981\u5907\u4efd\uff0c\uff1a \u9632\u6b62\u6570\u636e\u4e22\u5931 \u6570\u636e\u4e13\u4e1a \u6570\u636e\u5e93\u5907\u4efd\u65b9\u5f0f\uff1a \u62f7\u8d1d\u7269\u7406\u6587\u4ef6 \u53ef\u89c6\u5316\u5de5\u5177\u8fdb\u884c\u5907\u4efd\u548c\u5bfc\u51fa \u547d\u4ee4\u884c > mysqldump -h hostname -u root -p password database_name table_name > **.sql # \u5012\u5165\u5907\u4efd\u6587\u4ef6 soucre path_sql.sql # mysql","title":"8.2\u6570\u636e\u5e93\u5907\u4efd"},{"location":"db/mysql/mysql/#9","text":"","title":"9.\u6570\u636e\u5e93\u8bbe\u8ba1"},{"location":"db/mysql/mysql/#91","text":"\u7cdf\u7cd5\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\uff1a \u6570\u636e\u6bb5\u91cd\u590d\uff0c\u5197\u4f59 \u6570\u636e\u5e93\u63d2\u5165\u548c\u5220\u9664\u4ea7\u751f\u5f02\u5e38\u3002\u3010\u5c4f\u853d\u4f7f\u7528\u5916\u952e\u3011 \u7a0b\u5e8f\u6027\u80fd\u5dee \u826f\u597d\u7684\u6570\u636e\u5e93\u8bbe\u8ba1 \u5b58\u50a8\u4e2d\u7a7a\u95f4 \u4fdd\u8bc1\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027 \u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5173\u4e8e\u6570\u636e\u5e93\u7684\u8bbe\u8ba1 \uff1a \u5206\u6790\u9700\u6c42\uff1a \u5206\u6790\u4e1a\u52a1\u548c\u9700\u6c42\u5904\u7406\u7684\u6570\u636e\u5e93\u7684\u7ee3\u7403 \u6982\u8981\u65f6\u95f4\uff1a\u8bbe\u8ba1\u5173\u7cfb\u56feE-R\u56fe \u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u5e93 \uff1a\u4e00\u4e2a\u535a\u5ba2 \u8868 \u7528\u6237\u8868 \u5206\u7c7b\u8868\uff08\u6587\u7ae0\u5206\u7c7b\uff0c\u521b\u5efa\u8005\uff09 \u6587\u7ae0\u8868\uff08\u6587\u7ae0\u4fe1\u606f\uff09 \u53cb\u94fe\u8868 \u6807\u8bc6\u5b9e\u4f53\u7c7b","title":"9.1\u8bbe\u8ba1\u6570\u636e\u5e93"},{"location":"db/mysql/mysql/#92","text":"\u4e09\u5927\u8303\u5f0f","title":"9.2 \u4e09\u5927\u8303\u5f0f"},{"location":"db/mysql/mysql/#_12","text":"\u6570\u636e\u8868\u7684\u6bcf\u4e00\u5217\u90fd\u662f\u4e0d\u53ef\u5206\u5272\u7684\u539f\u5b50\u6570\u636e\u9879","title":"\u7b2c\u4e00\u8303\u5f0f"},{"location":"db/mysql/mysql/#_13","text":"\u524d\u63d0\uff1a\u6ee1\u8db3\u7b2c\u4e00\u8303\u5f0f\uff0c \u5c5e\u6027\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c \u6bcf\u4e00\u5f20\u6570\u636e\u8868\u53ea\u63cf\u8ff0\u4e00\u4ef6\u4e8b\u60c5","title":"\u7b2c\u4e8c\u8303\u5f0f"},{"location":"db/mysql/mysql/#_14","text":"\u524d\u63d0\uff1a\u6ee1\u8db3\u7b2c\u4e00\u8303\u5f0f\uff0c\u548c\u7b2c\u4e8c\u8303\u5f0f \u6d88\u9664\u4f9d\u8d56\u548c\u4f20\u9012\u6027 \uff0c\u5c5e\u6027\u4e4b\u95f4\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u975e\u4e3b\u5c5e\u6027","title":"\u7b2c\u4e09\u8303\u5f0f"},{"location":"db/mysql/mysql/#_15","text":"\u5173\u8054\u67e5\u8be2\u7684\u8868\u4e0d\u53ef\u4ee5\u8d85\u8fc7\u4e09\u5f20 \u8003\u8651\u5230\u4f53\u9a8c\u3001\u76ee\u6807\u4ee5\u53ca\u9700\u6c42\uff0c\u6027\u80fd\u66f4\u52a0\u91cd\u8981 \u5197\u4f59\u5b57\u6bb5\u80fd\u591f\u51cf\u5c11\u67e5\u8be2\uff0c\u63d0\u9ad8\u6027\u80fd \u5728\u4fdd\u8bc1\u6027\u80fd\u7684\u524d\u63d0\u4e0b\uff0c\u9002\u5f53\u8003\u8651\u89c4\u8303\u6027 \u589e\u52a0\u8ba1\u7b97\u5217\uff0c\u5927\u6570\u636e\u91cf\u51cf\u5c11\u5230\u5c0f\u6570\u636e\u91cf\u3002","title":"\u5e73\u8861\u89c4\u8303\u4e8e\u6027\u80fd\u4e4b\u95f4\u7684\u95ee\u9898"},{"location":"db/mysql/mysql/#10","text":"","title":"10\u5176\u4ed6"},{"location":"db/mysql/mysql/#sql","text":"web\u5e94\u7528\u6ca1\u6709\u5bf9\u7528\u6237\u8f93\u5165\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5728\u4e8b\u5148\u540e\u7aef\u7a0b\u5e8f\u4e2d\u7684sql\u4e2d\u63d2\u5165sql\u8bed\u53e5\u6765\u6267\u884c\u975e\u6cd5\u7684\u64cd\u4f5c\u3002 -- before select * from users where name = a and pwd = 1123 ; -- after select * from users where name = a or 1 = 1 and pwd = 123 or 1 = 1 ; \u4f7f\u7528\u9884\u7f16\u8bd1\u3001\u4ee5\u53ca\u5bf9\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u8fc7\u6ee4\u7b49\u65b9\u5f0f\u6765\u8fdb\u884c\u5e94\u5bf9\u3002","title":"sql\u6ce8\u5165"},{"location":"db/redis/lock/","text":"redis \u5b9e\u73b0\u5206\u5e03\u5f0f\u9501 \u5206\u5e03\u5f0f\u9501 \u4e3a\u4e86\u786e\u4fdd\u670d\u52a1\u7684\u65e0\u72b6\u6001\uff0c\u9700\u8981\u5c06\u72b6\u6001\u4fe1\u606f\uff0c\u8fdb\u884c\u5171\u4eab\u3002Redis\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\u3002\u4f46\u662f\u7531\u4e8e\u670d\u52a1\u7684\u5e76\u53d1\u8bbf\u95ee\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u5c31\u5f88\u5173\u952e\u3002\u672c\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0c\u4ee5\u53ca\u5206\u6790\u4e86\u5206\u5e03\u5f0f\u9501\u5e38\u89c1\u7684\u95ee\u9898\u3002 \u672c\u6587\u8f6c\u8f7d\u81ea \u5c0f\u7c73\u7cfb\u4fe1\u606f\u90e8\u6280\u672f\u56e2\u961f 1 1. intro \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u7ef4\u62a4\u670d\u52a1\u72b6\u6001\u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u628a\u4e00\u4e9b\u6570\u636e\u653e\u7f6e\u5728redis\u4e2d\u8fdb\u884c\u5171\u4eab\u548c\u540c\u6b65\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u591a\u4e2a\u670d\u52a1\uff0c\u540c\u65f6\u5bf9\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u65e0\u6cd5\u786e\u4fdd\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002 \u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5206\u5e03\u5f0f\u9501\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002 2.Implement Redis\u9501\u9700\u8981\u5229\u7528\u5230Redis\u7684 setnx \u547d\u4ee4\uff0cset if not exist\u3002 \u52a0\u9501\uff1a SETNX key value \uff0c\u5f53\u952e\u4e0d\u5b58\u5728\u65f6\uff0c\u5bf9\u952e\u8fdb\u884c\u8bbe\u7f6e\u64cd\u4f5c\u5e76\u8fd4\u56de\u6210\u529f\uff0c\u5426\u5219\u8fd4\u56de\u5931\u8d25\u3002KEY \u662f\u9501\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4e00\u822c\u6309\u4e1a\u52a1\u6765\u51b3\u5b9a\u547d\u540d\u3002 \u91ca\u653e\u9501\uff1a DEL key \uff0c\u901a\u8fc7\u5220\u9664\u952e\u503c\u5bf9\u91ca\u653e\u9501\uff0c\u4ee5\u4fbf\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u901a\u8fc7 SETNX \u547d\u4ee4\u6765\u83b7\u53d6\u9501\u3002 \u9501\u8d85\u65f6\uff1a EXPIRE key timeout , \u8bbe\u7f6e key \u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u4fdd\u8bc1\u5373\u4f7f\u9501\u6ca1\u6709\u88ab\u663e\u5f0f\u91ca\u653e\uff0c\u9501\u4e5f\u53ef\u4ee5\u5728\u4e00\u5b9a\u65f6\u95f4\u540e\u81ea\u52a8\u91ca\u653e\uff0c\u907f\u514d\u8d44\u6e90\u88ab\u6c38\u8fdc\u9501\u4f4f\u3002 func sync (){ if setnx ( key , 1 ) == 1 { expire ( key , 30 s ) ... do () ... del ( key ) } } \u4f46\u662f\u8fd9\u6837\u7684\u65b9\u5f0f\u5b58\u5728\u4e00\u5b9a\u7684\u95ee\u9898\uff1a 2.1 SETNX \u548c EXPIRE \u975e\u539f\u5b50\u6027 \u5982\u679c\u8bbe\u7f6e\u9501\u6210\u529f\uff0c\u4f46\u662f\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u5931\u8d25\uff08\u53ef\u80fd\u662f\u7f51\u7edc\u3001\u6216\u8005\u670d\u52a1\u5668\u6545\u969c\u5bfc\u81f4\uff09\uff0c\u9501\u65e0\u6cd5\u88ab\u91ca\u653e\uff0c\u53d8\u6210\u6b7b\u9501\u3002 \u6240\u4ee5\uff0c\u9700\u8981\u786e\u4fdd\u64cd\u4f5c\u65f6\u539f\u5b50\u6027\u7684\u3002\u4f7f\u7528 lua \u811a\u672c\u6765\u786e\u4fdd\u539f\u5b50\u6027\u3002 if ( redis . call ( 'setnx' , KEYS [ 1 ], ARGV [ 1 ]) < 1 ) then return 0 ; end ; redis . call ( 'expire' , KEYS [ 1 ], tonumber ( ARGV [ 2 ])); return 1 ; // \u4f7f\u7528\u5b9e\u4f8b EVAL \"if (redis.call('setnx',KEYS[1],ARGV[1]) < 1) then return 0; end; redis.call('expire',KEYS[1],tonumber(ARGV[2])); return 1;\" 1 key value 100 2.2 \u9501\u8bef\u63a5\u89e6 \u5982\u679c\u7ebf\u7a0b A \u6210\u529f\u83b7\u53d6\u5230\u4e86\u9501\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4 30 \u79d2\uff0c\u4f46\u7ebf\u7a0b A \u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u4e86 30 \u79d2\uff0c\u9501\u8fc7\u671f\u81ea\u52a8\u91ca\u653e\uff0c\u6b64\u65f6\u7ebf\u7a0b B \u83b7\u53d6\u5230\u4e86\u9501\uff1b\u968f\u540e A \u6267\u884c\u5b8c\u6210\uff0c\u7ebf\u7a0b A \u4f7f\u7528 DEL \u547d\u4ee4\u6765\u91ca\u653e\u9501\uff0c\u4f46\u6b64\u65f6\u7ebf\u7a0b B \u52a0\u7684\u9501\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u6210\uff0c\u7ebf\u7a0b A \u5b9e\u9645\u91ca\u653e\u7684\u7ebf\u7a0b B \u52a0\u7684\u9501\u3002 \u901a\u8fc7\u5728 value \u4e2d\u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u52a0\u9501\u7684\u6807\u8bc6\uff0c\u5728\u5220\u9664\u4e4b\u524d\u9a8c\u8bc1 key \u5bf9\u5e94\u7684 value \u5224\u65ad\u9501\u662f\u5426\u662f\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u3002\u53ef\u751f\u6210\u4e00\u4e2a UUID \u6807\u8bc6\u5f53\u524d\u7ebf\u7a0b\uff0c\u4f7f\u7528 lua \u811a\u672c\u505a\u9a8c\u8bc1\u6807\u8bc6\u548c\u89e3\u9501\u64cd\u4f5c\u3002 // \u52a0\u9501 String uuid = UUID . randomUUID (). toString (). replaceAll ( \"-\" , \"\" ); SET key uuid NX EX 30 // \u89e3\u9501 if ( redis . call ( 'get' , KEYS [ 1 ]) == ARGV [ 1 ]) then return redis . call ( 'del' , KEYS [ 1 ]) else return 0 end 2.3 \u8d85\u65f6\u89e3\u9501\u5bfc\u81f4\u5e76\u53d1 \u5982\u679c\u7ebf\u7a0b A \u6210\u529f\u83b7\u53d6\u9501\u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4 30 \u79d2\uff0c\u4f46\u7ebf\u7a0b A \u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u4e86 30 \u79d2\uff0c\u9501\u8fc7\u671f\u81ea\u52a8\u91ca\u653e\uff0c\u6b64\u65f6\u7ebf\u7a0b B \u83b7\u53d6\u5230\u4e86\u9501\uff0c\u7ebf\u7a0b A \u548c\u7ebf\u7a0b B \u5e76\u53d1\u6267\u884c\u3002 A\u3001B \u4e24\u4e2a\u7ebf\u7a0b\u53d1\u751f\u5e76\u53d1\u663e\u7136\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\uff0c\u4e00\u822c\u6709\u4e24\u79cd\u65b9\u5f0f\u89e3\u51b3\u8be5\u95ee\u9898\uff1a \u5c06\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u8db3\u591f\u957f\uff0c\u786e\u4fdd\u4ee3\u7801\u903b\u8f91\u5728\u9501\u91ca\u653e\u4e4b\u524d\u80fd\u591f\u6267\u884c\u5b8c\u6210\u3002 \u4e3a\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u589e\u52a0\u5b88\u62a4\u7ebf\u7a0b\uff0c\u4e3a\u5c06\u8981\u8fc7\u671f\u4f46\u672a\u91ca\u653e\u7684\u9501\u589e\u52a0\u6709\u6548\u65f6\u95f4\u3002 2.4 \u4e0d\u53ef\u91cd\u5165 \u5f53\u7ebf\u7a0b\u5728\u6301\u6709\u9501\u7684\u60c5\u51b5\u4e0b\u518d\u6b21\u8bf7\u6c42\u52a0\u9501\uff0c\u5982\u679c\u4e00\u4e2a\u9501\u652f\u6301\u4e00\u4e2a\u7ebf\u7a0b\u591a\u6b21\u52a0\u9501\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9501\u5c31\u662f\u53ef\u91cd\u5165\u7684\u3002\u5982\u679c\u4e00\u4e2a\u4e0d\u53ef\u91cd\u5165\u9501\u88ab\u518d\u6b21\u52a0\u9501\uff0c\u7531\u4e8e\u8be5\u9501\u5df2\u7ecf\u88ab\u6301\u6709\uff0c\u518d\u6b21\u52a0\u9501\u4f1a\u5931\u8d25\u3002Redis \u53ef\u901a\u8fc7\u5bf9\u9501\u8fdb\u884c\u91cd\u5165\u8ba1\u6570\uff0c\u52a0\u9501\u65f6\u52a0 1\uff0c\u89e3\u9501\u65f6\u51cf 1\uff0c\u5f53\u8ba1\u6570\u5f52 0 \u65f6\u91ca\u653e\u9501\u3002 2.5 \u65e0\u6cd5\u7b49\u5f85-\u9501\u91ca\u653e \u5982\u679c\u670d\u52a1\u5668\u65e0\u6cd5\u7b49\u5f85\u9501\u91ca\u653e\u7684\u95ee\u9898\u901a\u8fc7\u4e24\u4e2a\u65b9\u5f0f\u6765\u89e3\u51b3\uff1a \u670d\u52a1\u5668\u5bf9redis\u8fdb\u884c\u8f6e\u8be2\uff0c\u76f4\u5230\u80fd\u591f\u83b7\u5f97\u9501\u3002\u4f46\u662f\u8fd9\u6837\u505a\u7684\u7f3a\u70b9\u662f\uff0c\u8f6e\u8be2\u5bfc\u81f4\u670d\u52a1\u5668\u8d44\u6e90\u6d88\u8017\uff0c\u5e76\u53d1\u91cf\u5927\u7684\u65f6\u5019\uff0c\u5f71\u54cd\u670d\u52a1\u5668\u6548\u7387 \u5229\u7528Redis\u53d1\u5e03\u8ba2\u9605\u7684\u529f\u80fd\uff0c\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25\u540e\uff0c\u5bf9\u9501\u6d88\u606f\u8fdb\u884c\u8ba2\u9605\u3002 \u53c2\u8003\u539f\u6587\uff1a https://xiaomi-info.github.io/2019/12/17/redis-distributed-lock/ \u21a9","title":"Redis\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u9501"},{"location":"db/redis/lock/#redis","text":"\u5206\u5e03\u5f0f\u9501 \u4e3a\u4e86\u786e\u4fdd\u670d\u52a1\u7684\u65e0\u72b6\u6001\uff0c\u9700\u8981\u5c06\u72b6\u6001\u4fe1\u606f\uff0c\u8fdb\u884c\u5171\u4eab\u3002Redis\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\u3002\u4f46\u662f\u7531\u4e8e\u670d\u52a1\u7684\u5e76\u53d1\u8bbf\u95ee\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u5c31\u5f88\u5173\u952e\u3002\u672c\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0c\u4ee5\u53ca\u5206\u6790\u4e86\u5206\u5e03\u5f0f\u9501\u5e38\u89c1\u7684\u95ee\u9898\u3002 \u672c\u6587\u8f6c\u8f7d\u81ea \u5c0f\u7c73\u7cfb\u4fe1\u606f\u90e8\u6280\u672f\u56e2\u961f 1","title":"redis \u5b9e\u73b0\u5206\u5e03\u5f0f\u9501"},{"location":"db/redis/lock/#1-intro","text":"\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u7ef4\u62a4\u670d\u52a1\u72b6\u6001\u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u628a\u4e00\u4e9b\u6570\u636e\u653e\u7f6e\u5728redis\u4e2d\u8fdb\u884c\u5171\u4eab\u548c\u540c\u6b65\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u591a\u4e2a\u670d\u52a1\uff0c\u540c\u65f6\u5bf9\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u65e0\u6cd5\u786e\u4fdd\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002 \u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5206\u5e03\u5f0f\u9501\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002","title":"1. intro"},{"location":"db/redis/lock/#2implement","text":"Redis\u9501\u9700\u8981\u5229\u7528\u5230Redis\u7684 setnx \u547d\u4ee4\uff0cset if not exist\u3002 \u52a0\u9501\uff1a SETNX key value \uff0c\u5f53\u952e\u4e0d\u5b58\u5728\u65f6\uff0c\u5bf9\u952e\u8fdb\u884c\u8bbe\u7f6e\u64cd\u4f5c\u5e76\u8fd4\u56de\u6210\u529f\uff0c\u5426\u5219\u8fd4\u56de\u5931\u8d25\u3002KEY \u662f\u9501\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4e00\u822c\u6309\u4e1a\u52a1\u6765\u51b3\u5b9a\u547d\u540d\u3002 \u91ca\u653e\u9501\uff1a DEL key \uff0c\u901a\u8fc7\u5220\u9664\u952e\u503c\u5bf9\u91ca\u653e\u9501\uff0c\u4ee5\u4fbf\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u901a\u8fc7 SETNX \u547d\u4ee4\u6765\u83b7\u53d6\u9501\u3002 \u9501\u8d85\u65f6\uff1a EXPIRE key timeout , \u8bbe\u7f6e key \u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u4fdd\u8bc1\u5373\u4f7f\u9501\u6ca1\u6709\u88ab\u663e\u5f0f\u91ca\u653e\uff0c\u9501\u4e5f\u53ef\u4ee5\u5728\u4e00\u5b9a\u65f6\u95f4\u540e\u81ea\u52a8\u91ca\u653e\uff0c\u907f\u514d\u8d44\u6e90\u88ab\u6c38\u8fdc\u9501\u4f4f\u3002 func sync (){ if setnx ( key , 1 ) == 1 { expire ( key , 30 s ) ... do () ... del ( key ) } } \u4f46\u662f\u8fd9\u6837\u7684\u65b9\u5f0f\u5b58\u5728\u4e00\u5b9a\u7684\u95ee\u9898\uff1a","title":"2.Implement"},{"location":"db/redis/lock/#21-setnx-expire","text":"\u5982\u679c\u8bbe\u7f6e\u9501\u6210\u529f\uff0c\u4f46\u662f\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u5931\u8d25\uff08\u53ef\u80fd\u662f\u7f51\u7edc\u3001\u6216\u8005\u670d\u52a1\u5668\u6545\u969c\u5bfc\u81f4\uff09\uff0c\u9501\u65e0\u6cd5\u88ab\u91ca\u653e\uff0c\u53d8\u6210\u6b7b\u9501\u3002 \u6240\u4ee5\uff0c\u9700\u8981\u786e\u4fdd\u64cd\u4f5c\u65f6\u539f\u5b50\u6027\u7684\u3002\u4f7f\u7528 lua \u811a\u672c\u6765\u786e\u4fdd\u539f\u5b50\u6027\u3002 if ( redis . call ( 'setnx' , KEYS [ 1 ], ARGV [ 1 ]) < 1 ) then return 0 ; end ; redis . call ( 'expire' , KEYS [ 1 ], tonumber ( ARGV [ 2 ])); return 1 ; // \u4f7f\u7528\u5b9e\u4f8b EVAL \"if (redis.call('setnx',KEYS[1],ARGV[1]) < 1) then return 0; end; redis.call('expire',KEYS[1],tonumber(ARGV[2])); return 1;\" 1 key value 100","title":"2.1 SETNX \u548c EXPIRE \u975e\u539f\u5b50\u6027"},{"location":"db/redis/lock/#22","text":"\u5982\u679c\u7ebf\u7a0b A \u6210\u529f\u83b7\u53d6\u5230\u4e86\u9501\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4 30 \u79d2\uff0c\u4f46\u7ebf\u7a0b A \u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u4e86 30 \u79d2\uff0c\u9501\u8fc7\u671f\u81ea\u52a8\u91ca\u653e\uff0c\u6b64\u65f6\u7ebf\u7a0b B \u83b7\u53d6\u5230\u4e86\u9501\uff1b\u968f\u540e A \u6267\u884c\u5b8c\u6210\uff0c\u7ebf\u7a0b A \u4f7f\u7528 DEL \u547d\u4ee4\u6765\u91ca\u653e\u9501\uff0c\u4f46\u6b64\u65f6\u7ebf\u7a0b B \u52a0\u7684\u9501\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u6210\uff0c\u7ebf\u7a0b A \u5b9e\u9645\u91ca\u653e\u7684\u7ebf\u7a0b B \u52a0\u7684\u9501\u3002 \u901a\u8fc7\u5728 value \u4e2d\u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u52a0\u9501\u7684\u6807\u8bc6\uff0c\u5728\u5220\u9664\u4e4b\u524d\u9a8c\u8bc1 key \u5bf9\u5e94\u7684 value \u5224\u65ad\u9501\u662f\u5426\u662f\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u3002\u53ef\u751f\u6210\u4e00\u4e2a UUID \u6807\u8bc6\u5f53\u524d\u7ebf\u7a0b\uff0c\u4f7f\u7528 lua \u811a\u672c\u505a\u9a8c\u8bc1\u6807\u8bc6\u548c\u89e3\u9501\u64cd\u4f5c\u3002 // \u52a0\u9501 String uuid = UUID . randomUUID (). toString (). replaceAll ( \"-\" , \"\" ); SET key uuid NX EX 30 // \u89e3\u9501 if ( redis . call ( 'get' , KEYS [ 1 ]) == ARGV [ 1 ]) then return redis . call ( 'del' , KEYS [ 1 ]) else return 0 end","title":"2.2 \u9501\u8bef\u63a5\u89e6"},{"location":"db/redis/lock/#23","text":"\u5982\u679c\u7ebf\u7a0b A \u6210\u529f\u83b7\u53d6\u9501\u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4 30 \u79d2\uff0c\u4f46\u7ebf\u7a0b A \u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u4e86 30 \u79d2\uff0c\u9501\u8fc7\u671f\u81ea\u52a8\u91ca\u653e\uff0c\u6b64\u65f6\u7ebf\u7a0b B \u83b7\u53d6\u5230\u4e86\u9501\uff0c\u7ebf\u7a0b A \u548c\u7ebf\u7a0b B \u5e76\u53d1\u6267\u884c\u3002 A\u3001B \u4e24\u4e2a\u7ebf\u7a0b\u53d1\u751f\u5e76\u53d1\u663e\u7136\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\uff0c\u4e00\u822c\u6709\u4e24\u79cd\u65b9\u5f0f\u89e3\u51b3\u8be5\u95ee\u9898\uff1a \u5c06\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u8db3\u591f\u957f\uff0c\u786e\u4fdd\u4ee3\u7801\u903b\u8f91\u5728\u9501\u91ca\u653e\u4e4b\u524d\u80fd\u591f\u6267\u884c\u5b8c\u6210\u3002 \u4e3a\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u589e\u52a0\u5b88\u62a4\u7ebf\u7a0b\uff0c\u4e3a\u5c06\u8981\u8fc7\u671f\u4f46\u672a\u91ca\u653e\u7684\u9501\u589e\u52a0\u6709\u6548\u65f6\u95f4\u3002","title":"2.3 \u8d85\u65f6\u89e3\u9501\u5bfc\u81f4\u5e76\u53d1"},{"location":"db/redis/lock/#24","text":"\u5f53\u7ebf\u7a0b\u5728\u6301\u6709\u9501\u7684\u60c5\u51b5\u4e0b\u518d\u6b21\u8bf7\u6c42\u52a0\u9501\uff0c\u5982\u679c\u4e00\u4e2a\u9501\u652f\u6301\u4e00\u4e2a\u7ebf\u7a0b\u591a\u6b21\u52a0\u9501\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9501\u5c31\u662f\u53ef\u91cd\u5165\u7684\u3002\u5982\u679c\u4e00\u4e2a\u4e0d\u53ef\u91cd\u5165\u9501\u88ab\u518d\u6b21\u52a0\u9501\uff0c\u7531\u4e8e\u8be5\u9501\u5df2\u7ecf\u88ab\u6301\u6709\uff0c\u518d\u6b21\u52a0\u9501\u4f1a\u5931\u8d25\u3002Redis \u53ef\u901a\u8fc7\u5bf9\u9501\u8fdb\u884c\u91cd\u5165\u8ba1\u6570\uff0c\u52a0\u9501\u65f6\u52a0 1\uff0c\u89e3\u9501\u65f6\u51cf 1\uff0c\u5f53\u8ba1\u6570\u5f52 0 \u65f6\u91ca\u653e\u9501\u3002","title":"2.4  \u4e0d\u53ef\u91cd\u5165"},{"location":"db/redis/lock/#25-","text":"\u5982\u679c\u670d\u52a1\u5668\u65e0\u6cd5\u7b49\u5f85\u9501\u91ca\u653e\u7684\u95ee\u9898\u901a\u8fc7\u4e24\u4e2a\u65b9\u5f0f\u6765\u89e3\u51b3\uff1a \u670d\u52a1\u5668\u5bf9redis\u8fdb\u884c\u8f6e\u8be2\uff0c\u76f4\u5230\u80fd\u591f\u83b7\u5f97\u9501\u3002\u4f46\u662f\u8fd9\u6837\u505a\u7684\u7f3a\u70b9\u662f\uff0c\u8f6e\u8be2\u5bfc\u81f4\u670d\u52a1\u5668\u8d44\u6e90\u6d88\u8017\uff0c\u5e76\u53d1\u91cf\u5927\u7684\u65f6\u5019\uff0c\u5f71\u54cd\u670d\u52a1\u5668\u6548\u7387 \u5229\u7528Redis\u53d1\u5e03\u8ba2\u9605\u7684\u529f\u80fd\uff0c\u5982\u679c\u83b7\u53d6\u9501\u5931\u8d25\u540e\uff0c\u5bf9\u9501\u6d88\u606f\u8fdb\u884c\u8ba2\u9605\u3002 \u53c2\u8003\u539f\u6587\uff1a https://xiaomi-info.github.io/2019/12/17/redis-distributed-lock/ \u21a9","title":"2.5 \u65e0\u6cd5\u7b49\u5f85-\u9501\u91ca\u653e"},{"location":"maybe/maybe/","text":"\u6216\u8bb8\u4f60\u4e5f\u9700\u8981\u8fd9\u6837\u7684\u7ad9\u70b9 \u5341\u5206\u949f\u5feb\u901f\u642d\u5efa \u914d\u7f6emkdocs \u6301\u7eed\u96c6\u6210&\u90e8\u7f72 \u90e8\u7f72\u5230\u670d\u52a1\u5668 \u90e8\u7f72\u5230GitHub Pages \u90e8\u7f72\u5230\u5bf9\u8c61\u5b58\u50a8 \u914d\u7f6emkdoc \u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5199\u7684\u5f88\u8be6\u7ec6\uff0c\u5177\u4f53\u7684\u5185\u5bb9\u6211\u4e5f\u4e0d\u5199\u4e86\u3002 \u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u4ee5\u53ca\u914d\u7f6e\u4e3b\u9898\u3002 https://blog.keybrl.com/professional-2018-05-19-mkdocs-blog/ \u81ea\u52a8\u90e8\u7f72 \u53c2\u8003\u8fd9\u4e00\u7bc7\u6587\u7ae0\uff0c\u63d0\u4f9b\u4e86\u81ea\u52a8\u90e8\u7f72\u5230GitHub Pages\u65b9\u6cd5\u3002 https://www.ixiqin.com/2021/01/how-to-use-a-lot-action-automatically-deploy-mkdocs/ \u9644\u4ef6 \u5230\u8fd9\u91cc\u4f60\u5df2\u7ecf\u62e5\u6709\u4e86\u8fd9\u6837\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7Github Action\u81ea\u52a8\u90e8\u7f72\u3002 \u540c\u65f6\u4f60\u4e5f\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u914d\u7f6e\u6765\u8bbe\u7f6e\u4f60\u559c\u6b22\u7684\u6837\u5f0f\uff0c\u6dfb\u52a0\u4f60\u9700\u8981\u7684\u529f\u80fd\u3002 \u89c1\u4ee5\u4e0b\u914d\u7f6e\u6587\u4ef6 1 site_name : Qiu's doc space site_author : Qiu(aschenmaker) site_url : https://docs.cqs.es # Repository repo_name : 'aschenmaker/docs' repo_url : 'https://github.com/aschenmaker/docs' edit_uri : 'blob/master/docs/' # Copyright copyright : 'Copyright &copy; 2021 - 2022 aschenmaker' theme : name : 'material' language : 'zh' palette : - scheme : default primary : indigo accent : indigo toggle : icon : material/toggle-switch-off-outline name : Switch to dark mode - scheme : slate primary : blue accent : blue toggle : icon : material/toggle-switch name : Switch to light mode icon : logo : 'material/cloud' features : - navigation.sections - navigation.tabs - navigation.top - navigation.tracking - tabs font : text : 'Fira Sans' code : 'Fira Mono' remote_branch : gh-pages remote_name : origin extra : social : - icon : fontawesome/brands/github link : https://github.com/aschenmaker search : lang : - zh-CN tokenizer : '[\\s\\-\\.]+' disqus : 'costcost' copyright : 'CC BY-NC-SA 4.0' extra_javascript : - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' markdown_extensions : - admonition # \u6ce8\u89e3\u5757\u652f\u6301 - pymdownx.arithmatex # \u6570\u5b66\u516c\u5f0f\u7684TeX\u8bed\u6cd5\u652f\u6301 - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : # \u8868\u60c5\u652f\u6301 emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : # \u4efb\u52a1\u6e05\u5355\u652f\u6301 custom_checkbox : true - pymdownx.tilde - meta \u53ef\u80fd\u4e0d\u662f\u6700\u65b0\u7684\u5982\u679c\u9700\u8981\u5219\u67e5\u770b\u6211\u7684github\u4ed3\u5e93\uff0c\u66f4\u591a\u529f\u80fd\u8bbf\u95ee\u4e3b\u9898\u5bf9\u5e94\u7684\u6587\u6863\u53ef\u4ee5\u83b7\u5f97\u3002 \u21a9","title":"\u5341\u5206\u949f\u5feb\u901f\u521b\u5efamkdocs"},{"location":"maybe/maybe/#_1","text":"\u5341\u5206\u949f\u5feb\u901f\u642d\u5efa \u914d\u7f6emkdocs \u6301\u7eed\u96c6\u6210&\u90e8\u7f72 \u90e8\u7f72\u5230\u670d\u52a1\u5668 \u90e8\u7f72\u5230GitHub Pages \u90e8\u7f72\u5230\u5bf9\u8c61\u5b58\u50a8","title":"\u6216\u8bb8\u4f60\u4e5f\u9700\u8981\u8fd9\u6837\u7684\u7ad9\u70b9"},{"location":"maybe/maybe/#mkdoc","text":"\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5199\u7684\u5f88\u8be6\u7ec6\uff0c\u5177\u4f53\u7684\u5185\u5bb9\u6211\u4e5f\u4e0d\u5199\u4e86\u3002 \u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u4ee5\u53ca\u914d\u7f6e\u4e3b\u9898\u3002 https://blog.keybrl.com/professional-2018-05-19-mkdocs-blog/","title":"\u914d\u7f6emkdoc"},{"location":"maybe/maybe/#_2","text":"\u53c2\u8003\u8fd9\u4e00\u7bc7\u6587\u7ae0\uff0c\u63d0\u4f9b\u4e86\u81ea\u52a8\u90e8\u7f72\u5230GitHub Pages\u65b9\u6cd5\u3002 https://www.ixiqin.com/2021/01/how-to-use-a-lot-action-automatically-deploy-mkdocs/","title":"\u81ea\u52a8\u90e8\u7f72"},{"location":"maybe/maybe/#_3","text":"\u5230\u8fd9\u91cc\u4f60\u5df2\u7ecf\u62e5\u6709\u4e86\u8fd9\u6837\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7Github Action\u81ea\u52a8\u90e8\u7f72\u3002 \u540c\u65f6\u4f60\u4e5f\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u914d\u7f6e\u6765\u8bbe\u7f6e\u4f60\u559c\u6b22\u7684\u6837\u5f0f\uff0c\u6dfb\u52a0\u4f60\u9700\u8981\u7684\u529f\u80fd\u3002 \u89c1\u4ee5\u4e0b\u914d\u7f6e\u6587\u4ef6 1 site_name : Qiu's doc space site_author : Qiu(aschenmaker) site_url : https://docs.cqs.es # Repository repo_name : 'aschenmaker/docs' repo_url : 'https://github.com/aschenmaker/docs' edit_uri : 'blob/master/docs/' # Copyright copyright : 'Copyright &copy; 2021 - 2022 aschenmaker' theme : name : 'material' language : 'zh' palette : - scheme : default primary : indigo accent : indigo toggle : icon : material/toggle-switch-off-outline name : Switch to dark mode - scheme : slate primary : blue accent : blue toggle : icon : material/toggle-switch name : Switch to light mode icon : logo : 'material/cloud' features : - navigation.sections - navigation.tabs - navigation.top - navigation.tracking - tabs font : text : 'Fira Sans' code : 'Fira Mono' remote_branch : gh-pages remote_name : origin extra : social : - icon : fontawesome/brands/github link : https://github.com/aschenmaker search : lang : - zh-CN tokenizer : '[\\s\\-\\.]+' disqus : 'costcost' copyright : 'CC BY-NC-SA 4.0' extra_javascript : - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' markdown_extensions : - admonition # \u6ce8\u89e3\u5757\u652f\u6301 - pymdownx.arithmatex # \u6570\u5b66\u516c\u5f0f\u7684TeX\u8bed\u6cd5\u652f\u6301 - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : # \u8868\u60c5\u652f\u6301 emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : # \u4efb\u52a1\u6e05\u5355\u652f\u6301 custom_checkbox : true - pymdownx.tilde - meta \u53ef\u80fd\u4e0d\u662f\u6700\u65b0\u7684\u5982\u679c\u9700\u8981\u5219\u67e5\u770b\u6211\u7684github\u4ed3\u5e93\uff0c\u66f4\u591a\u529f\u80fd\u8bbf\u95ee\u4e3b\u9898\u5bf9\u5e94\u7684\u6587\u6863\u53ef\u4ee5\u83b7\u5f97\u3002 \u21a9","title":"\u9644\u4ef6"},{"location":"maybe/tocos/","text":"\u4f7f\u7528Github action \u540c\u65f6\u90e8\u7f72\u5230 Github Pages \u548c \u817e\u8baf\u4e91COS \u5728 .github/workflows \u521b\u5efaAction\u6587\u4ef6 \u90e8\u7f72\u5230Github Pages \u53c2\u8003\u8fd9\u4e00\u7bc7\u6587\u7ae0\uff0c\u63d0\u4f9b\u4e86\u81ea\u52a8\u90e8\u7f72\u5230GitHub Pages\u65b9\u6cd5\u3002 https://www.ixiqin.com/2021/01/how-to-use-a-lot-action-automatically-deploy-mkdocs/ \u521b\u5efa pulish_gh.yml name : Publish docs via GitHub Pages on : push : branches : - master jobs : build : name : Deploy docs runs-on : ubuntu-latest steps : - name : Checkout main uses : actions/checkout@v2 - name : Deploy docs uses : mhausenblas/mkdocs-deploy-gh-pages@master env : GITHUB_TOKEN : ${{ secrets.GH_TOKEN }} # \u9700\u8981\u83b7\u53d6github-token CONFIG_FILE : mkdocs.yml EXTRA_PACKAGES : build-base CUSTOM_DOMAIN : docs.cqs.es # \u5982\u679c\u81ea\u6709\u57df\u540d\u5219\u53ef\u8bbe\u7f6e \u90e8\u7f72\u5230Tencent COS \u89e3\u51b3\u8bbf\u95ee\u901f\u5ea6\u6162\u7684\u95ee\u9898 Github Pages\u65b9\u4fbf\u6613\u7528\uff0c\u4f46\u662f\u5728\u56fd\u5185\u8bbf\u95ee\u901f\u5ea6\u975e\u5e38\u6162\u3002 \u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a \u901a\u8fc7CDN\u52a0\u901f\u6e90\u7ad9\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528GitHub\u63d0\u4f9b\u7684IP\u5bf9\u7f51\u7ad9\u8fdb\u884c\u52a0\u901f\u3002 \u76f4\u63a5\u5c06\u9759\u6001\u6587\u4ef6\u63a8\u9001\u817e\u8baf\u4e91COS\u6216\u8005\u963f\u91cc\u4e91OSS\u4e0a\uff0c\u4f7f\u7528\u9759\u6001\u7f51\u7ad9\u8bbf\u95ee\u3002 \u6b64\u65b9\u6cd5\uff0c\u9700\u8981\u4f60\uff1a \u62e5\u6709\u81ea\u5df1\u7684\u5df2\u7ecf\u5907\u6848\u7684\u57df\u540d\uff0c \u5f00\u901a\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u6211\u4f7f\u7528\u7684\u662f\u817e\u8baf\u4e91\u7684COS\uff0c\u6240\u4f7f\u7528\u7684Github Action\u4e5f\u662f\u9762\u5411\u817e\u8baf\u4e91\u7684\u3002 \u540c\u6837\u521b\u5efa pulish_cos.yml name : Deploy to tencent osss on : push : branches : - master jobs : build : name : Deploy docs runs-on : ubuntu-latest steps : - name : Checkout main uses : actions/checkout@v2 - name : Deploy to tencent osss uses : aschenmaker/mkdocs-deploy-tencentcos@v0.1.0-release env : CONFIG_FILE : mkdocs.yml SECRET_ID : ${{ secrets.SECRET_ID }} SECRET_KEY : ${{ secrets.SECRET_KEY }} BUCKET : ${{ secrets.BUCKET }} REGION : ap-nanjing \u914d\u7f6e\u8be5GitHub Action \u9700\u8981\u817e\u8baf\u4e91\u5bf9\u5e94\u7684API SECRET\uff0c\u4e3a\u4e86\u786e\u4fdd\u5b89\u5168\u6027\uff0c\u6700\u597d\u901a\u8fc7\u521b\u5efa\u5b50\u7528\u6237\u751f\u6210API SECRET\uff0c\u518d\u8bbe\u7f6e\u5230github\u4ed3\u5e93\u7684secret\u4e2d\u3002 \u5177\u4f53 \u8bbe\u7f6eGithub action","title":"\u4f7f\u7528\u817e\u8baf\u4e91COS\u90e8\u7f72"},{"location":"maybe/tocos/#github-action-github-pages-cos","text":"\u5728 .github/workflows \u521b\u5efaAction\u6587\u4ef6","title":"\u4f7f\u7528Github action \u540c\u65f6\u90e8\u7f72\u5230 Github Pages \u548c \u817e\u8baf\u4e91COS"},{"location":"maybe/tocos/#github-pages","text":"\u53c2\u8003\u8fd9\u4e00\u7bc7\u6587\u7ae0\uff0c\u63d0\u4f9b\u4e86\u81ea\u52a8\u90e8\u7f72\u5230GitHub Pages\u65b9\u6cd5\u3002 https://www.ixiqin.com/2021/01/how-to-use-a-lot-action-automatically-deploy-mkdocs/ \u521b\u5efa pulish_gh.yml name : Publish docs via GitHub Pages on : push : branches : - master jobs : build : name : Deploy docs runs-on : ubuntu-latest steps : - name : Checkout main uses : actions/checkout@v2 - name : Deploy docs uses : mhausenblas/mkdocs-deploy-gh-pages@master env : GITHUB_TOKEN : ${{ secrets.GH_TOKEN }} # \u9700\u8981\u83b7\u53d6github-token CONFIG_FILE : mkdocs.yml EXTRA_PACKAGES : build-base CUSTOM_DOMAIN : docs.cqs.es # \u5982\u679c\u81ea\u6709\u57df\u540d\u5219\u53ef\u8bbe\u7f6e","title":"\u90e8\u7f72\u5230Github Pages"},{"location":"maybe/tocos/#tencent-cos","text":"\u89e3\u51b3\u8bbf\u95ee\u901f\u5ea6\u6162\u7684\u95ee\u9898 Github Pages\u65b9\u4fbf\u6613\u7528\uff0c\u4f46\u662f\u5728\u56fd\u5185\u8bbf\u95ee\u901f\u5ea6\u975e\u5e38\u6162\u3002 \u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a \u901a\u8fc7CDN\u52a0\u901f\u6e90\u7ad9\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528GitHub\u63d0\u4f9b\u7684IP\u5bf9\u7f51\u7ad9\u8fdb\u884c\u52a0\u901f\u3002 \u76f4\u63a5\u5c06\u9759\u6001\u6587\u4ef6\u63a8\u9001\u817e\u8baf\u4e91COS\u6216\u8005\u963f\u91cc\u4e91OSS\u4e0a\uff0c\u4f7f\u7528\u9759\u6001\u7f51\u7ad9\u8bbf\u95ee\u3002 \u6b64\u65b9\u6cd5\uff0c\u9700\u8981\u4f60\uff1a \u62e5\u6709\u81ea\u5df1\u7684\u5df2\u7ecf\u5907\u6848\u7684\u57df\u540d\uff0c \u5f00\u901a\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u6211\u4f7f\u7528\u7684\u662f\u817e\u8baf\u4e91\u7684COS\uff0c\u6240\u4f7f\u7528\u7684Github Action\u4e5f\u662f\u9762\u5411\u817e\u8baf\u4e91\u7684\u3002 \u540c\u6837\u521b\u5efa pulish_cos.yml name : Deploy to tencent osss on : push : branches : - master jobs : build : name : Deploy docs runs-on : ubuntu-latest steps : - name : Checkout main uses : actions/checkout@v2 - name : Deploy to tencent osss uses : aschenmaker/mkdocs-deploy-tencentcos@v0.1.0-release env : CONFIG_FILE : mkdocs.yml SECRET_ID : ${{ secrets.SECRET_ID }} SECRET_KEY : ${{ secrets.SECRET_KEY }} BUCKET : ${{ secrets.BUCKET }} REGION : ap-nanjing \u914d\u7f6e\u8be5GitHub Action \u9700\u8981\u817e\u8baf\u4e91\u5bf9\u5e94\u7684API SECRET\uff0c\u4e3a\u4e86\u786e\u4fdd\u5b89\u5168\u6027\uff0c\u6700\u597d\u901a\u8fc7\u521b\u5efa\u5b50\u7528\u6237\u751f\u6210API SECRET\uff0c\u518d\u8bbe\u7f6e\u5230github\u4ed3\u5e93\u7684secret\u4e2d\u3002 \u5177\u4f53 \u8bbe\u7f6eGithub action","title":"\u90e8\u7f72\u5230Tencent COS"},{"location":"maybe/webify/","text":"\u4f7f\u7528\u817e\u8baf\u4e91webfiy\u8fdb\u884c\u90e8\u7f72 webify\uff1f webify\u6682\u4e0d\u652f\u6301\u8fdb\u884c\u6784\u5efamkdocs\uff0c \u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u5206\u652f\uff0c\u90e8\u7f72\u9759\u6001\u7f51\u7ad9 \u539f\u7406\u5e94\u8be5\u662f\u6253\u5305\u955c\u50cf \u53ef\u4ee5\u8bbf\u95ee https://cloud.tencent.com/product/webify \u8fdb\u884c\u914d\u7f6e","title":"\u4f7f\u7528\u817e\u8baf\u4e91Webify\u8fdb\u884c\u90e8\u7f72"},{"location":"maybe/webify/#webfiy","text":"webify\uff1f webify\u6682\u4e0d\u652f\u6301\u8fdb\u884c\u6784\u5efamkdocs\uff0c \u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u5206\u652f\uff0c\u90e8\u7f72\u9759\u6001\u7f51\u7ad9 \u539f\u7406\u5e94\u8be5\u662f\u6253\u5305\u955c\u50cf \u53ef\u4ee5\u8bbf\u95ee https://cloud.tencent.com/product/webify \u8fdb\u884c\u914d\u7f6e","title":"\u4f7f\u7528\u817e\u8baf\u4e91webfiy\u8fdb\u884c\u90e8\u7f72"},{"location":"pl/golang/gmp/","text":"Go\u8bed\u8a00\u8c03\u5ea6\u5668\u8fed\u4ee3\u4ee5\u53ca\u5e38\u89c1\u5206\u6790 \u8c03\u5ea6\u5668\u7684\u6982\u5ff5 \u8bf4\u5230\u201c\u8c03\u5ea6\u201d\uff0c\u9996\u5148\u4f1a\u60f3\u5230\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u5668\u4f1a\u5c06\u7cfb\u7edf\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u6309\u7167\u4e00\u5b9a\u7b97\u6cd5\u8c03\u5ea6\u5230\u7269\u7406 CPU \u4e0a\u53bb\u8fd0\u884c\u3002 \u4f20\u7edf\u7684\u7f16\u7a0b\u8bed\u8a00\u6bd4\u5982 C\u3001C++ \u7b49\u7684\u5e76\u53d1\u5b9e\u73b0\u5b9e\u9645\u4e0a\u5c31\u662f\u57fa\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7684\uff0c\u5373\u7a0b\u5e8f\u8d1f\u8d23\u521b\u5efa\u7ebf\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u8c03\u5ea6\u3002 \u5c3d\u7ba1\u7ebf\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f\u76f8\u5bf9\u4e8e\u8fdb\u7a0b\u6765\u8bf4\uff0c\u7ebf\u7a0b\u8fd0\u884c\u6240\u9700\u8981\u8d44\u6e90\u6bd4\u8f83\u5c11\uff0c\u5728\u540c\u4e00\u8fdb\u7a0b\u4e2d\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u6548\u7387\u4f1a\u9ad8\u5f88\u591a\uff0c\u4f46\u5b9e\u9645\u4e0a\u591a\u7ebf\u7a0b\u5f00\u53d1\u8bbe\u8ba1\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u8981\u8003\u8651\u5f88\u591a\u540c\u6b65\u7ade\u4e89\u7b49\u95ee\u9898\uff0c\u5982\u9501\u3001\u7ade\u4e89\u51b2\u7a81\u7b49\u3002 \u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u65f6\u7684\u6700\u57fa\u672c\u5355\u5143\uff0c\u800c Linux \u5728\u8c03\u5ea6\u5668\u5e76\u4e0d\u533a\u5206\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u8c03\u5ea6\uff0c\u53ea\u662f\u8bf4\u7ebf\u7a0b\u8c03\u5ea6\u56e0\u4e3a\u8d44\u6e90\u5c11\uff0c\u6240\u4ee5\u5207\u6362\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\u3002 \u591a\u7ebf\u7a0b\u7684\u7f16\u7a0b\u5b58\u5728\u7684\u95ee\u9898\uff1a \u5e76\u53d1\u5355\u5143\u4e4b\u95f4\u7684\u901a\u4fe1\u56f0\u96be \u7ebf\u7a0b\u6c60\u5927\u5c0f\u4e0d\u5bb9\u6613\u786e\u8ba4 \u867d\u7136\u7ebf\u7a0b\u6bd4\u8f83\u8f7b\u91cf\uff0c\u4f46\u662f\u5728\u8c03\u5ea6\u65f6\u4e5f\u6709\u6bd4\u8f83\u5927\u7684\u989d\u5916\u5f00\u9500\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u90fd\u5360\u7528 1 \u5146\u4ee5\u4e0a\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5728\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u5207\u6362\u65f6\u4e0d\u4ec5\u4f1a\u6d88\u8017\u8f83\u591a\u7684\u5185\u5b58\uff0c\u6062\u590d\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u8fd8\u9700\u8981\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u6216\u8005\u9500\u6bc1\u5bf9\u5e94\u7684\u8d44\u6e90\uff0c\u6bcf\u4e00\u6b21\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u4ecd\u7136\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\uff08us \u7ea7\u522b\uff09 \u5bf9\u4e8e\u5f88\u591a\u7f51\u7edc\u670d\u52a1\u7a0b\u5e8f\uff0c\u7531\u4e8e\u4e0d\u80fd\u5927\u91cf\u521b\u5efa thread\uff0c\u5c31\u8981\u5728\u5c11\u91cf thread \u91cc\u505a\u7f51\u7edc\u591a\u8def\u590d\u7528\uff0c\u4f8b\u5982 JAVA \u7684Netty \u6846\u67b6\uff0c\u5199\u8d77\u8fd9\u6837\u7684\u7a0b\u5e8f\u4e5f\u4e0d\u5bb9\u6613\u3002 \u7528\u6237\u6001\u7ebf\u7a0b\u5b9e\u9645\u6709\u4e2a\u540d\u5b57\u53eb\u534f\u7a0b\uff08co-routine\uff09 \uff0c\u4e3a\u4e86\u5bb9\u6613\u533a\u5206\uff0c\u4f7f\u7528\u534f\u7a0b\u6307\u7528\u6237\u6001\u7ebf\u7a0b\uff0c\u4f7f\u7528\u7ebf\u7a0b\u6307\u5185\u6838\u6001\u7ebf\u7a0b\u3002 \u534f\u7a0b\u8ddf\u7ebf\u7a0b\u662f\u6709\u533a\u522b\u7684\uff0c\u7ebf\u7a0b\u7531CPU\u8c03\u5ea6\u662f\u62a2\u5360\u5f0f\u7684\uff0c \u534f\u7a0b\u7531\u7528\u6237\u6001\u8c03\u5ea6\u662f\u534f\u4f5c\u5f0f\u7684 \uff0c\u4e00\u4e2a\u534f\u7a0b\u8ba9\u51fa CPU \u540e\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u4e2a\u534f\u7a0b\u3002 Go\u4e2d\uff0c\u534f\u7a0b\u88ab\u79f0\u4e3a goroutine\uff08\u4f46\u5176\u5b9e\u5e76\u4e0d\u5b8c\u5168\u662f\u534f\u7a0b\uff0c\u8fd8\u505a\u4e86\u5176\u4ed6\u65b9\u9762\u7684\u4f18\u5316\uff09\uff0c\u5b83\u975e\u5e38\u8f7b\u91cf\uff0c\u4e00\u4e2a goroutine \u53ea\u5360\u51e0 KB\uff0c\u5e76\u4e14\u8fd9\u51e0 KB \u5c31\u8db3\u591f goroutine \u8fd0\u884c\u5b8c\uff0c\u8fd9\u5c31\u80fd\u5728\u6709\u9650\u7684\u5185\u5b58\u7a7a\u95f4\u5185\u652f\u6301\u5927\u91cf goroutine\uff0c\u652f\u6301\u4e86\u66f4\u591a\u7684\u5e76\u53d1\u3002\u867d\u7136\u4e00\u4e2a goroutine \u7684\u6808\u53ea\u5360\u51e0 KB\uff0c\u4f46\u5b9e\u9645\u662f\u53ef\u4f38\u7f29\u7684\uff0c\u5982\u679c\u9700\u8981\u66f4\u591a\u5185\u5bb9\uff0cruntime\u4f1a\u81ea\u52a8\u4e3a goroutine \u5206\u914d\u3002 \u800c\u5c06\u6240\u6709\u7684 goroutines \u6309\u7167\u4e00\u5b9a\u7b97\u6cd5\u653e\u5230 CPU \u4e0a\u6267\u884c\u7684\u7a0b\u5e8f\u5c31\u79f0\u4e3a goroutine \u8c03\u5ea6\u5668\u6216 goroutine scheduler\u3002 \u4e0d\u8fc7\uff0c\u4e00\u4e2a Go \u7a0b\u5e8f\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6765\u8bf4\u53ea\u662f\u4e00\u4e2a\u7528\u6237\u5c42\u7a0b\u5e8f\uff0c\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\uff0c\u5b83\u7684\u773c\u4e2d\u53ea\u6709 thread\uff0c\u5b83\u5e76\u4e0d\u77e5\u9053\u6709\u4ec0\u4e48\u53eb Goroutine \u7684\u4e1c\u897f\u7684\u5b58\u5728\u3002goroutine \u7684\u8c03\u5ea6\u5168\u8981\u9760 Go \u81ea\u5df1\u5b8c\u6210\uff0c\u6240\u4ee5\u5c31\u9700\u8981 goroutine \u8c03\u5ea6\u5668\u6765\u5b9e\u73b0 Go \u7a0b\u5e8f\u5185 goroutine \u4e4b\u95f4\u7684 CPU \u8d44\u6e90\u8c03\u5ea6\u3002 \u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\uff0cThread \u7ade\u4e89\u7684 CPU \u8d44\u6e90\u662f\u771f\u5b9e\u7684\u7269\u7406 CPU\uff0c\u4f46\u5bf9\u4e8e Go \u7a0b\u5e8f\u6765\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u7528\u6237\u5c42\u7a0b\u5e8f\uff0c\u5b83\u672c\u8eab\u6574\u4f53\u662f\u8fd0\u884c\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u4e0a\u7684\uff0c\u56e0\u6b64 goroutine \u4eec\u8981\u7ade\u4e89\u7684\u6240\u8c13 \u201cCPU\u201d \u8d44\u6e90\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002\u8fd9\u6837 Go scheduler \u7684\u8981\u505a\u7684\u5c31\u662f\uff1a\u5c06 goroutines \u6309\u7167\u4e00\u5b9a\u7b97\u6cd5 \u653e\u5230\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u4e2d\u53bb\u6267\u884c\u3002\u8fd9\u79cd\u5728\u8bed\u8a00\u5c42\u9762\u81ea\u5e26\u8c03\u5ea6\u5668\u7684\uff0c\u79f0\u4e4b\u4e3a\u539f\u751f\u652f\u6301\u5e76\u53d1\u3002 \u8c03\u5ea6\u5668\u7684\u6f14\u8fdb \u8c03\u5ea6\u5668\u7684\u4efb\u52a1\u662f\u5728\u7528\u6237\u6001\u5b8c\u6210 goroutine \u7684\u8c03\u5ea6\uff0c\u800c\u8c03\u5ea6\u5668\u7684\u5b9e\u73b0\u597d\u574f\uff0c\u5bf9\u5e76\u53d1\u5b9e\u9645\u6709\u5f88\u5927\u7684\u5f71\u54cd\u3002 G-M \u6a21\u578b \u73b0\u5728\u7684 Go\u8bed\u8a00\u8c03\u5ea6\u5668\u662f 2012 \u5e74\u91cd\u65b0\u8bbe\u8ba1\u7684\uff0c\u5728\u8fd9\u4e4b\u524d\u7684\u8c03\u5ea6\u5668\u79f0\u4e3a\u8001\u8c03\u5ea6\u5668\uff0c\u8001\u8c03\u5ea6\u5668\u91c7\u7528\u7684\u662f G-M \u6a21\u578b\uff0c\u5728\u8fd9\u4e2a\u8c03\u5ea6\u5668\u4e2d\uff0c\u6bcf\u4e2a goroutine \u5bf9\u5e94\u4e8e runtime \u4e2d\u7684\u4e00\u4e2a\u62bd\u8c61\u7ed3\u6784\uff1aG\uff0c\u800c os thread \u4f5c\u4e3a\u7269\u7406 CPU \u7684\u5b58\u5728\u800c\u88ab\u62bd\u8c61\u4e3a\u4e00\u4e2a\u7ed3\u6784\uff1aM(machine)\u3002M \u60f3\u8981\u6267\u884c G\u3001\u653e\u56de G \u90fd\u5fc5\u987b\u8bbf\u95ee\u5168\u5c40 G \u961f\u5217\uff0c\u5e76\u4e14 M \u6709\u591a\u4e2a\uff0c\u5373\u591a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90\u9700\u8981 \u52a0\u9501\u8fdb\u884c\u4fdd\u8bc1\u4e92\u65a5/\u540c\u6b65 \uff0c\u6240\u4ee5\u5168\u5c40 G \u961f\u5217\u662f\u6709\u4e92\u65a5\u9501\u8fdb\u884c\u4fdd\u62a4\u7684\u3002 \u8fd9\u4e2a\u7ed3\u6784\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u5374\u5b58\u5728\u7740\u8bb8\u591a\u95ee\u9898\u3002\u5b83\u9650\u5236\u4e86 Go \u5e76\u53d1\u7a0b\u5e8f\u7684\u4f38\u7f29\u6027\uff0c\u5c24\u5176\u662f\u5bf9\u90a3\u4e9b\u6709\u9ad8\u541e\u5410\u6216\u5e76\u884c\u8ba1\u7b97\u9700\u6c42\u7684\u670d\u52a1\u7a0b\u5e8f\u3002\u4e3b\u8981\u5b58\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u5355\u4e00\u5168\u5c40\u4e92\u65a5\u9501(Sched.Lock)\u548c\u96c6\u4e2d\u72b6\u6001\u5b58\u50a8\u7684\u5b58\u5728\u5bfc\u81f4\u6240\u6709 goroutine \u76f8\u5173\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1a\u521b\u5efa\u3001\u91cd\u65b0\u8c03\u5ea6\u7b49\u90fd\u8981\u4e0a\u9501\uff0c\u8fd9\u4f1a\u9020\u6210\u6fc0\u70c8\u7684\u9501\u7ade\u4e89 goroutine \u4f20\u9012\u95ee\u9898\uff1aM \u7ecf\u5e38\u5728 M \u4e4b\u95f4\u4f20\u9012\u53ef\u8fd0\u884c\u7684 goroutine\uff0c\u8fd9\u5bfc\u81f4\u8c03\u5ea6\u5ef6\u8fdf\u589e\u5927\u4ee5\u53ca\u989d\u5916\u7684\u6027\u80fd\u635f\u8017 \u6bcf\u4e2a M \u505a\u5185\u5b58\u7f13\u5b58\uff0c\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u8fc7\u9ad8\uff0c\u6570\u636e\u5c40\u90e8\u6027\u8f83\u5dee \u7cfb\u7edf\u8c03\u7528\u5bfc\u81f4\u9891\u7e41\u7684\u7ebf\u7a0b\u963b\u585e\u548c\u53d6\u6d88\u963b\u585e\u64cd\u4f5c\u589e\u52a0\u4e86\u7cfb\u7edf\u5f00\u9500 G-M-P\u6a21\u578b \u9762\u5bf9\u4e4b\u524d\u8c03\u5ea6\u5668\u7684\u95ee\u9898\uff0cGo \u8bbe\u8ba1\u4e86\u65b0\u7684\u8c03\u5ea6\u5668\uff0c\u5e76\u5728\u5176\u4e2d\u5f15\u5165\u4e86 P\uff08Processor\uff09\uff0c\u53e6\u5916\u8fd8\u5f15\u5165\u4e86\u4efb\u52a1\u7a83\u53d6\u8c03\u5ea6\u7684\u65b9\u5f0f\uff08work stealing\uff09 P \uff1a Processor\uff0c\u5b83\u5305\u542b\u4e86\u8fd0\u884c goroutine \u7684\u8d44\u6e90 \uff0c\u5982\u679c\u7ebf\u7a0b\u60f3\u8fd0\u884c goroutine\uff0c\u5fc5\u987b\u5148\u83b7\u53d6 P\uff0cP \u4e2d\u8fd8\u5305\u542b\u4e86\u53ef\u8fd0\u884c\u7684 G \u961f\u5217\u3002 work stealing\uff1a\u5f53 M \u7ed1\u5b9a\u7684 P \u6ca1\u6709\u53ef\u8fd0\u884c\u7684 G \u65f6\uff0c\u5b83\u53ef\u4ee5\u4ece\u5176\u4ed6\u8fd0\u884c\u7684 M \u90a3\u91cc\u5077\u53d6G\u3002 \u5168\u5c40\u961f\u5217\uff08Global Queue\uff09\uff1a\u5b58\u653e\u7b49\u5f85\u8fd0\u884c\u7684 G\u3002 P \u7684\u672c\u5730\u961f\u5217\uff1a\u540c\u5168\u5c40\u961f\u5217\u7c7b\u4f3c\uff0c\u5b58\u653e\u7684\u4e5f\u662f\u7b49\u5f85\u8fd0\u884c\u7684G\uff0c\u5b58\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u8d85\u8fc7256\u4e2a\u3002\u65b0\u5efa G \u65f6\uff0cG \u4f18\u5148\u52a0\u5165\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u5219\u4f1a\u628a\u672c\u5730\u961f\u5217\u4e2d\u4e00\u534a\u7684 G \u79fb\u52a8\u5230\u5168\u5c40\u961f\u5217\u3002 P\u5217\u8868\uff1a\u6240\u6709\u7684 P \u90fd\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u521b\u5efa\uff0c\u5e76\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\uff0c\u6700\u591a\u6709 GOMAXPROCS \u4e2a\u3002 M\uff1a\u7ebf\u7a0b\u60f3\u8fd0\u884c\u4efb\u52a1\u5c31\u5f97\u83b7\u53d6 P\uff0c\u4ece P \u7684\u672c\u5730\u961f\u5217\u83b7\u53d6 G\uff0cP \u961f\u5217\u4e3a\u7a7a\u65f6\uff0cM \u4e5f\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217\u62ff\u4e00\u6279 G\u653e\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u6216\u4ece\u5176\u4ed6 P \u7684\u672c\u5730\u961f\u5217\u5077\u4e00\u534a\u653e\u5230\u81ea\u5df1 P \u7684\u672c\u5730\u961f\u5217\u3002M \u8fd0\u884c G\uff0cG \u6267\u884c\u4e4b\u540e\uff0cM \u4f1a\u4ece P \u83b7\u53d6\u4e0b\u4e00\u4e2a G\uff0c\u4e0d\u65ad\u91cd\u590d\u4e0b\u53bb\u3002 Goroutine \u8c03\u5ea6\u5668\u548c OS \u8c03\u5ea6\u5668\u662f\u901a\u8fc7 M \u7ed3\u5408\u8d77\u6765\u7684\uff0c\u6bcf\u4e2a M \u90fd\u4ee3\u8868\u4e861\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0cOS \u8c03\u5ea6\u5668\u8d1f\u8d23\u628a\u5185\u6838\u7ebf\u7a0b\u5206\u914d\u5230 CPU \u7684\u6838\u4e0a\u6267\u884c \u5173\u4e8eP\u548cM\u7684\u4e2a\u6570\u7684\u95ee\u9898 P \u7684\u6570\u91cf \u7531\u542f\u52a8\u65f6\u73af\u5883\u53d8\u91cf $GOMAXPROCS \u6216\u8005\u662f\u7531 runtime \u7684\u65b9\u6cd5 GOMAXPROCS() \u51b3\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u5728\u7a0b\u5e8f\u6267\u884c\u7684\u4efb\u610f\u65f6\u523b\u90fd\u53ea\u6709 $GOMAXPROCS \u4e2a goroutine \u5728\u540c\u65f6\u8fd0\u884c\u3002 M \u7684\u6570\u91cf go \u8bed\u8a00\u672c\u8eab\u7684\u9650\u5236\uff1ago \u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u4f1a\u8bbe\u7f6e M \u7684\u6700\u5927\u6570\u91cf\uff0c\u9ed8\u8ba4 10000\u3002\u4f46\u662f\u5185\u6838\u5f88\u96be\u652f\u6301\u8fd9\u4e48\u591a\u7684\u7ebf\u7a0b\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9650\u5236\u53ef\u4ee5\u5ffd\u7565\u3002 runtime/debug \u4e2d\u7684 SetMaxThreads \u51fd\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e M \u7684\u6700\u5927\u6570\u91cf \u4e00\u4e2a M \u963b\u585e\u4e86\uff0c\u4f1a\u521b\u5efa\u65b0\u7684 M\u3002 M \u4e0e P \u7684\u6570\u91cf\u6ca1\u6709\u7edd\u5bf9\u5173\u7cfb\uff0c\u4e00\u4e2a M \u963b\u585e\uff0cP \u5c31\u4f1a\u53bb\u521b\u5efa\u6216\u8005\u5207\u6362\u53e6\u4e00\u4e2a M\uff0c\u6240\u4ee5\uff0c\u5373\u4f7f P \u7684\u9ed8\u8ba4\u6570\u91cf\u662f 1\uff0c\u4e5f\u6709\u53ef\u80fd\u4f1a\u521b\u5efa\u5f88\u591a\u4e2a M \u51fa\u6765\u3002 \u62a2\u5360\u5f0f\u8c03\u5ea6 G-P-M \u6a21\u578b\u4e2d\u8fd8\u5b9e\u73b0\u4e86\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u6240\u8c13\u62a2\u5360\u5f0f\u8c03\u5ea6\u6307\u7684\u662f\u5728 coroutine \u4e2d\u8981\u7b49\u5f85\u4e00\u4e2a\u534f\u7a0b\u4e3b\u52a8\u8ba9\u51fa CPU \u624d\u6267\u884c\u4e0b\u4e00\u4e2a\u534f\u7a0b\uff0c\u5728 Go \u4e2d\uff0c\u4e00\u4e2a goroutine \u6700\u591a\u5360\u7528CPU 10ms\uff0c\u9632\u6b62\u5176\u4ed6 goroutine \u88ab\u997f\u6b7b\uff0c\u8fd9\u4e5f\u662f goroutine \u4e0d\u540c\u4e8e coroutine \u7684\u4e00\u4e2a\u5730\u65b9\u3002\u5728 goroutine \u4e2d\u5148\u540e\u5b9e\u73b0\u4e86\u4e24\u79cd\u62a2\u5360\u5f0f\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5206\u522b\u662f\u57fa\u4e8e\u534f\u4f5c\u7684\u65b9\u5f0f\u548c\u57fa\u4e8e\u4fe1\u53f7\u7684\u65b9\u5f0f\u3002 \u57fa\u4e8e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6 G-P-M \u6a21\u578b\u7684\u5b9e\u73b0\u662f Go scheduler \u7684\u4e00\u5927\u8fdb\u6b65\uff0c\u4f46\u6b64\u65f6\u7684\u8c03\u5ea6\u5668\u4ecd\u7136\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u4e0d\u652f\u6301\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u5bfc\u81f4\u4e00\u65e6\u67d0\u4e2a G \u4e2d\u51fa\u73b0\u6b7b\u5faa\u73af\u6216\u6c38\u4e45\u5faa\u73af\u7684\u4ee3\u7801\u903b\u8f91\uff0c\u90a3\u4e48 G \u5c06\u6c38\u4e45\u5360\u7528\u5206\u914d\u7ed9\u5b83\u7684 P \u548c M\uff0c\u4f4d\u4e8e\u540c\u4e00\u4e2a P \u4e2d\u7684\u5176\u4ed6 G \u5c06\u5f97\u4e0d\u5230\u8c03\u5ea6\uff0c\u51fa\u73b0\u201c\u997f\u6b7b\u201d\u7684\u60c5\u51b5\u3002\u5f53\u53ea\u6709\u4e00\u4e2a P \u65f6(GOMAXPROCS=1)\u65f6\uff0c\u6574\u4e2a Go \u7a0b\u5e8f\u4e2d\u7684\u5176\u4ed6 G \u90fd\u4f1a\u88ab\u997f\u6b7b\u3002\u6240\u4ee5\u540e\u9762 Go \u8bbe\u8ba1\u56e2\u961f\u5728 Go 1.2 \u4e2d\u5b9e\u73b0\u4e86\u57fa\u4e8e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002 \u8fd9\u79cd\u62a2\u5360\u5f0f\u8c03\u5ea6\u7684\u539f\u7406\u5219\u662f\u5728\u6bcf\u4e2a\u51fd\u6570\u6216\u65b9\u6cd5\u7684\u5165\u53e3\uff0c\u52a0\u4e0a\u4e00\u6bb5\u989d\u5916\u7684\u4ee3\u7801\uff0c\u8ba9 runtime \u6709\u673a\u4f1a\u68c0\u67e5\u662f\u5426\u9700\u8981\u6267\u884c\u62a2\u5360\u8c03\u5ea6\u3002 \u57fa\u4e8e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u7684\u5de5\u4f5c\u539f\u7406\u5927\u81f4\u5982\u4e0b\uff1a \u7f16\u8bd1\u5668\u4f1a\u5728\u8c03\u7528\u51fd\u6570\u524d\u63d2\u5165\u4e00\u4e2a runtime.morestack \u51fd\u6570 Go \u8bed\u8a00\u8fd0\u884c\u65f6\u4f1a\u5728\u5783\u573e\u56de\u6536\u6682\u505c\u7a0b\u5e8f\u3001\u7cfb\u7edf\u76d1\u63a7\u53d1\u73b0 Goroutine \u8fd0\u884c\u8d85\u8fc7 10ms \u65f6\u53d1\u51fa\u62a2\u5360\u8bf7\u6c42\uff0c\u6b64\u65f6\u4f1a\u8bbe\u7f6e\u4e00\u4e2a StackPreempt \u5b57\u6bb5\u503c\u4e3a StackPreempt \uff0c\u6807\u793a\u5f53\u524d Goroutine \u53d1\u51fa\u4e86\u62a2\u5360\u8bf7\u6c42\u3002 \u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u53ef\u80fd\u4f1a\u6267\u884c\u7f16\u8bd1\u5668\u63d2\u5165\u7684 runtime.morestack \u51fd\u6570\uff0c\u5b83\u8c03\u7528\u7684 runtime.newstack \u4f1a\u68c0\u67e5 Goroutine \u7684 stackguard0 \u5b57\u6bb5\u662f\u5426\u4e3a StackPreempt \u5982\u679c stackguard0 \u662f StackPreempt\uff0c\u5c31\u4f1a\u89e6\u53d1\u62a2\u5360\u8ba9\u51fa\u5f53\u524d\u7ebf\u7a0b \u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u867d\u7136\u589e\u52a0\u4e86\u8fd0\u884c\u65f6\u7684\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355\uff0c\u4e5f\u6ca1\u6709\u5e26\u6765\u8fc7\u591a\u7684\u989d\u5916\u5f00\u9500\uff0c\u6240\u4ee5\u5728 Go \u8bed\u8a00\u4e2d\u4f7f\u7528\u4e86 10 \u51e0\u4e2a\u7248\u672c\u3002\u56e0\u4e3a\u8fd9\u91cc\u7684\u62a2\u5360\u662f\u901a\u8fc7\u7f16\u8bd1\u5668\u63d2\u5165\u51fd\u6570\u5b9e\u73b0\u7684\uff0c\u8fd8\u662f \u9700\u8981\u51fd\u6570\u8c03\u7528\u4f5c\u4e3a\u5165\u53e3\u624d\u80fd\u89e6\u53d1\u62a2\u5360 \uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u79cd\u534f\u4f5c\u5f0f\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u53ea\u80fd\u8bf4\u5c40\u90e8\u89e3\u51b3\u4e86\u201c\u997f\u6b7b\u201d\u95ee\u9898\uff0c\u5bf9\u4e8e\u6ca1\u6709\u51fd\u6570\u8c03\u7528\uff0c\u7eaf\u7b97\u6cd5\u5faa\u73af\u8ba1\u7b97\u7684 G\uff0cscheduler \u4f9d\u7136\u65e0\u6cd5\u62a2\u5360\u3002 \u57fa\u4e8e\u4fe1\u53f7\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6 Go \u8bed\u8a00\u5728 1.14 \u7248\u672c\u4e2d\u5b9e\u73b0\u4e86\u975e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u5728\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\u91cd\u6784\u5df2\u6709\u7684\u903b\u8f91\u5e76\u4e3a Goroutine \u589e\u52a0\u65b0\u7684\u72b6\u6001\u548c\u5b57\u6bb5\u6765\u652f\u6301\u62a2\u5360\u3002 \u2026\u2026 go func()\u7684\u8c03\u5ea6\u6d41\u7a0b \u57fa\u4e8e\u4e0a\u9762\u7684\u6a21\u578b\uff0c\u5f53\u6211\u4eec\u4f7f\u7528 go func() \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 goroutine \u7684\u65f6\u5019\uff0c\u5176\u8c03\u5ea6\u6d41\u7a0b\u5982\u4e0b\uff1a go func() \u521b\u5efa\u4e86\u4e00\u4e2ago routine\uff1b \u6709\u4e24\u4e2a\u5b58\u50a8G\u7684\u961f\u5217\uff0c\u4e2a\u662f\u5c40\u90e8\u8c03\u5ea6\u5668 P \u7684\u672c\u5730\u961f\u5217\u3001\u4e00\u4e2a\u662f\u5168\u5c40 G \u961f\u5217\u3002\u65b0\u521b\u5efa\u7684 G \u4f1a\u5148\u4fdd\u5b58\u5728 P \u7684\u672c\u5730\u961f\u5217\u4e2d\uff0c\u5982\u679c P \u7684\u672c\u5730\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u5c31\u4f1a\u4fdd\u5b58\u5728\u5168\u5c40\u7684\u961f\u5217\u4e2d\uff1b G \u53ea\u80fd\u8fd0\u884c\u5728 M \u4e2d\uff0c\u4e00\u4e2a M \u5fc5\u987b\u6301\u6709\u4e00\u4e2a P\uff0cM \u4e0e P \u662f 1\uff1a1 \u7684\u5173\u7cfb\u3002M \u4f1a\u4ece P \u7684\u672c\u5730\u961f\u5217\u5f39\u51fa\u4e00\u4e2a\u53ef\u6267\u884c\u72b6\u6001\u7684 G \u6765\u6267\u884c\uff0c\u5982\u679c P \u7684\u672c\u5730\u961f\u5217\u4e3a\u7a7a\uff0c\u5c31\u4f1a\u60f3\u5176\u4ed6\u7684 MP \u7ec4\u5408\u5077\u53d6\u4e00\u4e2a\u53ef\u6267\u884c\u7684 G \u6765\u6267\u884c\uff1b \u4e00\u4e2a M \u8c03\u5ea6 G \u6267\u884c\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u5faa\u73af\u673a\u5236\uff1b \u5f53 M \u6267\u884c\u67d0\u4e00\u4e2a G \u65f6\u5019\u5982\u679c\u53d1\u751f\u4e86 syscall \u6216\u5219\u5176\u4f59\u963b\u585e\u64cd\u4f5c \uff0cM \u4f1a\u963b\u585e\uff0c\u5982\u679c\u5f53\u524d\u6709\u4e00\u4e9b G \u5728\u6267\u884c\uff0cruntime \u4f1a\u628a\u8fd9\u4e2a\u7ebf\u7a0b M \u4ece P \u4e2d\u6458\u9664 (detach)\uff0c\u7136\u540e\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b (\u5982\u679c\u6709\u7a7a\u95f2\u7684\u7ebf\u7a0b\u53ef\u7528\u5c31\u590d\u7528\u7a7a\u95f2\u7ebf\u7a0b) \u6765\u670d\u52a1\u4e8e\u8fd9\u4e2a P\uff1b \u5f53 M \u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\u65f6\u5019\uff0c\u8fd9\u4e2a G \u4f1a\u5c1d\u8bd5\u83b7\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684 P \u6267\u884c\uff0c\u5e76\u653e\u5165\u5230\u8fd9\u4e2a P \u7684\u672c\u5730\u961f\u5217\u3002\u5982\u679c\u83b7\u53d6\u4e0d\u5230 P\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ebf\u7a0b M \u53d8\u6210\u4f11\u7720\u72b6\u6001\uff0c \u52a0\u5165\u5230\u7a7a\u95f2\u7ebf\u7a0b\u4e2d\uff0c\u7136\u540e\u8fd9\u4e2a G \u4f1a\u88ab\u653e\u5165\u5168\u5c40\u961f\u5217\u4e2d\u3002 goroutine\u7684\u751f\u547d\u5468\u671f \u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ebf\u7a0b\u548c\u4e00\u4e2a groutine \u6bd4\u8f83\u7279\u6b8a\uff0c\u90a3\u5c31\u662f M0 \u548c G0 \uff1a M0 \uff1a M0 \u662f\u542f\u52a8\u7a0b\u5e8f\u540e\u7684\u7f16\u53f7\u4e3a 0 \u7684\u4e3b\u7ebf\u7a0b\uff0c\u8fd9\u4e2a M \u5bf9\u5e94\u7684\u5b9e\u4f8b\u4f1a\u5728\u5168\u5c40\u53d8\u91cf runtime.m0 \u4e2d\uff0c\u4e0d\u9700\u8981\u5728 heap \u4e0a\u5206\u914d\uff0cM0 \u8d1f\u8d23\u6267\u884c\u521d\u59cb\u5316\u64cd\u4f5c\u548c\u542f\u52a8\u7b2c\u4e00\u4e2a G\uff0c \u5728\u4e4b\u540e M0 \u5c31\u548c\u5176\u4ed6\u7684 M \u4e00\u6837\u4e86 \u3002 G0 \uff1a G0 \u662f\u6bcf\u6b21\u542f\u52a8\u4e00\u4e2a M \u90fd\u4f1a\u7b2c\u4e00\u4e2a\u521b\u5efa\u7684 gourtine\uff0cG0 \u4ec5\u7528\u4e8e\u8d1f\u8d23\u8c03\u5ea6\u7684 G\uff0cG0 \u4e0d\u6307\u5411\u4efb\u4f55\u53ef\u6267\u884c\u7684\u51fd\u6570\uff0c\u6bcf\u4e2a M \u90fd\u4f1a\u6709\u4e00\u4e2a\u81ea\u5df1\u7684 G0\u3002\u5728\u8c03\u5ea6\u6216\u7cfb\u7edf\u8c03\u7528\u65f6\u4f1a\u4f7f\u7528 G0 \u7684\u6808\u7a7a\u95f4\uff0c\u5168\u5c40\u53d8\u91cf\u7684 G0 \u662f M0 \u7684 G0\u3002 \u5bf9\u4e0b\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u5206\u6790\uff1a package main import \"fmt\" func main () { fmt . Println ( \"Hello scheduler\" ) } \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u5206\u6790\uff1a runtime \u521b\u5efa\u6700\u521d\u7684\u7ebf\u7a0b m0 \u548c g0 \uff0c\u628a\u4e24\u8005\u5173\u8054\u8d77\u6765\u3002 \u8c03\u5ea6\u5668\u521d\u59cb\u5316\uff1a\u521d\u59cb\u5316m0\uff0c\u6808\uff0c\u5783\u573e\u56de\u6536\uff0c\u4ee5\u53ca\u521b\u5efa\u548c\u521d\u59cb\u5316\u7531GOMAXPROCS\u4e2aP\u6784\u6210\u7684P\u5217\u8868 \u5b9e\u4f8b\u4e2d\u7684mian\u51fd\u6570\u662f main.main \uff0cruntime\u4e2d\u4e5f\u6709\u4e00\u4e2a runtime.main \uff0c\u4ee3\u7801\u7ecf\u8fc7\u7f16\u8bd1\u4e4b\u540e\uff0c runtime.main \u4f1a\u8c03\u7528 main.main \uff0c\u7a0b\u5e8f\u9a71\u52a8\u662f\u4f1a\u4e3aruntime.main\u521b\u5efa goroutine \uff0c\u7136\u540e main goroutine \u52a0\u5165\u5230P\u7684\u672c\u5730\u961f\u5217 \u542f\u52a8m0\uff0cm0\u5df2\u7ecf\u7ed1\u5b9a\u4e86P\uff0c\u4f1a\u4eceP\u7684\u672c\u5730\u961f\u5217\u4e2d\u83b7\u53d6G\uff0c\u83b7\u53d6\u5230 main gouroutine G \u62e5\u6709\u6808\uff0cM \u6839\u636e G \u4e2d\u7684\u6808\u4fe1\u606f\u548c\u8c03\u5ea6\u4fe1\u606f\u8bbe\u7f6e\u8fd0\u884c\u73af\u5883 M \u8fd0\u884c G G \u9000\u51fa\uff0c\u518d\u6b21\u56de\u5230 M \u83b7\u53d6\u53ef\u8fd0\u884c\u7684 G\uff0c\u8fd9\u6837\u91cd\u590d\u4e0b\u53bb\uff0c\u76f4\u5230 main.main \u9000\u51fa\uff0c runtime.main \u6267\u884c Defer \u548c Panic \u5904\u7406\uff0c\u6216\u8c03\u7528 runtime.exit \u9000\u51fa\u7a0b\u5e8f \u8c03\u5ea6\u5668\u7684\u751f\u547d\u5468\u671f\u51e0\u4e4e\u5360\u6ee1\u4e86\u4e00\u4e2aGo\u7a0b\u5e8f\u7684\u4e00\u751f\uff0c runtime.main \u7684 goroutine \u6267\u884c\u4e4b\u524d\u90fd\u662f\u4e3a\u8c03\u5ea6\u5668\u505a\u51c6\u5907\u5de5\u4f5c\uff0c runtime.main \u7684 goroutine \u8fd0\u884c\uff0c\u624d\u662f\u8c03\u5ea6\u5668\u7684\u771f\u6b63\u5f00\u59cb\uff0c\u76f4\u5230 runtime.main \u7ed3\u675f\u800c\u7ed3\u675f\u3002 \u8c03\u5ea6\u5668\u573a\u666f\u5206\u6790 \u573a\u666f1 p1\u62e5\u6709g1\uff0cm1\u83b7\u53d6\u5230p1\u540e\u5f00\u59cb\u8fd0\u884cg1\uff0cg1\u901a\u8fc7 go func \u4ea7\u751f\u7684\u5c40\u90e8\u6027g2\u6709\u9650\u653e\u5230p1\u7684\u672c\u5730\u961f\u5217\u91cc \u573a\u666f2 g1\u8fd0\u884c\u5b8c\u6210\u540e(\u51fd\u6570\uff1a goexit )\uff0cm \u4e0a\u8fd0\u884c\u7684 goroutine \u5207\u6362\u4e3a g0\uff0cg0 \u8d1f\u8d23\u8c03\u5ea6\u65f6\u534f\u7a0b\u7684\u5207\u6362\uff08\u51fd\u6570\uff1a schedule \uff09 \u3002\u4ece p1 \u7684\u672c\u5730\u961f\u5217\u53d6 g2\uff0c\u4ece g0 \u5207\u6362\u5230 g2\uff0c\u5e76\u5f00\u59cb\u8fd0\u884c g2 (\u51fd\u6570\uff1a execute )\u3002\u5b9e\u73b0\u4e86**\u7ebf\u7a0b m1 \u7684\u590d\u7528**\u3002 \u573a\u666f3 \u5047\u8bbe\u6bcf\u4e2a p \u7684\u672c\u5730\u961f\u5217\u53ea\u80fd\u5b58 4 \u4e2a g\u3002g2 \u8981\u521b\u5efa 6 \u4e2a g\uff0c\u524d 4 \u4e2ag\uff08 g3, g4, g5, g6 \uff09\u5df2\u7ecf\u52a0\u5165 p1 \u7684\u672c\u5730\u961f\u5217\uff0cp1 \u672c\u5730\u961f\u5217\u6ee1\u4e86\u3002 g2 \u5728\u521b\u5efa g7 \u7684\u65f6\u5019\uff0c\u53d1\u73b0 p1 \u7684\u672c\u5730\u961f\u5217\u5df2\u6ee1\uff0c\u9700\u8981\u6267\u884c**\u8d1f\u8f7d\u5747\u8861**\uff0c\u628a p1 \u4e2d\u672c\u5730\u961f\u5217\u4e2d\u524d**\u4e00\u534a\u7684 g**\uff0c\u8fd8\u6709\u65b0\u521b\u5efa\u7684 g **\u8f6c\u79fb**\u5230\u5168\u5c40\u961f\u5217 Note \u5b9e\u73b0\u4e2d\u5e76\u4e0d\u4e00\u5b9a\u662f\u65b0\u7684 g\uff0c\u5982\u679c g \u662f g2 \u4e4b\u540e\u5c31\u6267\u884c\u7684\uff0c\u4f1a\u88ab\u4fdd\u5b58\u5728\u672c\u5730\u961f\u5217\uff0c\u5229\u7528\u67d0\u4e2a\u8001\u7684 g \u66ff\u6362\u65b0 g \u52a0\u5165\u5168\u5c40\u961f\u5217\uff09\uff0c\u8fd9\u4e9b g \u88ab\u8f6c\u79fb\u5230\u5168\u5c40\u961f\u5217\u65f6\uff0c\u4f1a\u88ab\u6253\u4e71\u987a\u5e8f\u3002 \u5982\u679c\u6b64\u65f6 G2 \u521b\u5efa G8 \u65f6\uff0cP1 \u7684\u672c\u5730\u961f\u5217\u672a\u6ee1\uff0c\u6240\u4ee5 G8 \u4f1a\u88ab\u52a0\u5165\u5230 P1 \u7684\u672c\u5730\u961f\u5217\uff1a \u573a\u666f4 \u5728\u521b\u5efa g \u65f6\uff0c\u8fd0\u884c\u7684 g \u4f1a\u5c1d\u8bd5\u5524\u9192\u5176\u4ed6\u7a7a\u95f2\u7684 p \u548c m \u7ec4\u5408\u53bb\u6267\u884c \u3002\u5047\u5b9a g2 \u5524\u9192\u4e86 m2\uff0cm2 \u7ed1\u5b9a\u4e86 p2\uff0c\u5e76\u8fd0\u884c g0\uff0c\u4f46 p2 \u672c\u5730\u961f\u5217\u6ca1\u6709 g\uff0cm2 \u6b64\u65f6\u4e3a\u81ea\u65cb\u7ebf\u7a0b\uff08\u6ca1\u6709 G \u4f46\u4e3a\u8fd0\u884c\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u4e0d\u65ad\u5bfb\u627e g\uff09\u3002 m2 \u63a5\u4e0b\u6765\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217 (GQ) \u53d6\u4e00\u6279 g \u653e\u5230 p2 \u7684\u672c\u5730\u961f\u5217\uff08\u51fd\u6570\uff1a findrunnable \uff09\u3002m2 \u4ece\u5168\u5c40\u961f\u5217\u53d6\u7684 g \u6570\u91cf\u7b26\u5408\u4e0b\u9762\u7684\u516c\u5f0f\uff1a n = min ( len ( GQ ) / MAXPROCS + 1 , len ( GQ ) / 2 ) \u516c\u5f0f\u7684\u542b\u4e49\u662f\uff0c\u81f3\u5c11\u4ece\u5168\u5c40\u961f\u5217\u53d6 1 \u4e2a g\uff0c\u4f46\u6bcf\u6b21\u4e0d\u8981\u4ece\u5168\u5c40\u961f\u5217\u79fb\u52a8\u592a\u591a\u7684 g \u5230 p \u672c\u5730\u961f\u5217\uff0c\u7ed9\u5176\u4ed6 p \u7559\u70b9\u3002\u8fd9\u662f**\u4ece\u5168\u5c40\u961f\u5217\u5230 P \u672c\u5730\u961f\u5217\u7684\u8d1f\u8f7d\u5747\u8861**\u3002 \u5047\u5b9a\u573a\u666f\u4e2d\u4e00\u5171\u6709 4 \u4e2a P\uff08 GOMAXPROCS=4 \uff09\uff0c\u6240\u4ee5 m2 \u53ea\u4ece\u80fd\u4ece\u5168\u5c40\u961f\u5217\u53d6 1 \u4e2a g\uff08\u5373 g3\uff09\u79fb\u52a8 p2 \u672c\u5730\u961f\u5217\uff0c\u7136\u540e\u5b8c\u6210\u4ece g0 \u5230 g3 \u7684\u5207\u6362\uff0c\u8fd0\u884c g3: \u573a\u666f5 \u5047\u8bbe g2 \u4e00\u76f4\u5728 m1\u4e0a\u8fd0\u884c\uff0c\u7ecf\u8fc7 2 \u8f6e\u540e\uff0cm2 \u5df2\u7ecf\u628a g7\u3001g4 \u4e5f\u632a\u5230\u4e86p2\u7684\u672c\u5730\u961f\u5217\u5e76\u5b8c\u6210\u8fd0\u884c\uff0c\u5168\u5c40\u961f\u5217\u548c p2 \u7684\u672c\u5730\u961f\u5217\u90fd\u7a7a\u4e86\uff0c\u5982\u4e0b\u56fe\u5de6\u8fb9\u6240\u793a\u3002 \u5168\u5c40\u961f\u5217\u5df2\u7ecf\u6ca1\u6709 g\uff0c\u90a3 m \u5c31\u8981\u6267\u884c work stealing\uff1a\u4ece\u5176\u4ed6\u6709 g \u7684 p \u54ea\u91cc\u5077\u53d6\u4e00\u534a g \u8fc7\u6765\uff0c\u653e\u5230\u81ea\u5df1\u7684 P \u672c\u5730\u961f\u5217 \u3002p2 \u4ece p1 \u7684\u672c\u5730\u961f\u5217\u5c3e\u90e8\u53d6\u4e00\u534a\u7684 g\uff0c\u672c\u4f8b\u4e2d\u4e00\u534a\u5219\u53ea\u6709 1 \u4e2a g8\uff0c\u653e\u5230 p2 \u7684\u672c\u5730\u961f\u5217\uff0c\u60c5\u51b5\u5982\u4e0b\u56fe\u53f3\u8fb9\uff1a \u573a\u666f6 p1 \u672c\u5730\u961f\u5217 g5\u3001g6 \u5df2\u7ecf\u88ab\u5176\u4ed6 m \u5077\u8d70\u5e76\u8fd0\u884c\u5b8c\u6210\uff0c\u5f53\u524d m1 \u548c m2 \u5206\u522b\u5728\u8fd0\u884c g2 \u548c g8\uff0cm3 \u548c m4 \u6ca1\u6709goroutine \u53ef\u4ee5\u8fd0\u884c\uff0cm3 \u548c m4 \u5904\u4e8e**\u81ea\u65cb\u72b6\u6001**\uff0c\u5b83\u4eec\u4e0d\u65ad\u5bfb\u627e goroutine\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u8981\u8ba9 m3 \u548c m4 \u81ea\u65cb\uff1f\u81ea\u65cb\u672c\u8d28\u662f\u5728\u8fd0\u884c\uff0c\u7ebf\u7a0b\u5728\u8fd0\u884c\u5374\u6ca1\u6709\u6267\u884c g\uff0c\u5c31\u53d8\u6210\u4e86\u6d6a\u8d39CPU\uff0c\u9500\u6bc1\u7ebf\u7a0b\u53ef\u4ee5\u8282\u7ea6CPU\u8d44\u6e90\u4e0d\u662f\u66f4\u597d\u5417\uff1f \u5b9e\u9645\u4e0a\uff0c\u521b\u5efa\u548c\u9500\u6bc1CPU\u90fd\u662f\u6d6a\u8d39\u65f6\u95f4\u7684\uff0c\u6211\u4eec**\u5e0c\u671b\u5f53\u6709\u65b0 goroutine \u521b\u5efa\u65f6\uff0c\u7acb\u523b\u80fd\u6709 m \u8fd0\u884c\u5b83**\uff0c\u5982\u679c\u9500\u6bc1\u518d\u65b0\u5efa\u5c31\u589e\u52a0\u4e86\u65f6\u5ef6\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002 \u5f53\u7136\u4e5f\u8003\u8651\u4e86\u8fc7\u591a\u7684\u81ea\u65cb\u7ebf\u7a0b\u662f\u6d6a\u8d39 CPU\uff0c\u6240\u4ee5\u7cfb\u7edf\u4e2d\u6700\u591a\u6709 GOMAXPROCS \u4e2a\u81ea\u65cb\u7684\u7ebf\u7a0b\uff0c\u591a\u4f59\u7684\u6ca1\u4e8b\u505a\u7684\u7ebf\u7a0b\u4f1a\u8ba9\u4ed6\u4eec\u4f11\u7720\uff08\u51fd\u6570\uff1a notesleep() \u5b9e\u73b0\u4e86\u8fd9\u4e2a\u601d\u8def\uff09\u3002 \u573a\u666f7 \u5047\u5b9a\u5f53\u524d\u9664\u4e86 m3 \u548c m4 \u4e3a\u81ea\u65cb\u7ebf\u7a0b\uff0c\u8fd8\u6709 m5 \u548c m6 \u4e3a\u81ea\u65cb\u7ebf\u7a0b\uff0cg8 \u521b\u5efa\u4e86 g9\uff0cg9 \u4f1a\u653e\u5165\u672c\u5730\u961f\u5217\u3002\u52a0\u5165\u6b64\u65f6g8 \u8fdb\u884c\u4e86**\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528**\uff0cm2 \u548c p2 \u7acb\u5373\u89e3\u7ed1\uff0cp2 \u4f1a\u6267\u884c\u4ee5\u4e0b\u5224\u65ad\uff1a\u5982\u679c p2 \u672c\u5730\u961f\u5217\u6709 g\u3001\u5168\u5c40\u961f\u5217\u6709 g \u6216\u6709\u7a7a\u95f2\u7684 m\uff0cp2 \u90fd\u4f1a\u7acb\u9a6c\u5524\u91921\u4e2a m \u548c\u5b83\u7ed1\u5b9a\uff0c\u5426\u5219 p2 \u5219\u4f1a\u52a0\u5165\u5230\u7a7a\u95f2 P \u5217\u8868\uff0c\u7b49\u5f85 m \u6765\u83b7\u53d6\u53ef\u7528\u7684 p\u3002\u672c\u573a\u666f\u4e2d\uff0cp2 \u672c\u5730\u961f\u5217\u6709 g\uff0c\u53ef\u4ee5\u548c\u5176\u4ed6\u81ea\u65cb\u7ebf\u7a0b m5 \u7ed1\u5b9a\u3002 \u573a\u666f8 \u5047\u8bbe g8 \u521b\u5efa\u4e86 g9\uff0c\u5047\u5982 g8 \u8fdb\u884c\u4e86 \u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528 \uff08CGO\u4f1a\u662f\u8fd9\u79cd\u65b9\u5f0f\uff0c\u89c1 cgocall() \uff09\uff0cm2 \u548c p2 \u4f1a\u89e3\u7ed1\uff0c\u4f46 m2 \u4f1a\u8bb0\u4f4f p\uff0c\u7136\u540e g8 \u548c m2 \u8fdb\u5165\u7cfb\u7edf\u8c03\u7528\u72b6\u6001\u3002\u5f53 g8 \u548c m2 \u9000\u51fa\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u83b7\u53d6 p2\uff0c\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\uff0c\u5219\u83b7\u53d6\u7a7a\u95f2\u7684 p\uff0c\u5982\u679c\u4f9d\u7136\u6ca1\u6709\uff0cg8 \u4f1a\u88ab\u8bb0\u4e3a\u53ef\u8fd0\u884c\u72b6\u6001\uff0c\u5e76\u52a0\u5165\u5230\u5168\u5c40\u961f\u5217\u3002 \u573a\u666f9 \u524d\u9762\u8bf4\u8fc7\uff0cGo \u8c03\u5ea6\u5728 go1.12 \u5b9e\u73b0\u4e86\u62a2\u5360\uff0c\u5e94\u8be5\u66f4\u7cbe\u786e\u7684\u79f0\u4e3a \u57fa\u4e8e\u534f\u4f5c\u7684\u8bf7\u6c42\u5f0f\u62a2\u5360 \uff0c\u90a3\u662f\u56e0\u4e3a go \u8c03\u5ea6\u5668\u7684\u62a2\u5360\u548c OS \u7684\u7ebf\u7a0b\u62a2\u5360\u6bd4\u8d77\u6765\u5f88\u67d4\u548c\uff0c\u4e0d\u66b4\u529b\uff0c\u4e0d\u4f1a\u8bf4\u7ebf\u7a0b\u65f6\u95f4\u7247\u5230\u4e86\uff0c\u6216\u8005\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u5230\u4e86\uff0c\u6267\u884c\u62a2\u5360\u8c03\u5ea6\u3002 go \u7684\u62a2\u5360\u8c03\u5ea6\u67d4\u548c\u5230\u53ea\u7ed9 goroutine \u53d1\u9001 1 \u4e2a\u62a2\u5360\u8bf7\u6c42\uff0c\u81f3\u4e8e goroutine \u4f55\u65f6\u505c\u4e0b\u6765\uff0c\u90a3\u5c31\u7ba1\u4e0d\u5230\u4e86 \u3002 \u62a2\u5360\u8bf7\u6c42\u9700\u8981\u6ee1\u8db32\u4e2a\u6761\u4ef6\u4e2d\u76841\u4e2a\uff1a G \u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u8d85\u8fc7 20us G \u8fd0\u884c\u8d85\u8fc7 10ms\u3002\u8c03\u5ea6\u5668\u5728\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u542f\u52a8\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b sysmon\uff0c\u5b83\u8d1f\u8d23\u6240\u6709\u7684\u76d1\u63a7\u5de5\u4f5c\uff0c\u5176\u4e2d 1 \u9879\u5c31\u662f\u62a2\u5360\uff0c\u53d1\u73b0\u6ee1\u8db3\u62a2\u5360\u6761\u4ef6\u7684 G \u65f6\uff0c\u5c31\u53d1\u51fa\u62a2\u5360\u8bf7\u6c42\u3002 \u573a\u666f\u603b\u7ed3 \u573a\u666f \u72b6\u6001 \u7ed3\u679c 1 \u5f53\u524dg1\u521b\u5efa\u4e86\u65b0\u7684g2 \u4f18\u5148\u52a0\u5165\u672c\u5730\u961f\u5217 2 \u5f53\u524dm1\u4e0b\u7684g1\u8fd0\u884c\u5b8c\u6210 m1\u5207\u6362\u5230g0\uff0cg0\u8d1f\u8d23\u8c03\u5ea6\u534f\u7a0b\u5207\u6362\uff0c\u5207\u6362\u5230\u672c\u5730\u961f\u5217g2\uff0c\u5b9e\u73b0\u4e86m1\u590d\u7528 3 \u672c\u5730\u961f\u5217\u6ee1 \u5c06\u672c\u5730\u961f\u5217\u7684\u4e00\u534a\u8fc1\u79fb\u5230\u5168\u5c40\u961f\u5217\u4e2d\u53bb 4 \u521b\u5efag\u65f6\uff0c\u8fd0\u884c\u7684g\u5524\u9192\u5176\u4ed6\u7684p\u548cm m2\u4f1a\u4ece\u5168\u5c40\u961f\u5217\u53d6\u4e00\u6279g\u653e\u5230p2\u4e2d 5 \u5168\u5c40\u961f\u5217\u4e3a\u7a7a m\u4f1a\u4ece\u5176\u4ed6\u7684\u6709g\u7684p\u4e2d\u5077\u53d6\u4e00\u4e9bg\u8fc7\u6765\u3002\u653e\u5230\u672c\u5730 6 \u6ca1\u6709\u53ef\u6267\u884c\u7684g\u4e86 GOMAXPROCS\u4e2am\u4f1a\u8fdb\u884c\u81ea\u65cb 7 \u7cfb\u7edf\u8c03\u7528\u5bfc\u81f4\u4e00\u4e2ag\u963b\u585e\u4e86 p\u4f1a\u548cm\u89e3\u9664\u7ed1\u5b9a\uff0c\u5e26\u7740g\u53bb\u5bfb\u627e\u7a7a\u95f2\u7684m 8 \u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528 p\u4f1a\u548cm\u63a5\u89e6\u7ed1\u5b9a\uff0c\u5bfb\u627e\u65b0\u7684m\uff0c\u539f\u6765\u7684m\u5728\u6267\u884c\u5b8c\u8c03\u7528\u540e\uff0c\u4f1a\u68c0\u67e5p\u662f\u5426\u88ab\u5360\u7528\uff0c\u5982\u679c\u6ca1\u6709\u5219\u91cd\u65b0\u6267\u884cp 9 \u534f\u4f5c\u5f0f\u62a2\u5360 \u4e0d\u4f1a\u7ba1goroutine\u4ec0\u4e48\u65f6\u5019\u505c\u4e0b\u6765\u3002\uff08go1.12) \u72b6\u6001\u6c47\u603b G\u72b6\u6001 \u72b6\u6001 \u63cf\u8ff0 _Gidle \u521a\u521a\u88ab\u5206\u914d\u5e76\u4e14\u8fd8\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u503c\u4e3a0\uff0c\u4e3a\u521b\u5efagoroutine\u540e\u7684\u9ed8\u8ba4\u503c _Grunnable \u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u6ca1\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u5b58\u50a8\u5728\u8fd0\u884c\u961f\u5217\u4e2d\uff0c\u53ef\u80fd\u5728\u67d0\u4e2aP\u7684\u672c\u5730\u961f\u5217\u6216\u5168\u5c40\u961f\u5217\u4e2d _Grunning \u6b63\u5728\u6267\u884c\u4ee3\u7801\u7684goroutine\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743 _Gsyscall \u6b63\u5728\u6267\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\uff0c\u88ab\u8d4b\u4e88\u4e86\u5185\u6838\u7ebf\u7a0b M \u4f46\u662f\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a _Gwaiting \u7531\u4e8e\u8fd0\u884c\u65f6\u800c\u88ab\u963b\u585e\uff0c\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\u5e76\u4e14\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a\uff0c\u4f46\u662f\u53ef\u80fd\u5b58\u5728\u4e8e Channel \u7684\u7b49\u5f85\u961f\u5217\u4e0a _Gdead \u5f53\u524dgoroutine\u672a\u88ab\u4f7f\u7528\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u80fd\u6709\u5206\u914d\u7684\u6808\uff0c\u5206\u5e03\u5728\u7a7a\u95f2\u5217\u8868 gFree\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u521a\u521a\u521d\u59cb\u5316\u7684 goroutine\uff0c\u4e5f\u53ef\u80fd\u662f\u6267\u884c\u4e86 goexit \u9000\u51fa\u7684 goroutine _Gcopystack \u6808\u6b63\u5728\u88ab\u62f7\u8d1d\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a _Gpreempted \u7531\u4e8e\u62a2\u5360\u800c\u88ab\u963b\u585e\uff0c\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\u5e76\u4e14\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a\uff0c\u7b49\u5f85\u5524\u9192 _Gscan GC \u6b63\u5728\u626b\u63cf\u6808\u7a7a\u95f4\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u72b6\u6001\u540c\u65f6\u5b58\u5728 P\u72b6\u6001 \u72b6\u6001 \u63cf\u8ff0 _Pidle \u5904\u7406\u5668\u6ca1\u6709\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668\uff0c\u88ab\u7a7a\u95f2\u961f\u5217\u6216\u8005\u6539\u53d8\u5176\u72b6\u6001\u7684\u7ed3\u6784\u6301\u6709\uff0c\u8fd0\u884c\u961f\u5217\u4e3a\u7a7a _Prunning \u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5e76\u4e14\u6b63\u5728\u6267\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668 _Psyscall \u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\uff0c\u5f53\u524d\u7ebf\u7a0b\u9677\u5165\u7cfb\u7edf\u8c03\u7528 _Pgcstop \u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5f53\u524d\u5904\u7406\u5668\u7531\u4e8e\u5783\u573e\u56de\u6536\u88ab\u505c\u6b62 _Pdead \u5f53\u524d\u5904\u7406\u5668\u5df2\u7ecf\u4e0d\u88ab\u4f7f\u7528 M \u72b6\u6001 \u81ea\u65cb\u7ebf\u7a0b \uff1a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u4f46\u662f\u6ca1\u6709\u53ef\u6267\u884c goroutine \u7684\u7ebf\u7a0b\uff0c\u6570\u91cf\u6700\u591a\u4e3a GOMAXPROC\uff0c\u82e5\u662f\u6570\u91cf\u5927\u4e8e GOMAXPROC \u5c31\u4f1a\u8fdb\u5165\u4f11\u7720\u3002 \u975e\u81ea\u65cb\u7ebf\u7a0b \uff1a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u6709\u53ef\u6267\u884c goroutine \u7684\u7ebf\u7a0b\u3002 \u8c03\u5ea6\u5668\u8bbe\u8ba1 \u590d\u7528\u7ebf\u7a0b \uff1a\u534f\u7a0b\u672c\u8eab\u5c31\u662f\u8fd0\u884c\u5728\u4e00\u7ec4\u7ebf\u7a0b\u4e4b\u4e0a\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u9891\u7e41\u7684\u521b\u5efa\u3001\u9500\u6bc1\u7ebf\u7a0b\uff0c\u800c\u662f\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u590d\u7528\u3002\u5728\u8c03\u5ea6\u5668\u4e2d\u590d\u7528\u7ebf\u7a0b\u8fd8\u67092\u4e2a\u4f53\u73b0\uff1a work stealing\uff0c\u5f53\u672c\u7ebf\u7a0b\u65e0\u53ef\u8fd0\u884c\u7684 G \u65f6\uff0c\u5c1d\u8bd5\u4ece\u5176\u4ed6\u7ebf\u7a0b\u7ed1\u5b9a\u7684 P \u5077\u53d6 G\uff0c\u800c\u4e0d\u662f\u9500\u6bc1\u7ebf\u7a0b\u3002 hand off\uff0c\u5f53\u672c\u7ebf\u7a0b\u56e0\u4e3a G \u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u963b\u585e\u65f6\uff0c\u7ebf\u7a0b\u91ca\u653e\u7ed1\u5b9a\u7684 P\uff0c\u628a P \u8f6c\u79fb\u7ed9\u5176\u4ed6\u7a7a\u95f2\u7684\u7ebf\u7a0b\u6267\u884c\u3002 \u5229\u7528\u5e76\u884c \uff1aGOMAXPROCS \u8bbe\u7f6e P \u7684\u6570\u91cf\uff0c\u5f53 GOMAXPROCS \u5927\u4e8e 1 \u65f6\uff0c\u5c31\u6700\u591a\u6709 GOMAXPROCS \u4e2a\u7ebf\u7a0b\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u53ef\u80fd\u5206\u5e03\u5728\u591a\u4e2a CPU \u6838\u4e0a\u540c\u65f6\u8fd0\u884c\uff0c\u4f7f\u5f97\u5e76\u53d1\u5229\u7528\u5e76\u884c\u3002\u53e6\u5916\uff0cGOMAXPROCS \u4e5f\u9650\u5236\u4e86\u5e76\u53d1\u7684\u7a0b\u5ea6\uff0c\u6bd4\u5982 GOMAXPROCS = \u6838\u6570/2 \uff0c\u5219\u6700\u591a\u5229\u7528\u4e86\u4e00\u534a\u7684 CPU \u6838\u8fdb\u884c\u5e76\u884c\u3002 \u53c2\u8003\u6587\u6863 gmp\u8c03\u5ea6\u5668\u8be6\u89e3","title":"gmp\u72b6\u6001\u8be6\u89e3"},{"location":"pl/golang/gmp/#go","text":"","title":"Go\u8bed\u8a00\u8c03\u5ea6\u5668\u8fed\u4ee3\u4ee5\u53ca\u5e38\u89c1\u5206\u6790"},{"location":"pl/golang/gmp/#_1","text":"\u8bf4\u5230\u201c\u8c03\u5ea6\u201d\uff0c\u9996\u5148\u4f1a\u60f3\u5230\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u5668\u4f1a\u5c06\u7cfb\u7edf\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u6309\u7167\u4e00\u5b9a\u7b97\u6cd5\u8c03\u5ea6\u5230\u7269\u7406 CPU \u4e0a\u53bb\u8fd0\u884c\u3002 \u4f20\u7edf\u7684\u7f16\u7a0b\u8bed\u8a00\u6bd4\u5982 C\u3001C++ \u7b49\u7684\u5e76\u53d1\u5b9e\u73b0\u5b9e\u9645\u4e0a\u5c31\u662f\u57fa\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7684\uff0c\u5373\u7a0b\u5e8f\u8d1f\u8d23\u521b\u5efa\u7ebf\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u8c03\u5ea6\u3002 \u5c3d\u7ba1\u7ebf\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f\u76f8\u5bf9\u4e8e\u8fdb\u7a0b\u6765\u8bf4\uff0c\u7ebf\u7a0b\u8fd0\u884c\u6240\u9700\u8981\u8d44\u6e90\u6bd4\u8f83\u5c11\uff0c\u5728\u540c\u4e00\u8fdb\u7a0b\u4e2d\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u6548\u7387\u4f1a\u9ad8\u5f88\u591a\uff0c\u4f46\u5b9e\u9645\u4e0a\u591a\u7ebf\u7a0b\u5f00\u53d1\u8bbe\u8ba1\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u8981\u8003\u8651\u5f88\u591a\u540c\u6b65\u7ade\u4e89\u7b49\u95ee\u9898\uff0c\u5982\u9501\u3001\u7ade\u4e89\u51b2\u7a81\u7b49\u3002 \u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u65f6\u7684\u6700\u57fa\u672c\u5355\u5143\uff0c\u800c Linux \u5728\u8c03\u5ea6\u5668\u5e76\u4e0d\u533a\u5206\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u8c03\u5ea6\uff0c\u53ea\u662f\u8bf4\u7ebf\u7a0b\u8c03\u5ea6\u56e0\u4e3a\u8d44\u6e90\u5c11\uff0c\u6240\u4ee5\u5207\u6362\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\u3002 \u591a\u7ebf\u7a0b\u7684\u7f16\u7a0b\u5b58\u5728\u7684\u95ee\u9898\uff1a \u5e76\u53d1\u5355\u5143\u4e4b\u95f4\u7684\u901a\u4fe1\u56f0\u96be \u7ebf\u7a0b\u6c60\u5927\u5c0f\u4e0d\u5bb9\u6613\u786e\u8ba4 \u867d\u7136\u7ebf\u7a0b\u6bd4\u8f83\u8f7b\u91cf\uff0c\u4f46\u662f\u5728\u8c03\u5ea6\u65f6\u4e5f\u6709\u6bd4\u8f83\u5927\u7684\u989d\u5916\u5f00\u9500\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u90fd\u5360\u7528 1 \u5146\u4ee5\u4e0a\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5728\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u5207\u6362\u65f6\u4e0d\u4ec5\u4f1a\u6d88\u8017\u8f83\u591a\u7684\u5185\u5b58\uff0c\u6062\u590d\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u8fd8\u9700\u8981\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u6216\u8005\u9500\u6bc1\u5bf9\u5e94\u7684\u8d44\u6e90\uff0c\u6bcf\u4e00\u6b21\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u4ecd\u7136\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\uff08us \u7ea7\u522b\uff09 \u5bf9\u4e8e\u5f88\u591a\u7f51\u7edc\u670d\u52a1\u7a0b\u5e8f\uff0c\u7531\u4e8e\u4e0d\u80fd\u5927\u91cf\u521b\u5efa thread\uff0c\u5c31\u8981\u5728\u5c11\u91cf thread \u91cc\u505a\u7f51\u7edc\u591a\u8def\u590d\u7528\uff0c\u4f8b\u5982 JAVA \u7684Netty \u6846\u67b6\uff0c\u5199\u8d77\u8fd9\u6837\u7684\u7a0b\u5e8f\u4e5f\u4e0d\u5bb9\u6613\u3002 \u7528\u6237\u6001\u7ebf\u7a0b\u5b9e\u9645\u6709\u4e2a\u540d\u5b57\u53eb\u534f\u7a0b\uff08co-routine\uff09 \uff0c\u4e3a\u4e86\u5bb9\u6613\u533a\u5206\uff0c\u4f7f\u7528\u534f\u7a0b\u6307\u7528\u6237\u6001\u7ebf\u7a0b\uff0c\u4f7f\u7528\u7ebf\u7a0b\u6307\u5185\u6838\u6001\u7ebf\u7a0b\u3002 \u534f\u7a0b\u8ddf\u7ebf\u7a0b\u662f\u6709\u533a\u522b\u7684\uff0c\u7ebf\u7a0b\u7531CPU\u8c03\u5ea6\u662f\u62a2\u5360\u5f0f\u7684\uff0c \u534f\u7a0b\u7531\u7528\u6237\u6001\u8c03\u5ea6\u662f\u534f\u4f5c\u5f0f\u7684 \uff0c\u4e00\u4e2a\u534f\u7a0b\u8ba9\u51fa CPU \u540e\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u4e2a\u534f\u7a0b\u3002 Go\u4e2d\uff0c\u534f\u7a0b\u88ab\u79f0\u4e3a goroutine\uff08\u4f46\u5176\u5b9e\u5e76\u4e0d\u5b8c\u5168\u662f\u534f\u7a0b\uff0c\u8fd8\u505a\u4e86\u5176\u4ed6\u65b9\u9762\u7684\u4f18\u5316\uff09\uff0c\u5b83\u975e\u5e38\u8f7b\u91cf\uff0c\u4e00\u4e2a goroutine \u53ea\u5360\u51e0 KB\uff0c\u5e76\u4e14\u8fd9\u51e0 KB \u5c31\u8db3\u591f goroutine \u8fd0\u884c\u5b8c\uff0c\u8fd9\u5c31\u80fd\u5728\u6709\u9650\u7684\u5185\u5b58\u7a7a\u95f4\u5185\u652f\u6301\u5927\u91cf goroutine\uff0c\u652f\u6301\u4e86\u66f4\u591a\u7684\u5e76\u53d1\u3002\u867d\u7136\u4e00\u4e2a goroutine \u7684\u6808\u53ea\u5360\u51e0 KB\uff0c\u4f46\u5b9e\u9645\u662f\u53ef\u4f38\u7f29\u7684\uff0c\u5982\u679c\u9700\u8981\u66f4\u591a\u5185\u5bb9\uff0cruntime\u4f1a\u81ea\u52a8\u4e3a goroutine \u5206\u914d\u3002 \u800c\u5c06\u6240\u6709\u7684 goroutines \u6309\u7167\u4e00\u5b9a\u7b97\u6cd5\u653e\u5230 CPU \u4e0a\u6267\u884c\u7684\u7a0b\u5e8f\u5c31\u79f0\u4e3a goroutine \u8c03\u5ea6\u5668\u6216 goroutine scheduler\u3002 \u4e0d\u8fc7\uff0c\u4e00\u4e2a Go \u7a0b\u5e8f\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6765\u8bf4\u53ea\u662f\u4e00\u4e2a\u7528\u6237\u5c42\u7a0b\u5e8f\uff0c\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\uff0c\u5b83\u7684\u773c\u4e2d\u53ea\u6709 thread\uff0c\u5b83\u5e76\u4e0d\u77e5\u9053\u6709\u4ec0\u4e48\u53eb Goroutine \u7684\u4e1c\u897f\u7684\u5b58\u5728\u3002goroutine \u7684\u8c03\u5ea6\u5168\u8981\u9760 Go \u81ea\u5df1\u5b8c\u6210\uff0c\u6240\u4ee5\u5c31\u9700\u8981 goroutine \u8c03\u5ea6\u5668\u6765\u5b9e\u73b0 Go \u7a0b\u5e8f\u5185 goroutine \u4e4b\u95f4\u7684 CPU \u8d44\u6e90\u8c03\u5ea6\u3002 \u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\uff0cThread \u7ade\u4e89\u7684 CPU \u8d44\u6e90\u662f\u771f\u5b9e\u7684\u7269\u7406 CPU\uff0c\u4f46\u5bf9\u4e8e Go \u7a0b\u5e8f\u6765\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u7528\u6237\u5c42\u7a0b\u5e8f\uff0c\u5b83\u672c\u8eab\u6574\u4f53\u662f\u8fd0\u884c\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u4e0a\u7684\uff0c\u56e0\u6b64 goroutine \u4eec\u8981\u7ade\u4e89\u7684\u6240\u8c13 \u201cCPU\u201d \u8d44\u6e90\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002\u8fd9\u6837 Go scheduler \u7684\u8981\u505a\u7684\u5c31\u662f\uff1a\u5c06 goroutines \u6309\u7167\u4e00\u5b9a\u7b97\u6cd5 \u653e\u5230\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u4e2d\u53bb\u6267\u884c\u3002\u8fd9\u79cd\u5728\u8bed\u8a00\u5c42\u9762\u81ea\u5e26\u8c03\u5ea6\u5668\u7684\uff0c\u79f0\u4e4b\u4e3a\u539f\u751f\u652f\u6301\u5e76\u53d1\u3002","title":"\u8c03\u5ea6\u5668\u7684\u6982\u5ff5"},{"location":"pl/golang/gmp/#_2","text":"\u8c03\u5ea6\u5668\u7684\u4efb\u52a1\u662f\u5728\u7528\u6237\u6001\u5b8c\u6210 goroutine \u7684\u8c03\u5ea6\uff0c\u800c\u8c03\u5ea6\u5668\u7684\u5b9e\u73b0\u597d\u574f\uff0c\u5bf9\u5e76\u53d1\u5b9e\u9645\u6709\u5f88\u5927\u7684\u5f71\u54cd\u3002","title":"\u8c03\u5ea6\u5668\u7684\u6f14\u8fdb"},{"location":"pl/golang/gmp/#g-m","text":"\u73b0\u5728\u7684 Go\u8bed\u8a00\u8c03\u5ea6\u5668\u662f 2012 \u5e74\u91cd\u65b0\u8bbe\u8ba1\u7684\uff0c\u5728\u8fd9\u4e4b\u524d\u7684\u8c03\u5ea6\u5668\u79f0\u4e3a\u8001\u8c03\u5ea6\u5668\uff0c\u8001\u8c03\u5ea6\u5668\u91c7\u7528\u7684\u662f G-M \u6a21\u578b\uff0c\u5728\u8fd9\u4e2a\u8c03\u5ea6\u5668\u4e2d\uff0c\u6bcf\u4e2a goroutine \u5bf9\u5e94\u4e8e runtime \u4e2d\u7684\u4e00\u4e2a\u62bd\u8c61\u7ed3\u6784\uff1aG\uff0c\u800c os thread \u4f5c\u4e3a\u7269\u7406 CPU \u7684\u5b58\u5728\u800c\u88ab\u62bd\u8c61\u4e3a\u4e00\u4e2a\u7ed3\u6784\uff1aM(machine)\u3002M \u60f3\u8981\u6267\u884c G\u3001\u653e\u56de G \u90fd\u5fc5\u987b\u8bbf\u95ee\u5168\u5c40 G \u961f\u5217\uff0c\u5e76\u4e14 M \u6709\u591a\u4e2a\uff0c\u5373\u591a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90\u9700\u8981 \u52a0\u9501\u8fdb\u884c\u4fdd\u8bc1\u4e92\u65a5/\u540c\u6b65 \uff0c\u6240\u4ee5\u5168\u5c40 G \u961f\u5217\u662f\u6709\u4e92\u65a5\u9501\u8fdb\u884c\u4fdd\u62a4\u7684\u3002 \u8fd9\u4e2a\u7ed3\u6784\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u5374\u5b58\u5728\u7740\u8bb8\u591a\u95ee\u9898\u3002\u5b83\u9650\u5236\u4e86 Go \u5e76\u53d1\u7a0b\u5e8f\u7684\u4f38\u7f29\u6027\uff0c\u5c24\u5176\u662f\u5bf9\u90a3\u4e9b\u6709\u9ad8\u541e\u5410\u6216\u5e76\u884c\u8ba1\u7b97\u9700\u6c42\u7684\u670d\u52a1\u7a0b\u5e8f\u3002\u4e3b\u8981\u5b58\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u5355\u4e00\u5168\u5c40\u4e92\u65a5\u9501(Sched.Lock)\u548c\u96c6\u4e2d\u72b6\u6001\u5b58\u50a8\u7684\u5b58\u5728\u5bfc\u81f4\u6240\u6709 goroutine \u76f8\u5173\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1a\u521b\u5efa\u3001\u91cd\u65b0\u8c03\u5ea6\u7b49\u90fd\u8981\u4e0a\u9501\uff0c\u8fd9\u4f1a\u9020\u6210\u6fc0\u70c8\u7684\u9501\u7ade\u4e89 goroutine \u4f20\u9012\u95ee\u9898\uff1aM \u7ecf\u5e38\u5728 M \u4e4b\u95f4\u4f20\u9012\u53ef\u8fd0\u884c\u7684 goroutine\uff0c\u8fd9\u5bfc\u81f4\u8c03\u5ea6\u5ef6\u8fdf\u589e\u5927\u4ee5\u53ca\u989d\u5916\u7684\u6027\u80fd\u635f\u8017 \u6bcf\u4e2a M \u505a\u5185\u5b58\u7f13\u5b58\uff0c\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u8fc7\u9ad8\uff0c\u6570\u636e\u5c40\u90e8\u6027\u8f83\u5dee \u7cfb\u7edf\u8c03\u7528\u5bfc\u81f4\u9891\u7e41\u7684\u7ebf\u7a0b\u963b\u585e\u548c\u53d6\u6d88\u963b\u585e\u64cd\u4f5c\u589e\u52a0\u4e86\u7cfb\u7edf\u5f00\u9500","title":"G-M \u6a21\u578b"},{"location":"pl/golang/gmp/#g-m-p","text":"\u9762\u5bf9\u4e4b\u524d\u8c03\u5ea6\u5668\u7684\u95ee\u9898\uff0cGo \u8bbe\u8ba1\u4e86\u65b0\u7684\u8c03\u5ea6\u5668\uff0c\u5e76\u5728\u5176\u4e2d\u5f15\u5165\u4e86 P\uff08Processor\uff09\uff0c\u53e6\u5916\u8fd8\u5f15\u5165\u4e86\u4efb\u52a1\u7a83\u53d6\u8c03\u5ea6\u7684\u65b9\u5f0f\uff08work stealing\uff09 P \uff1a Processor\uff0c\u5b83\u5305\u542b\u4e86\u8fd0\u884c goroutine \u7684\u8d44\u6e90 \uff0c\u5982\u679c\u7ebf\u7a0b\u60f3\u8fd0\u884c goroutine\uff0c\u5fc5\u987b\u5148\u83b7\u53d6 P\uff0cP \u4e2d\u8fd8\u5305\u542b\u4e86\u53ef\u8fd0\u884c\u7684 G \u961f\u5217\u3002 work stealing\uff1a\u5f53 M \u7ed1\u5b9a\u7684 P \u6ca1\u6709\u53ef\u8fd0\u884c\u7684 G \u65f6\uff0c\u5b83\u53ef\u4ee5\u4ece\u5176\u4ed6\u8fd0\u884c\u7684 M \u90a3\u91cc\u5077\u53d6G\u3002 \u5168\u5c40\u961f\u5217\uff08Global Queue\uff09\uff1a\u5b58\u653e\u7b49\u5f85\u8fd0\u884c\u7684 G\u3002 P \u7684\u672c\u5730\u961f\u5217\uff1a\u540c\u5168\u5c40\u961f\u5217\u7c7b\u4f3c\uff0c\u5b58\u653e\u7684\u4e5f\u662f\u7b49\u5f85\u8fd0\u884c\u7684G\uff0c\u5b58\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u8d85\u8fc7256\u4e2a\u3002\u65b0\u5efa G \u65f6\uff0cG \u4f18\u5148\u52a0\u5165\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u5219\u4f1a\u628a\u672c\u5730\u961f\u5217\u4e2d\u4e00\u534a\u7684 G \u79fb\u52a8\u5230\u5168\u5c40\u961f\u5217\u3002 P\u5217\u8868\uff1a\u6240\u6709\u7684 P \u90fd\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u521b\u5efa\uff0c\u5e76\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\uff0c\u6700\u591a\u6709 GOMAXPROCS \u4e2a\u3002 M\uff1a\u7ebf\u7a0b\u60f3\u8fd0\u884c\u4efb\u52a1\u5c31\u5f97\u83b7\u53d6 P\uff0c\u4ece P \u7684\u672c\u5730\u961f\u5217\u83b7\u53d6 G\uff0cP \u961f\u5217\u4e3a\u7a7a\u65f6\uff0cM \u4e5f\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217\u62ff\u4e00\u6279 G\u653e\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u6216\u4ece\u5176\u4ed6 P \u7684\u672c\u5730\u961f\u5217\u5077\u4e00\u534a\u653e\u5230\u81ea\u5df1 P \u7684\u672c\u5730\u961f\u5217\u3002M \u8fd0\u884c G\uff0cG \u6267\u884c\u4e4b\u540e\uff0cM \u4f1a\u4ece P \u83b7\u53d6\u4e0b\u4e00\u4e2a G\uff0c\u4e0d\u65ad\u91cd\u590d\u4e0b\u53bb\u3002 Goroutine \u8c03\u5ea6\u5668\u548c OS \u8c03\u5ea6\u5668\u662f\u901a\u8fc7 M \u7ed3\u5408\u8d77\u6765\u7684\uff0c\u6bcf\u4e2a M \u90fd\u4ee3\u8868\u4e861\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0cOS \u8c03\u5ea6\u5668\u8d1f\u8d23\u628a\u5185\u6838\u7ebf\u7a0b\u5206\u914d\u5230 CPU \u7684\u6838\u4e0a\u6267\u884c","title":"G-M-P\u6a21\u578b"},{"location":"pl/golang/gmp/#pm","text":"","title":"\u5173\u4e8eP\u548cM\u7684\u4e2a\u6570\u7684\u95ee\u9898"},{"location":"pl/golang/gmp/#p","text":"\u7531\u542f\u52a8\u65f6\u73af\u5883\u53d8\u91cf $GOMAXPROCS \u6216\u8005\u662f\u7531 runtime \u7684\u65b9\u6cd5 GOMAXPROCS() \u51b3\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u5728\u7a0b\u5e8f\u6267\u884c\u7684\u4efb\u610f\u65f6\u523b\u90fd\u53ea\u6709 $GOMAXPROCS \u4e2a goroutine \u5728\u540c\u65f6\u8fd0\u884c\u3002","title":"P \u7684\u6570\u91cf"},{"location":"pl/golang/gmp/#m","text":"go \u8bed\u8a00\u672c\u8eab\u7684\u9650\u5236\uff1ago \u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u4f1a\u8bbe\u7f6e M \u7684\u6700\u5927\u6570\u91cf\uff0c\u9ed8\u8ba4 10000\u3002\u4f46\u662f\u5185\u6838\u5f88\u96be\u652f\u6301\u8fd9\u4e48\u591a\u7684\u7ebf\u7a0b\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9650\u5236\u53ef\u4ee5\u5ffd\u7565\u3002 runtime/debug \u4e2d\u7684 SetMaxThreads \u51fd\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e M \u7684\u6700\u5927\u6570\u91cf \u4e00\u4e2a M \u963b\u585e\u4e86\uff0c\u4f1a\u521b\u5efa\u65b0\u7684 M\u3002 M \u4e0e P \u7684\u6570\u91cf\u6ca1\u6709\u7edd\u5bf9\u5173\u7cfb\uff0c\u4e00\u4e2a M \u963b\u585e\uff0cP \u5c31\u4f1a\u53bb\u521b\u5efa\u6216\u8005\u5207\u6362\u53e6\u4e00\u4e2a M\uff0c\u6240\u4ee5\uff0c\u5373\u4f7f P \u7684\u9ed8\u8ba4\u6570\u91cf\u662f 1\uff0c\u4e5f\u6709\u53ef\u80fd\u4f1a\u521b\u5efa\u5f88\u591a\u4e2a M \u51fa\u6765\u3002","title":"M \u7684\u6570\u91cf"},{"location":"pl/golang/gmp/#_3","text":"G-P-M \u6a21\u578b\u4e2d\u8fd8\u5b9e\u73b0\u4e86\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u6240\u8c13\u62a2\u5360\u5f0f\u8c03\u5ea6\u6307\u7684\u662f\u5728 coroutine \u4e2d\u8981\u7b49\u5f85\u4e00\u4e2a\u534f\u7a0b\u4e3b\u52a8\u8ba9\u51fa CPU \u624d\u6267\u884c\u4e0b\u4e00\u4e2a\u534f\u7a0b\uff0c\u5728 Go \u4e2d\uff0c\u4e00\u4e2a goroutine \u6700\u591a\u5360\u7528CPU 10ms\uff0c\u9632\u6b62\u5176\u4ed6 goroutine \u88ab\u997f\u6b7b\uff0c\u8fd9\u4e5f\u662f goroutine \u4e0d\u540c\u4e8e coroutine \u7684\u4e00\u4e2a\u5730\u65b9\u3002\u5728 goroutine \u4e2d\u5148\u540e\u5b9e\u73b0\u4e86\u4e24\u79cd\u62a2\u5360\u5f0f\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5206\u522b\u662f\u57fa\u4e8e\u534f\u4f5c\u7684\u65b9\u5f0f\u548c\u57fa\u4e8e\u4fe1\u53f7\u7684\u65b9\u5f0f\u3002","title":"\u62a2\u5360\u5f0f\u8c03\u5ea6"},{"location":"pl/golang/gmp/#_4","text":"G-P-M \u6a21\u578b\u7684\u5b9e\u73b0\u662f Go scheduler \u7684\u4e00\u5927\u8fdb\u6b65\uff0c\u4f46\u6b64\u65f6\u7684\u8c03\u5ea6\u5668\u4ecd\u7136\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u4e0d\u652f\u6301\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u5bfc\u81f4\u4e00\u65e6\u67d0\u4e2a G \u4e2d\u51fa\u73b0\u6b7b\u5faa\u73af\u6216\u6c38\u4e45\u5faa\u73af\u7684\u4ee3\u7801\u903b\u8f91\uff0c\u90a3\u4e48 G \u5c06\u6c38\u4e45\u5360\u7528\u5206\u914d\u7ed9\u5b83\u7684 P \u548c M\uff0c\u4f4d\u4e8e\u540c\u4e00\u4e2a P \u4e2d\u7684\u5176\u4ed6 G \u5c06\u5f97\u4e0d\u5230\u8c03\u5ea6\uff0c\u51fa\u73b0\u201c\u997f\u6b7b\u201d\u7684\u60c5\u51b5\u3002\u5f53\u53ea\u6709\u4e00\u4e2a P \u65f6(GOMAXPROCS=1)\u65f6\uff0c\u6574\u4e2a Go \u7a0b\u5e8f\u4e2d\u7684\u5176\u4ed6 G \u90fd\u4f1a\u88ab\u997f\u6b7b\u3002\u6240\u4ee5\u540e\u9762 Go \u8bbe\u8ba1\u56e2\u961f\u5728 Go 1.2 \u4e2d\u5b9e\u73b0\u4e86\u57fa\u4e8e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002 \u8fd9\u79cd\u62a2\u5360\u5f0f\u8c03\u5ea6\u7684\u539f\u7406\u5219\u662f\u5728\u6bcf\u4e2a\u51fd\u6570\u6216\u65b9\u6cd5\u7684\u5165\u53e3\uff0c\u52a0\u4e0a\u4e00\u6bb5\u989d\u5916\u7684\u4ee3\u7801\uff0c\u8ba9 runtime \u6709\u673a\u4f1a\u68c0\u67e5\u662f\u5426\u9700\u8981\u6267\u884c\u62a2\u5360\u8c03\u5ea6\u3002 \u57fa\u4e8e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u7684\u5de5\u4f5c\u539f\u7406\u5927\u81f4\u5982\u4e0b\uff1a \u7f16\u8bd1\u5668\u4f1a\u5728\u8c03\u7528\u51fd\u6570\u524d\u63d2\u5165\u4e00\u4e2a runtime.morestack \u51fd\u6570 Go \u8bed\u8a00\u8fd0\u884c\u65f6\u4f1a\u5728\u5783\u573e\u56de\u6536\u6682\u505c\u7a0b\u5e8f\u3001\u7cfb\u7edf\u76d1\u63a7\u53d1\u73b0 Goroutine \u8fd0\u884c\u8d85\u8fc7 10ms \u65f6\u53d1\u51fa\u62a2\u5360\u8bf7\u6c42\uff0c\u6b64\u65f6\u4f1a\u8bbe\u7f6e\u4e00\u4e2a StackPreempt \u5b57\u6bb5\u503c\u4e3a StackPreempt \uff0c\u6807\u793a\u5f53\u524d Goroutine \u53d1\u51fa\u4e86\u62a2\u5360\u8bf7\u6c42\u3002 \u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u53ef\u80fd\u4f1a\u6267\u884c\u7f16\u8bd1\u5668\u63d2\u5165\u7684 runtime.morestack \u51fd\u6570\uff0c\u5b83\u8c03\u7528\u7684 runtime.newstack \u4f1a\u68c0\u67e5 Goroutine \u7684 stackguard0 \u5b57\u6bb5\u662f\u5426\u4e3a StackPreempt \u5982\u679c stackguard0 \u662f StackPreempt\uff0c\u5c31\u4f1a\u89e6\u53d1\u62a2\u5360\u8ba9\u51fa\u5f53\u524d\u7ebf\u7a0b \u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u867d\u7136\u589e\u52a0\u4e86\u8fd0\u884c\u65f6\u7684\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355\uff0c\u4e5f\u6ca1\u6709\u5e26\u6765\u8fc7\u591a\u7684\u989d\u5916\u5f00\u9500\uff0c\u6240\u4ee5\u5728 Go \u8bed\u8a00\u4e2d\u4f7f\u7528\u4e86 10 \u51e0\u4e2a\u7248\u672c\u3002\u56e0\u4e3a\u8fd9\u91cc\u7684\u62a2\u5360\u662f\u901a\u8fc7\u7f16\u8bd1\u5668\u63d2\u5165\u51fd\u6570\u5b9e\u73b0\u7684\uff0c\u8fd8\u662f \u9700\u8981\u51fd\u6570\u8c03\u7528\u4f5c\u4e3a\u5165\u53e3\u624d\u80fd\u89e6\u53d1\u62a2\u5360 \uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u79cd\u534f\u4f5c\u5f0f\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u53ea\u80fd\u8bf4\u5c40\u90e8\u89e3\u51b3\u4e86\u201c\u997f\u6b7b\u201d\u95ee\u9898\uff0c\u5bf9\u4e8e\u6ca1\u6709\u51fd\u6570\u8c03\u7528\uff0c\u7eaf\u7b97\u6cd5\u5faa\u73af\u8ba1\u7b97\u7684 G\uff0cscheduler \u4f9d\u7136\u65e0\u6cd5\u62a2\u5360\u3002","title":"\u57fa\u4e8e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6"},{"location":"pl/golang/gmp/#_5","text":"Go \u8bed\u8a00\u5728 1.14 \u7248\u672c\u4e2d\u5b9e\u73b0\u4e86\u975e\u534f\u4f5c\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u5728\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\u91cd\u6784\u5df2\u6709\u7684\u903b\u8f91\u5e76\u4e3a Goroutine \u589e\u52a0\u65b0\u7684\u72b6\u6001\u548c\u5b57\u6bb5\u6765\u652f\u6301\u62a2\u5360\u3002 \u2026\u2026","title":"\u57fa\u4e8e\u4fe1\u53f7\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6"},{"location":"pl/golang/gmp/#go-func","text":"\u57fa\u4e8e\u4e0a\u9762\u7684\u6a21\u578b\uff0c\u5f53\u6211\u4eec\u4f7f\u7528 go func() \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 goroutine \u7684\u65f6\u5019\uff0c\u5176\u8c03\u5ea6\u6d41\u7a0b\u5982\u4e0b\uff1a go func() \u521b\u5efa\u4e86\u4e00\u4e2ago routine\uff1b \u6709\u4e24\u4e2a\u5b58\u50a8G\u7684\u961f\u5217\uff0c\u4e2a\u662f\u5c40\u90e8\u8c03\u5ea6\u5668 P \u7684\u672c\u5730\u961f\u5217\u3001\u4e00\u4e2a\u662f\u5168\u5c40 G \u961f\u5217\u3002\u65b0\u521b\u5efa\u7684 G \u4f1a\u5148\u4fdd\u5b58\u5728 P \u7684\u672c\u5730\u961f\u5217\u4e2d\uff0c\u5982\u679c P \u7684\u672c\u5730\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u5c31\u4f1a\u4fdd\u5b58\u5728\u5168\u5c40\u7684\u961f\u5217\u4e2d\uff1b G \u53ea\u80fd\u8fd0\u884c\u5728 M \u4e2d\uff0c\u4e00\u4e2a M \u5fc5\u987b\u6301\u6709\u4e00\u4e2a P\uff0cM \u4e0e P \u662f 1\uff1a1 \u7684\u5173\u7cfb\u3002M \u4f1a\u4ece P \u7684\u672c\u5730\u961f\u5217\u5f39\u51fa\u4e00\u4e2a\u53ef\u6267\u884c\u72b6\u6001\u7684 G \u6765\u6267\u884c\uff0c\u5982\u679c P \u7684\u672c\u5730\u961f\u5217\u4e3a\u7a7a\uff0c\u5c31\u4f1a\u60f3\u5176\u4ed6\u7684 MP \u7ec4\u5408\u5077\u53d6\u4e00\u4e2a\u53ef\u6267\u884c\u7684 G \u6765\u6267\u884c\uff1b \u4e00\u4e2a M \u8c03\u5ea6 G \u6267\u884c\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u5faa\u73af\u673a\u5236\uff1b \u5f53 M \u6267\u884c\u67d0\u4e00\u4e2a G \u65f6\u5019\u5982\u679c\u53d1\u751f\u4e86 syscall \u6216\u5219\u5176\u4f59\u963b\u585e\u64cd\u4f5c \uff0cM \u4f1a\u963b\u585e\uff0c\u5982\u679c\u5f53\u524d\u6709\u4e00\u4e9b G \u5728\u6267\u884c\uff0cruntime \u4f1a\u628a\u8fd9\u4e2a\u7ebf\u7a0b M \u4ece P \u4e2d\u6458\u9664 (detach)\uff0c\u7136\u540e\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b (\u5982\u679c\u6709\u7a7a\u95f2\u7684\u7ebf\u7a0b\u53ef\u7528\u5c31\u590d\u7528\u7a7a\u95f2\u7ebf\u7a0b) \u6765\u670d\u52a1\u4e8e\u8fd9\u4e2a P\uff1b \u5f53 M \u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\u65f6\u5019\uff0c\u8fd9\u4e2a G \u4f1a\u5c1d\u8bd5\u83b7\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684 P \u6267\u884c\uff0c\u5e76\u653e\u5165\u5230\u8fd9\u4e2a P \u7684\u672c\u5730\u961f\u5217\u3002\u5982\u679c\u83b7\u53d6\u4e0d\u5230 P\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ebf\u7a0b M \u53d8\u6210\u4f11\u7720\u72b6\u6001\uff0c \u52a0\u5165\u5230\u7a7a\u95f2\u7ebf\u7a0b\u4e2d\uff0c\u7136\u540e\u8fd9\u4e2a G \u4f1a\u88ab\u653e\u5165\u5168\u5c40\u961f\u5217\u4e2d\u3002","title":"go func()\u7684\u8c03\u5ea6\u6d41\u7a0b"},{"location":"pl/golang/gmp/#goroutine","text":"\u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ebf\u7a0b\u548c\u4e00\u4e2a groutine \u6bd4\u8f83\u7279\u6b8a\uff0c\u90a3\u5c31\u662f M0 \u548c G0 \uff1a M0 \uff1a M0 \u662f\u542f\u52a8\u7a0b\u5e8f\u540e\u7684\u7f16\u53f7\u4e3a 0 \u7684\u4e3b\u7ebf\u7a0b\uff0c\u8fd9\u4e2a M \u5bf9\u5e94\u7684\u5b9e\u4f8b\u4f1a\u5728\u5168\u5c40\u53d8\u91cf runtime.m0 \u4e2d\uff0c\u4e0d\u9700\u8981\u5728 heap \u4e0a\u5206\u914d\uff0cM0 \u8d1f\u8d23\u6267\u884c\u521d\u59cb\u5316\u64cd\u4f5c\u548c\u542f\u52a8\u7b2c\u4e00\u4e2a G\uff0c \u5728\u4e4b\u540e M0 \u5c31\u548c\u5176\u4ed6\u7684 M \u4e00\u6837\u4e86 \u3002 G0 \uff1a G0 \u662f\u6bcf\u6b21\u542f\u52a8\u4e00\u4e2a M \u90fd\u4f1a\u7b2c\u4e00\u4e2a\u521b\u5efa\u7684 gourtine\uff0cG0 \u4ec5\u7528\u4e8e\u8d1f\u8d23\u8c03\u5ea6\u7684 G\uff0cG0 \u4e0d\u6307\u5411\u4efb\u4f55\u53ef\u6267\u884c\u7684\u51fd\u6570\uff0c\u6bcf\u4e2a M \u90fd\u4f1a\u6709\u4e00\u4e2a\u81ea\u5df1\u7684 G0\u3002\u5728\u8c03\u5ea6\u6216\u7cfb\u7edf\u8c03\u7528\u65f6\u4f1a\u4f7f\u7528 G0 \u7684\u6808\u7a7a\u95f4\uff0c\u5168\u5c40\u53d8\u91cf\u7684 G0 \u662f M0 \u7684 G0\u3002 \u5bf9\u4e0b\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u5206\u6790\uff1a package main import \"fmt\" func main () { fmt . Println ( \"Hello scheduler\" ) } \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u5206\u6790\uff1a runtime \u521b\u5efa\u6700\u521d\u7684\u7ebf\u7a0b m0 \u548c g0 \uff0c\u628a\u4e24\u8005\u5173\u8054\u8d77\u6765\u3002 \u8c03\u5ea6\u5668\u521d\u59cb\u5316\uff1a\u521d\u59cb\u5316m0\uff0c\u6808\uff0c\u5783\u573e\u56de\u6536\uff0c\u4ee5\u53ca\u521b\u5efa\u548c\u521d\u59cb\u5316\u7531GOMAXPROCS\u4e2aP\u6784\u6210\u7684P\u5217\u8868 \u5b9e\u4f8b\u4e2d\u7684mian\u51fd\u6570\u662f main.main \uff0cruntime\u4e2d\u4e5f\u6709\u4e00\u4e2a runtime.main \uff0c\u4ee3\u7801\u7ecf\u8fc7\u7f16\u8bd1\u4e4b\u540e\uff0c runtime.main \u4f1a\u8c03\u7528 main.main \uff0c\u7a0b\u5e8f\u9a71\u52a8\u662f\u4f1a\u4e3aruntime.main\u521b\u5efa goroutine \uff0c\u7136\u540e main goroutine \u52a0\u5165\u5230P\u7684\u672c\u5730\u961f\u5217 \u542f\u52a8m0\uff0cm0\u5df2\u7ecf\u7ed1\u5b9a\u4e86P\uff0c\u4f1a\u4eceP\u7684\u672c\u5730\u961f\u5217\u4e2d\u83b7\u53d6G\uff0c\u83b7\u53d6\u5230 main gouroutine G \u62e5\u6709\u6808\uff0cM \u6839\u636e G \u4e2d\u7684\u6808\u4fe1\u606f\u548c\u8c03\u5ea6\u4fe1\u606f\u8bbe\u7f6e\u8fd0\u884c\u73af\u5883 M \u8fd0\u884c G G \u9000\u51fa\uff0c\u518d\u6b21\u56de\u5230 M \u83b7\u53d6\u53ef\u8fd0\u884c\u7684 G\uff0c\u8fd9\u6837\u91cd\u590d\u4e0b\u53bb\uff0c\u76f4\u5230 main.main \u9000\u51fa\uff0c runtime.main \u6267\u884c Defer \u548c Panic \u5904\u7406\uff0c\u6216\u8c03\u7528 runtime.exit \u9000\u51fa\u7a0b\u5e8f \u8c03\u5ea6\u5668\u7684\u751f\u547d\u5468\u671f\u51e0\u4e4e\u5360\u6ee1\u4e86\u4e00\u4e2aGo\u7a0b\u5e8f\u7684\u4e00\u751f\uff0c runtime.main \u7684 goroutine \u6267\u884c\u4e4b\u524d\u90fd\u662f\u4e3a\u8c03\u5ea6\u5668\u505a\u51c6\u5907\u5de5\u4f5c\uff0c runtime.main \u7684 goroutine \u8fd0\u884c\uff0c\u624d\u662f\u8c03\u5ea6\u5668\u7684\u771f\u6b63\u5f00\u59cb\uff0c\u76f4\u5230 runtime.main \u7ed3\u675f\u800c\u7ed3\u675f\u3002","title":"goroutine\u7684\u751f\u547d\u5468\u671f"},{"location":"pl/golang/gmp/#_6","text":"","title":"\u8c03\u5ea6\u5668\u573a\u666f\u5206\u6790"},{"location":"pl/golang/gmp/#1","text":"p1\u62e5\u6709g1\uff0cm1\u83b7\u53d6\u5230p1\u540e\u5f00\u59cb\u8fd0\u884cg1\uff0cg1\u901a\u8fc7 go func \u4ea7\u751f\u7684\u5c40\u90e8\u6027g2\u6709\u9650\u653e\u5230p1\u7684\u672c\u5730\u961f\u5217\u91cc","title":"\u573a\u666f1"},{"location":"pl/golang/gmp/#2","text":"g1\u8fd0\u884c\u5b8c\u6210\u540e(\u51fd\u6570\uff1a goexit )\uff0cm \u4e0a\u8fd0\u884c\u7684 goroutine \u5207\u6362\u4e3a g0\uff0cg0 \u8d1f\u8d23\u8c03\u5ea6\u65f6\u534f\u7a0b\u7684\u5207\u6362\uff08\u51fd\u6570\uff1a schedule \uff09 \u3002\u4ece p1 \u7684\u672c\u5730\u961f\u5217\u53d6 g2\uff0c\u4ece g0 \u5207\u6362\u5230 g2\uff0c\u5e76\u5f00\u59cb\u8fd0\u884c g2 (\u51fd\u6570\uff1a execute )\u3002\u5b9e\u73b0\u4e86**\u7ebf\u7a0b m1 \u7684\u590d\u7528**\u3002","title":"\u573a\u666f2"},{"location":"pl/golang/gmp/#3","text":"\u5047\u8bbe\u6bcf\u4e2a p \u7684\u672c\u5730\u961f\u5217\u53ea\u80fd\u5b58 4 \u4e2a g\u3002g2 \u8981\u521b\u5efa 6 \u4e2a g\uff0c\u524d 4 \u4e2ag\uff08 g3, g4, g5, g6 \uff09\u5df2\u7ecf\u52a0\u5165 p1 \u7684\u672c\u5730\u961f\u5217\uff0cp1 \u672c\u5730\u961f\u5217\u6ee1\u4e86\u3002 g2 \u5728\u521b\u5efa g7 \u7684\u65f6\u5019\uff0c\u53d1\u73b0 p1 \u7684\u672c\u5730\u961f\u5217\u5df2\u6ee1\uff0c\u9700\u8981\u6267\u884c**\u8d1f\u8f7d\u5747\u8861**\uff0c\u628a p1 \u4e2d\u672c\u5730\u961f\u5217\u4e2d\u524d**\u4e00\u534a\u7684 g**\uff0c\u8fd8\u6709\u65b0\u521b\u5efa\u7684 g **\u8f6c\u79fb**\u5230\u5168\u5c40\u961f\u5217 Note \u5b9e\u73b0\u4e2d\u5e76\u4e0d\u4e00\u5b9a\u662f\u65b0\u7684 g\uff0c\u5982\u679c g \u662f g2 \u4e4b\u540e\u5c31\u6267\u884c\u7684\uff0c\u4f1a\u88ab\u4fdd\u5b58\u5728\u672c\u5730\u961f\u5217\uff0c\u5229\u7528\u67d0\u4e2a\u8001\u7684 g \u66ff\u6362\u65b0 g \u52a0\u5165\u5168\u5c40\u961f\u5217\uff09\uff0c\u8fd9\u4e9b g \u88ab\u8f6c\u79fb\u5230\u5168\u5c40\u961f\u5217\u65f6\uff0c\u4f1a\u88ab\u6253\u4e71\u987a\u5e8f\u3002 \u5982\u679c\u6b64\u65f6 G2 \u521b\u5efa G8 \u65f6\uff0cP1 \u7684\u672c\u5730\u961f\u5217\u672a\u6ee1\uff0c\u6240\u4ee5 G8 \u4f1a\u88ab\u52a0\u5165\u5230 P1 \u7684\u672c\u5730\u961f\u5217\uff1a","title":"\u573a\u666f3"},{"location":"pl/golang/gmp/#4","text":"\u5728\u521b\u5efa g \u65f6\uff0c\u8fd0\u884c\u7684 g \u4f1a\u5c1d\u8bd5\u5524\u9192\u5176\u4ed6\u7a7a\u95f2\u7684 p \u548c m \u7ec4\u5408\u53bb\u6267\u884c \u3002\u5047\u5b9a g2 \u5524\u9192\u4e86 m2\uff0cm2 \u7ed1\u5b9a\u4e86 p2\uff0c\u5e76\u8fd0\u884c g0\uff0c\u4f46 p2 \u672c\u5730\u961f\u5217\u6ca1\u6709 g\uff0cm2 \u6b64\u65f6\u4e3a\u81ea\u65cb\u7ebf\u7a0b\uff08\u6ca1\u6709 G \u4f46\u4e3a\u8fd0\u884c\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u4e0d\u65ad\u5bfb\u627e g\uff09\u3002 m2 \u63a5\u4e0b\u6765\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217 (GQ) \u53d6\u4e00\u6279 g \u653e\u5230 p2 \u7684\u672c\u5730\u961f\u5217\uff08\u51fd\u6570\uff1a findrunnable \uff09\u3002m2 \u4ece\u5168\u5c40\u961f\u5217\u53d6\u7684 g \u6570\u91cf\u7b26\u5408\u4e0b\u9762\u7684\u516c\u5f0f\uff1a n = min ( len ( GQ ) / MAXPROCS + 1 , len ( GQ ) / 2 ) \u516c\u5f0f\u7684\u542b\u4e49\u662f\uff0c\u81f3\u5c11\u4ece\u5168\u5c40\u961f\u5217\u53d6 1 \u4e2a g\uff0c\u4f46\u6bcf\u6b21\u4e0d\u8981\u4ece\u5168\u5c40\u961f\u5217\u79fb\u52a8\u592a\u591a\u7684 g \u5230 p \u672c\u5730\u961f\u5217\uff0c\u7ed9\u5176\u4ed6 p \u7559\u70b9\u3002\u8fd9\u662f**\u4ece\u5168\u5c40\u961f\u5217\u5230 P \u672c\u5730\u961f\u5217\u7684\u8d1f\u8f7d\u5747\u8861**\u3002 \u5047\u5b9a\u573a\u666f\u4e2d\u4e00\u5171\u6709 4 \u4e2a P\uff08 GOMAXPROCS=4 \uff09\uff0c\u6240\u4ee5 m2 \u53ea\u4ece\u80fd\u4ece\u5168\u5c40\u961f\u5217\u53d6 1 \u4e2a g\uff08\u5373 g3\uff09\u79fb\u52a8 p2 \u672c\u5730\u961f\u5217\uff0c\u7136\u540e\u5b8c\u6210\u4ece g0 \u5230 g3 \u7684\u5207\u6362\uff0c\u8fd0\u884c g3:","title":"\u573a\u666f4"},{"location":"pl/golang/gmp/#5","text":"\u5047\u8bbe g2 \u4e00\u76f4\u5728 m1\u4e0a\u8fd0\u884c\uff0c\u7ecf\u8fc7 2 \u8f6e\u540e\uff0cm2 \u5df2\u7ecf\u628a g7\u3001g4 \u4e5f\u632a\u5230\u4e86p2\u7684\u672c\u5730\u961f\u5217\u5e76\u5b8c\u6210\u8fd0\u884c\uff0c\u5168\u5c40\u961f\u5217\u548c p2 \u7684\u672c\u5730\u961f\u5217\u90fd\u7a7a\u4e86\uff0c\u5982\u4e0b\u56fe\u5de6\u8fb9\u6240\u793a\u3002 \u5168\u5c40\u961f\u5217\u5df2\u7ecf\u6ca1\u6709 g\uff0c\u90a3 m \u5c31\u8981\u6267\u884c work stealing\uff1a\u4ece\u5176\u4ed6\u6709 g \u7684 p \u54ea\u91cc\u5077\u53d6\u4e00\u534a g \u8fc7\u6765\uff0c\u653e\u5230\u81ea\u5df1\u7684 P \u672c\u5730\u961f\u5217 \u3002p2 \u4ece p1 \u7684\u672c\u5730\u961f\u5217\u5c3e\u90e8\u53d6\u4e00\u534a\u7684 g\uff0c\u672c\u4f8b\u4e2d\u4e00\u534a\u5219\u53ea\u6709 1 \u4e2a g8\uff0c\u653e\u5230 p2 \u7684\u672c\u5730\u961f\u5217\uff0c\u60c5\u51b5\u5982\u4e0b\u56fe\u53f3\u8fb9\uff1a","title":"\u573a\u666f5"},{"location":"pl/golang/gmp/#6","text":"p1 \u672c\u5730\u961f\u5217 g5\u3001g6 \u5df2\u7ecf\u88ab\u5176\u4ed6 m \u5077\u8d70\u5e76\u8fd0\u884c\u5b8c\u6210\uff0c\u5f53\u524d m1 \u548c m2 \u5206\u522b\u5728\u8fd0\u884c g2 \u548c g8\uff0cm3 \u548c m4 \u6ca1\u6709goroutine \u53ef\u4ee5\u8fd0\u884c\uff0cm3 \u548c m4 \u5904\u4e8e**\u81ea\u65cb\u72b6\u6001**\uff0c\u5b83\u4eec\u4e0d\u65ad\u5bfb\u627e goroutine\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u8981\u8ba9 m3 \u548c m4 \u81ea\u65cb\uff1f\u81ea\u65cb\u672c\u8d28\u662f\u5728\u8fd0\u884c\uff0c\u7ebf\u7a0b\u5728\u8fd0\u884c\u5374\u6ca1\u6709\u6267\u884c g\uff0c\u5c31\u53d8\u6210\u4e86\u6d6a\u8d39CPU\uff0c\u9500\u6bc1\u7ebf\u7a0b\u53ef\u4ee5\u8282\u7ea6CPU\u8d44\u6e90\u4e0d\u662f\u66f4\u597d\u5417\uff1f \u5b9e\u9645\u4e0a\uff0c\u521b\u5efa\u548c\u9500\u6bc1CPU\u90fd\u662f\u6d6a\u8d39\u65f6\u95f4\u7684\uff0c\u6211\u4eec**\u5e0c\u671b\u5f53\u6709\u65b0 goroutine \u521b\u5efa\u65f6\uff0c\u7acb\u523b\u80fd\u6709 m \u8fd0\u884c\u5b83**\uff0c\u5982\u679c\u9500\u6bc1\u518d\u65b0\u5efa\u5c31\u589e\u52a0\u4e86\u65f6\u5ef6\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002 \u5f53\u7136\u4e5f\u8003\u8651\u4e86\u8fc7\u591a\u7684\u81ea\u65cb\u7ebf\u7a0b\u662f\u6d6a\u8d39 CPU\uff0c\u6240\u4ee5\u7cfb\u7edf\u4e2d\u6700\u591a\u6709 GOMAXPROCS \u4e2a\u81ea\u65cb\u7684\u7ebf\u7a0b\uff0c\u591a\u4f59\u7684\u6ca1\u4e8b\u505a\u7684\u7ebf\u7a0b\u4f1a\u8ba9\u4ed6\u4eec\u4f11\u7720\uff08\u51fd\u6570\uff1a notesleep() \u5b9e\u73b0\u4e86\u8fd9\u4e2a\u601d\u8def\uff09\u3002","title":"\u573a\u666f6"},{"location":"pl/golang/gmp/#7","text":"\u5047\u5b9a\u5f53\u524d\u9664\u4e86 m3 \u548c m4 \u4e3a\u81ea\u65cb\u7ebf\u7a0b\uff0c\u8fd8\u6709 m5 \u548c m6 \u4e3a\u81ea\u65cb\u7ebf\u7a0b\uff0cg8 \u521b\u5efa\u4e86 g9\uff0cg9 \u4f1a\u653e\u5165\u672c\u5730\u961f\u5217\u3002\u52a0\u5165\u6b64\u65f6g8 \u8fdb\u884c\u4e86**\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528**\uff0cm2 \u548c p2 \u7acb\u5373\u89e3\u7ed1\uff0cp2 \u4f1a\u6267\u884c\u4ee5\u4e0b\u5224\u65ad\uff1a\u5982\u679c p2 \u672c\u5730\u961f\u5217\u6709 g\u3001\u5168\u5c40\u961f\u5217\u6709 g \u6216\u6709\u7a7a\u95f2\u7684 m\uff0cp2 \u90fd\u4f1a\u7acb\u9a6c\u5524\u91921\u4e2a m \u548c\u5b83\u7ed1\u5b9a\uff0c\u5426\u5219 p2 \u5219\u4f1a\u52a0\u5165\u5230\u7a7a\u95f2 P \u5217\u8868\uff0c\u7b49\u5f85 m \u6765\u83b7\u53d6\u53ef\u7528\u7684 p\u3002\u672c\u573a\u666f\u4e2d\uff0cp2 \u672c\u5730\u961f\u5217\u6709 g\uff0c\u53ef\u4ee5\u548c\u5176\u4ed6\u81ea\u65cb\u7ebf\u7a0b m5 \u7ed1\u5b9a\u3002","title":"\u573a\u666f7"},{"location":"pl/golang/gmp/#8","text":"\u5047\u8bbe g8 \u521b\u5efa\u4e86 g9\uff0c\u5047\u5982 g8 \u8fdb\u884c\u4e86 \u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528 \uff08CGO\u4f1a\u662f\u8fd9\u79cd\u65b9\u5f0f\uff0c\u89c1 cgocall() \uff09\uff0cm2 \u548c p2 \u4f1a\u89e3\u7ed1\uff0c\u4f46 m2 \u4f1a\u8bb0\u4f4f p\uff0c\u7136\u540e g8 \u548c m2 \u8fdb\u5165\u7cfb\u7edf\u8c03\u7528\u72b6\u6001\u3002\u5f53 g8 \u548c m2 \u9000\u51fa\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u83b7\u53d6 p2\uff0c\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\uff0c\u5219\u83b7\u53d6\u7a7a\u95f2\u7684 p\uff0c\u5982\u679c\u4f9d\u7136\u6ca1\u6709\uff0cg8 \u4f1a\u88ab\u8bb0\u4e3a\u53ef\u8fd0\u884c\u72b6\u6001\uff0c\u5e76\u52a0\u5165\u5230\u5168\u5c40\u961f\u5217\u3002","title":"\u573a\u666f8"},{"location":"pl/golang/gmp/#9","text":"\u524d\u9762\u8bf4\u8fc7\uff0cGo \u8c03\u5ea6\u5728 go1.12 \u5b9e\u73b0\u4e86\u62a2\u5360\uff0c\u5e94\u8be5\u66f4\u7cbe\u786e\u7684\u79f0\u4e3a \u57fa\u4e8e\u534f\u4f5c\u7684\u8bf7\u6c42\u5f0f\u62a2\u5360 \uff0c\u90a3\u662f\u56e0\u4e3a go \u8c03\u5ea6\u5668\u7684\u62a2\u5360\u548c OS \u7684\u7ebf\u7a0b\u62a2\u5360\u6bd4\u8d77\u6765\u5f88\u67d4\u548c\uff0c\u4e0d\u66b4\u529b\uff0c\u4e0d\u4f1a\u8bf4\u7ebf\u7a0b\u65f6\u95f4\u7247\u5230\u4e86\uff0c\u6216\u8005\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u5230\u4e86\uff0c\u6267\u884c\u62a2\u5360\u8c03\u5ea6\u3002 go \u7684\u62a2\u5360\u8c03\u5ea6\u67d4\u548c\u5230\u53ea\u7ed9 goroutine \u53d1\u9001 1 \u4e2a\u62a2\u5360\u8bf7\u6c42\uff0c\u81f3\u4e8e goroutine \u4f55\u65f6\u505c\u4e0b\u6765\uff0c\u90a3\u5c31\u7ba1\u4e0d\u5230\u4e86 \u3002 \u62a2\u5360\u8bf7\u6c42\u9700\u8981\u6ee1\u8db32\u4e2a\u6761\u4ef6\u4e2d\u76841\u4e2a\uff1a G \u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u8d85\u8fc7 20us G \u8fd0\u884c\u8d85\u8fc7 10ms\u3002\u8c03\u5ea6\u5668\u5728\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u542f\u52a8\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b sysmon\uff0c\u5b83\u8d1f\u8d23\u6240\u6709\u7684\u76d1\u63a7\u5de5\u4f5c\uff0c\u5176\u4e2d 1 \u9879\u5c31\u662f\u62a2\u5360\uff0c\u53d1\u73b0\u6ee1\u8db3\u62a2\u5360\u6761\u4ef6\u7684 G \u65f6\uff0c\u5c31\u53d1\u51fa\u62a2\u5360\u8bf7\u6c42\u3002","title":"\u573a\u666f9"},{"location":"pl/golang/gmp/#_7","text":"\u573a\u666f \u72b6\u6001 \u7ed3\u679c 1 \u5f53\u524dg1\u521b\u5efa\u4e86\u65b0\u7684g2 \u4f18\u5148\u52a0\u5165\u672c\u5730\u961f\u5217 2 \u5f53\u524dm1\u4e0b\u7684g1\u8fd0\u884c\u5b8c\u6210 m1\u5207\u6362\u5230g0\uff0cg0\u8d1f\u8d23\u8c03\u5ea6\u534f\u7a0b\u5207\u6362\uff0c\u5207\u6362\u5230\u672c\u5730\u961f\u5217g2\uff0c\u5b9e\u73b0\u4e86m1\u590d\u7528 3 \u672c\u5730\u961f\u5217\u6ee1 \u5c06\u672c\u5730\u961f\u5217\u7684\u4e00\u534a\u8fc1\u79fb\u5230\u5168\u5c40\u961f\u5217\u4e2d\u53bb 4 \u521b\u5efag\u65f6\uff0c\u8fd0\u884c\u7684g\u5524\u9192\u5176\u4ed6\u7684p\u548cm m2\u4f1a\u4ece\u5168\u5c40\u961f\u5217\u53d6\u4e00\u6279g\u653e\u5230p2\u4e2d 5 \u5168\u5c40\u961f\u5217\u4e3a\u7a7a m\u4f1a\u4ece\u5176\u4ed6\u7684\u6709g\u7684p\u4e2d\u5077\u53d6\u4e00\u4e9bg\u8fc7\u6765\u3002\u653e\u5230\u672c\u5730 6 \u6ca1\u6709\u53ef\u6267\u884c\u7684g\u4e86 GOMAXPROCS\u4e2am\u4f1a\u8fdb\u884c\u81ea\u65cb 7 \u7cfb\u7edf\u8c03\u7528\u5bfc\u81f4\u4e00\u4e2ag\u963b\u585e\u4e86 p\u4f1a\u548cm\u89e3\u9664\u7ed1\u5b9a\uff0c\u5e26\u7740g\u53bb\u5bfb\u627e\u7a7a\u95f2\u7684m 8 \u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528 p\u4f1a\u548cm\u63a5\u89e6\u7ed1\u5b9a\uff0c\u5bfb\u627e\u65b0\u7684m\uff0c\u539f\u6765\u7684m\u5728\u6267\u884c\u5b8c\u8c03\u7528\u540e\uff0c\u4f1a\u68c0\u67e5p\u662f\u5426\u88ab\u5360\u7528\uff0c\u5982\u679c\u6ca1\u6709\u5219\u91cd\u65b0\u6267\u884cp 9 \u534f\u4f5c\u5f0f\u62a2\u5360 \u4e0d\u4f1a\u7ba1goroutine\u4ec0\u4e48\u65f6\u5019\u505c\u4e0b\u6765\u3002\uff08go1.12)","title":"\u573a\u666f\u603b\u7ed3"},{"location":"pl/golang/gmp/#_8","text":"","title":"\u72b6\u6001\u6c47\u603b"},{"location":"pl/golang/gmp/#g","text":"\u72b6\u6001 \u63cf\u8ff0 _Gidle \u521a\u521a\u88ab\u5206\u914d\u5e76\u4e14\u8fd8\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u503c\u4e3a0\uff0c\u4e3a\u521b\u5efagoroutine\u540e\u7684\u9ed8\u8ba4\u503c _Grunnable \u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u6ca1\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u5b58\u50a8\u5728\u8fd0\u884c\u961f\u5217\u4e2d\uff0c\u53ef\u80fd\u5728\u67d0\u4e2aP\u7684\u672c\u5730\u961f\u5217\u6216\u5168\u5c40\u961f\u5217\u4e2d _Grunning \u6b63\u5728\u6267\u884c\u4ee3\u7801\u7684goroutine\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743 _Gsyscall \u6b63\u5728\u6267\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\uff0c\u88ab\u8d4b\u4e88\u4e86\u5185\u6838\u7ebf\u7a0b M \u4f46\u662f\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a _Gwaiting \u7531\u4e8e\u8fd0\u884c\u65f6\u800c\u88ab\u963b\u585e\uff0c\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\u5e76\u4e14\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a\uff0c\u4f46\u662f\u53ef\u80fd\u5b58\u5728\u4e8e Channel \u7684\u7b49\u5f85\u961f\u5217\u4e0a _Gdead \u5f53\u524dgoroutine\u672a\u88ab\u4f7f\u7528\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u80fd\u6709\u5206\u914d\u7684\u6808\uff0c\u5206\u5e03\u5728\u7a7a\u95f2\u5217\u8868 gFree\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u521a\u521a\u521d\u59cb\u5316\u7684 goroutine\uff0c\u4e5f\u53ef\u80fd\u662f\u6267\u884c\u4e86 goexit \u9000\u51fa\u7684 goroutine _Gcopystack \u6808\u6b63\u5728\u88ab\u62f7\u8d1d\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a _Gpreempted \u7531\u4e8e\u62a2\u5360\u800c\u88ab\u963b\u585e\uff0c\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\u5e76\u4e14\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a\uff0c\u7b49\u5f85\u5524\u9192 _Gscan GC \u6b63\u5728\u626b\u63cf\u6808\u7a7a\u95f4\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u72b6\u6001\u540c\u65f6\u5b58\u5728","title":"G\u72b6\u6001"},{"location":"pl/golang/gmp/#p_1","text":"\u72b6\u6001 \u63cf\u8ff0 _Pidle \u5904\u7406\u5668\u6ca1\u6709\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668\uff0c\u88ab\u7a7a\u95f2\u961f\u5217\u6216\u8005\u6539\u53d8\u5176\u72b6\u6001\u7684\u7ed3\u6784\u6301\u6709\uff0c\u8fd0\u884c\u961f\u5217\u4e3a\u7a7a _Prunning \u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5e76\u4e14\u6b63\u5728\u6267\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668 _Psyscall \u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\uff0c\u5f53\u524d\u7ebf\u7a0b\u9677\u5165\u7cfb\u7edf\u8c03\u7528 _Pgcstop \u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5f53\u524d\u5904\u7406\u5668\u7531\u4e8e\u5783\u573e\u56de\u6536\u88ab\u505c\u6b62 _Pdead \u5f53\u524d\u5904\u7406\u5668\u5df2\u7ecf\u4e0d\u88ab\u4f7f\u7528","title":"P\u72b6\u6001"},{"location":"pl/golang/gmp/#m_1","text":"\u81ea\u65cb\u7ebf\u7a0b \uff1a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u4f46\u662f\u6ca1\u6709\u53ef\u6267\u884c goroutine \u7684\u7ebf\u7a0b\uff0c\u6570\u91cf\u6700\u591a\u4e3a GOMAXPROC\uff0c\u82e5\u662f\u6570\u91cf\u5927\u4e8e GOMAXPROC \u5c31\u4f1a\u8fdb\u5165\u4f11\u7720\u3002 \u975e\u81ea\u65cb\u7ebf\u7a0b \uff1a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u6709\u53ef\u6267\u884c goroutine \u7684\u7ebf\u7a0b\u3002","title":"M \u72b6\u6001"},{"location":"pl/golang/gmp/#_9","text":"\u590d\u7528\u7ebf\u7a0b \uff1a\u534f\u7a0b\u672c\u8eab\u5c31\u662f\u8fd0\u884c\u5728\u4e00\u7ec4\u7ebf\u7a0b\u4e4b\u4e0a\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u9891\u7e41\u7684\u521b\u5efa\u3001\u9500\u6bc1\u7ebf\u7a0b\uff0c\u800c\u662f\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u590d\u7528\u3002\u5728\u8c03\u5ea6\u5668\u4e2d\u590d\u7528\u7ebf\u7a0b\u8fd8\u67092\u4e2a\u4f53\u73b0\uff1a work stealing\uff0c\u5f53\u672c\u7ebf\u7a0b\u65e0\u53ef\u8fd0\u884c\u7684 G \u65f6\uff0c\u5c1d\u8bd5\u4ece\u5176\u4ed6\u7ebf\u7a0b\u7ed1\u5b9a\u7684 P \u5077\u53d6 G\uff0c\u800c\u4e0d\u662f\u9500\u6bc1\u7ebf\u7a0b\u3002 hand off\uff0c\u5f53\u672c\u7ebf\u7a0b\u56e0\u4e3a G \u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u963b\u585e\u65f6\uff0c\u7ebf\u7a0b\u91ca\u653e\u7ed1\u5b9a\u7684 P\uff0c\u628a P \u8f6c\u79fb\u7ed9\u5176\u4ed6\u7a7a\u95f2\u7684\u7ebf\u7a0b\u6267\u884c\u3002 \u5229\u7528\u5e76\u884c \uff1aGOMAXPROCS \u8bbe\u7f6e P \u7684\u6570\u91cf\uff0c\u5f53 GOMAXPROCS \u5927\u4e8e 1 \u65f6\uff0c\u5c31\u6700\u591a\u6709 GOMAXPROCS \u4e2a\u7ebf\u7a0b\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u53ef\u80fd\u5206\u5e03\u5728\u591a\u4e2a CPU \u6838\u4e0a\u540c\u65f6\u8fd0\u884c\uff0c\u4f7f\u5f97\u5e76\u53d1\u5229\u7528\u5e76\u884c\u3002\u53e6\u5916\uff0cGOMAXPROCS \u4e5f\u9650\u5236\u4e86\u5e76\u53d1\u7684\u7a0b\u5ea6\uff0c\u6bd4\u5982 GOMAXPROCS = \u6838\u6570/2 \uff0c\u5219\u6700\u591a\u5229\u7528\u4e86\u4e00\u534a\u7684 CPU \u6838\u8fdb\u884c\u5e76\u884c\u3002","title":"\u8c03\u5ea6\u5668\u8bbe\u8ba1"},{"location":"pl/golang/gmp/#_10","text":"gmp\u8c03\u5ea6\u5668\u8be6\u89e3","title":"\u53c2\u8003\u6587\u6863"},{"location":"pl/golang/memesacape/","text":"\u5185\u5b58\u9003\u9038 \u5f15\u5165\uff0c\u4e00\u4e2a\u7b80\u5355\u601d\u8003 \u5148\u629b\u51fa\u4e00\u4e2a\u95ee\u9898\uff0c\u5728Go\u8bed\u8a00\u91cc\u4f20\u6307\u9488\u4e00\u5b9a\u6bd4\u503c\u62f7\u8d1d\u5feb\u5417\uff1foh\uff0c\u8fd9\u53ef\u80fd\u6210\u4e3a\u4e86Go\u7684\u57fa\u672c\u516b\u80a1\u6587\u4e4b\u4e00\u4e86\u3002 \u5728C\u8bed\u8a00\u91cc\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58(new/malloc)\u9700\u8981\u6211\u4eec\u624b\u52a8\u91ca\u653e\u8d44\u6e90\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u9700\u8981\u7533\u8bf7\u591a\u5c11\u5185\u5b58\u7a7a\u95f4\u53ef\u4ee5\u5f88\u597d\u7684\u638c\u63e1\u600e\u4e48\u5206\u914d\u3002\u4f46\u662f\u8fd9\u6709\u4e2a\u7f3a\u70b9\uff0c\u5982\u679c\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\uff0c\u5219\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 \u5728Go\u8bed\u8a00\u91cc\uff0cGo\u8bed\u8a00\u81ea\u5e26\u7684\u5783\u573e\u56de\u6536(GC)\u80fd\u591f\u5e2e\u52a9\u7a0b\u5e8f\u5458\u5fd8\u5374\u8d44\u6e90\u5206\u914d\u4e0e\u56de\u6536\u8fd9\u4ef6\u4e8b\uff0c\u628a\u590d\u6742\u7684\u5185\u5b58\u7ba1\u7406\u4ea4\u7ed9Go\u7f16\u8bd1\u5668\u3002 \u5806\u548c\u6808 \u5806\uff08Heap\uff09\uff1a\u4e00\u822c\u6765\u8bb2\u662f\u4eba\u4e3a\u624b\u52a8\u8fdb\u884c\u7ba1\u7406\uff0c\u624b\u52a8\u7533\u8bf7\u3001\u5206\u914d\u3001\u91ca\u653e\u3002\u4e00\u822c\u6240\u6d89\u53ca\u7684\u5185\u5b58\u5927\u5c0f\u5e76\u4e0d\u5b9a\uff0c\u4e00\u822c\u4f1a\u5b58\u653e\u8f83\u5927\u7684\u5bf9\u8c61\u3002\u53e6\u5916\u5176 \u5206\u914d\u76f8\u5bf9\u6162 \uff0c\u6d89\u53ca\u5230\u7684\u6307\u4ee4\u52a8\u4f5c\u4e5f\u76f8\u5bf9\u591a\u3002\u5806\u5206\u914d\u5185\u5b58\u9996\u5148\u9700\u8981\u53bb\u627e\u5230\u4e00\u5757\u5927\u5c0f\u5408\u9002\u7684\u5185\u5b58\u5757\u3002\u4e4b\u540e\u8981\u901a\u8fc7\u5783\u573e\u56de\u6536\u624d\u80fd\u91ca\u653e\u3002 \u6808\uff08Stack\uff09\uff1a\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7ba1\u7406\uff0c\u81ea\u52a8\u7533\u8bf7\u3001\u5206\u914d\u3001\u91ca\u653e\u3002\u4e00\u822c\u4e0d\u4f1a\u592a\u5927\uff0c\u6211\u4eec\u5e38\u89c1\u7684\u51fd\u6570\u53c2\u6570\uff08\u4e0d\u540c\u5e73\u53f0\u5141\u8bb8\u5b58\u653e\u7684\u6570\u91cf\u4e0d\u540c\uff09\uff0c \u5c40\u90e8\u53d8\u91cf \u7b49\u7b49\u90fd\u4f1a\u5b58\u653e\u5728\u6808\u4e0a\u3002\u6808\u5206\u914d\u5185\u5b58\u53ea\u9700\u8981\u4e24\u4e2aCPU\u6307\u4ee4\uff1a\u201cPUSH\u201d\u548c\u201cRELEASE\u201d\u5206\u914d\u548c\u91ca\u653e\u3002 \u5185\u5b58\u4ece\u6808escape\u5230\u5806\u7684\u8fc7\u7a0b\uff0c\u88ab\u53eb\u505a\u9003\u9038\u5206\u6790\u3002 Go\u8bed\u8a00\u901a\u8fc7\u7f16\u8bd1\u5668\uff0c\u5bf9\u5806\u6808\u8fdb\u884c\u5206\u6790\uff0c\u7136\u540e\u901a\u8fc7GC\u8fdb\u884c\u7ba1\u7406\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u5185\u5b58\u662f\u5206\u914d\u5728\u5806\u4e0a\u8fd8\u662f\u6808\u4e0a\u3002 // AllocateToStack: \u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\u653e\u5230\u4e86\u6808\u4e0a func AllocateToStack () { temp := make ([] int , 0 , 20 ) ... } \u4e0a\u9762\u7684\u4f8b\u5b50\uff0c Allocate \u51fd\u6570\u5185\u90e8\u7533\u8bf7\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u5373\u4f7f\u4f60\u662f\u7528make\u7533\u8bf7\u5230\u7684\u5185\u5b58\uff0c\u5982\u679c\u53d1\u73b0\u5728\u9000\u51fa\u51fd\u6570\u540e\u6ca1\u6709\u7528\u4e86\uff0c\u90a3\u4e48\u5c31\u628a\u4e22\u5230\u6808\u4e0a\uff0c\u6bd5\u7adf\u6808\u4e0a\u7684\u5185\u5b58\u5206\u914d\u6bd4\u5806\u4e0a\u5feb\u5f88\u591a\u3002 // AllocateToHeap: \u5b58\u5728\u5f15\u7528\u5206\u914d\u5230\u4e86\u5806 func AllocateToHeap () [] int { a := make ([] int , 0 , 20 ) return a } \u8fd9\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u7533\u8bf7\u7684\u4ee3\u7801\u548c\u4e0a\u9762\u7684\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u662f \u7533\u8bf7\u540e\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u4e86 \uff0c\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a\u5728\u9000\u51fa\u51fd\u6570\u4e4b\u540e\u8fd8\u6709\u5176\u4ed6\u5730\u65b9\u5728\u5f15\u7528\uff0c\u5f53\u51fd\u6570\u8fd4\u56de\u4e4b\u540e\u5e76\u4e0d\u4f1a\u5c06\u5176\u5185\u5b58\u5f52\u8fd8\u3002\u90a3\u4e48\u5c31\u7533\u8bf7\u5230 **\u5806 **\u91cc\u3002 \u8fc7\u591a\u7684\u5206\u914d\u5230\u6808\u4e0a\u5b58\u5728\u7684\u95ee\u9898\uff1a \u5783\u573e\u56de\u6536\uff08GC\uff09\u7684\u538b\u529b\u4e0d\u65ad\u589e\u5927 \u7533\u8bf7\u3001\u5206\u914d\u3001\u56de\u6536\u5185\u5b58\u7684\u7cfb\u7edf\u5f00\u9500\u589e\u5927\uff08\u76f8\u5bf9\u4e8e\u6808\uff09 \u52a8\u6001\u5206\u914d\u4ea7\u751f\u4e00\u5b9a\u91cf\u7684\u5185\u5b58\u788e\u7247 \u9003\u9038\u5206\u6790 \u8fd9\u662f\u6211\u4eec\u9700\u8981\u8fdb\u884c\u9003\u9038\u5206\u6790 \u9003\u9038\u5206\u6790 \u9003\u9038\u5206\u6790 \u9003\u9038\u5206\u6790\u662f\u4e00\u79cd\u786e\u5b9a\u6307\u9488\u52a8\u6001\u8303\u56f4\u7684\u65b9\u6cd5\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5206\u6790\u5728\u7a0b\u5e8f\u7684\u54ea\u4e9b\u5730\u65b9\u53ef\u4ee5\u8bbf\u95ee\u5230\u8be5\u6307\u9488\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u53d8\u91cf\u662f\u5426\u88ab\u5916\u90e8\u5f15\u7528\u6765\u51b3\u5b9a\u662f\u5426\u9003\u9038\uff1a 1. \u5982\u679c\u51fd\u6570\u5916\u90e8\u6ca1\u6709\u5f15\u7528\uff0c\u5219\u4f18\u5148\u653e\u5230\u6808\u4e2d\uff1b\u5982\u679c\u8be5\u5bf9\u8c61\u8fc7\u5927\u4e86\uff0c\u65e0\u6cd5\u5b58\u653e\u5230\u6808\u4e0a\uff0c\u5219\u4e5f\u6709\u53ef\u80fd\u4f1a\u88ab\u5206\u914d\u5230\u5806\u4e0a\u3002 2. \u5982\u679c\u51fd\u6570\u5916\u90e8\u5b58\u5728\u5f15\u7528\uff0c\u5219\u5fc5\u5b9a\u653e\u5230\u5806\u4e2d\uff1b \u5bf9\u6b64\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u9003\u9038\u5206\u6790\u662f\u7f16\u8bd1\u5668\u7528\u4e8e\u51b3\u5b9a\u53d8\u91cf\u5206\u914d\u5230\u5806\u4e0a\u8fd8\u662f\u6808\u4e0a\u7684\u4e00\u79cd\u884c\u4e3a\u3002 \u6ce8\u610f\uff1ago \u5728 \u7f16\u8bd1\u9636\u6bb5\u786e\u7acb\u9003\u9038 \uff0c\u5e76\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u3002 \u5185\u5b58\u9003\u9038 \u56de\u7b54\u4e4b\u524d\u7684\u95ee\u9898\uff0c\u9996\u5148\u901a\u8fc7\u4e00\u4e2abenchmark\u6765\u8bf4\u660e\u95ee\u9898\u3002 \u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u8fd4\u56de\u6307\u9488\u7684\u51fd\u6570\uff0c\u4e0e\u4e00\u4e2a\u8fd4\u56de\u62f7\u8d1d\u503c\u7684\u51fd\u6570\u3002 // memescape.go func NewPersonWithPointer ( age int , name , hobby string ) * Person { person := new ( Person ) person . Age = age person . Name = name person . Hobby = hobby return person } func NewPersonWithValue ( age int , name , hobby string ) Person { return Person { Age : age , Name : name , Hobby : hobby , } } // memescape_benchmark.go func BenchmarkNewPersonWithPointer ( b * testing . B ) { var p * Person for i := 0 ; i < b . N ; i ++ { p = NewPersonWithPointer ( 1 , \"1\" , \"1\" ) } _ = fmt . Sprintf ( \"%s\" , p . Name ) } func BenchmarkNewPersonWithValue ( b * testing . B ) { var p Person for i := 0 ; i < b . N ; i ++ { NewPersonWithValue ( 1 , \"1\" , \"1\" ) } _ = fmt . Sprintf ( \"%s\" , p . Name ) } \u7ed3\u679c\uff1a ============ Benchmark ============ goos: darwin goarch: amd64 pkg: github.com/InsideOfTheIndustry/iotgtt/memescape cpu: Intel ( R ) Core ( TM ) i5-7267U CPU @ 3 .10GHz BenchmarkNewPersonWithPointer-4 25721979 46 .33 ns/op 48 B/op 1 allocs/op BenchmarkNewPersonWithValue-4 1000000000 0 .3313 ns/op 0 B/op 0 allocs/op PASS ok github.com/InsideOfTheIndustry/iotgtt/memescape 2 .414s \u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u6307\u9488\u4f20\u9012\uff0c 1 allocs/op \uff0c\u4e3a\u4ec0\u4e48\u5462\u3002\u901a\u8fc7gcflags\u53ef\u4ee5\u770b\u5230\uff0c new(Person) escapes to heap go build -gcflags = -m # github.com/InsideOfTheIndustry/iotgtt/memescape/build ./main.go:18:15: new ( Person ) escapes to heap \u8fd9\u4e00\u6bb5\u7684\u4ee3\u7801\u53ef\u4ee5\uff1a https://github.com/InsideOfTheIndustry/iotgtt/tree/master/memescape \u5f97\u5230\u3002 \u4f7f\u7528 go build -gcflags '-m -l' main.go \u53ef\u4ee5\u770b\u5230\u8c03\u7528\u4e86\u8fd0\u884c\u65f6\u51fd\u6570\uff0c runtime.newobject(SB) 0x0018 00024 ( main . go : 18 ) FUNCDATA $ 5 , \"\" . NewPersonWithPointer . arginfo1 ( SB ) ... 0x002c 00044 ( main . go : 23 ) MOVQ DI , \"\" . hobby + 56 ( SP ) 0x0031 00049 ( main . go : 19 ) LEAQ type . \"\" . Person ( SB ) , AX 0x0038 00056 ( main . go : 19 ) PCDATA $ 1 , $ 0 0x0038 00056 ( main . go : 19 ) CALL runtime . newobject ( SB ) 0x003d 00061 ( main . go : 21 ) MOVQ \"\" . age + 32 ( SP ) , CX 0x0042 00066 ( main . go : 21 ) MOVQ CX , ( AX ) ... \u8fd9\u662f\u56e0\u4e3a NewPersonWithPointer() \u8fd4\u56de\u7684\u662f\u6307\u9488\u5bf9\u8c61\uff0c\u5f15\u7528\u88ab\u8fd4\u56de\u5230\u4e86\u65b9\u6cd5\u4e4b\u5916\u4e86\u3002\u56e0\u6b64\u7f16\u8bd1\u5668\u4f1a\u628a\u8be5\u5bf9\u8c61\u5206\u914d\u5230\u5806\u4e0a\uff0c\u800c\u4e0d\u662f\u6808\u4e0a\u3002\u5426\u5219\u65b9\u6cd5\u7ed3\u675f\u4e4b\u540e\uff0c\u5c40\u90e8\u53d8\u91cf\u5c31\u88ab\u56de\u6536\u4e86\uff0c\u5c82\u4e0d\u662f\u7ffb\u8f66\u3002\u6240\u4ee5\u6700\u7ec8\u5206\u914d\u5230\u5806\u4e0a\u662f\u7406\u6240\u5f53\u7136\u7684\u3002 \u989d\u5916\u7684\u53c8\u4e00\u4e2a\u95ee\u9898 \u540c\u6837\u8fd4\u56de\u4e86 NewPersonWithValue() \u4e3a\u4ec0\u4e48\u6ca1\u6709\u4ea7\u751f\u5185\u5b58\u9003\u9038\u5462\uff1f func main () { // func NewPersonWithValue(age int, name, hobby string) Person NewPersonWithValue ( 1 , \"12312\" , \"123123\" ) } func NewPersonWithValue ( age int , name , hobby string ) Person { return Person { Age : age , Name : name , Hobby : hobby , } } \u53ef\u4ee5\u770b\u5230\u53c2\u6570 name \u548c hobby \u4ea7\u751f\u4e86\u6cc4\u6f0f\u3002 $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:28:34: leaking param: name to result ~r3 level = 0 ./main.go:28:40: leaking param: hobby to result ~r3 level = 0 \u7ed3\u5408\u4ee3\u7801\u53ef\u5f97\u77e5name \u548c hobby\u4f20\u7ed9 NewPersonWithValue \u65b9\u6cd5\u540e\uff0c\u6ca1\u6709\u505a\u4efb\u4f55\u5f15\u7528\u4e4b\u7c7b\u7684\u6d89\u53ca\u53d8\u91cf\u7684\u52a8\u4f5c\uff0c\u76f4\u63a5\u5c31\u628a\u8fd9\u4e2a\u53d8\u91cf\u8fd4\u56de\u51fa\u53bb\u4e86\u3002\u56e0\u6b64\u8fd9\u4e2a\u53d8\u91cf\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u9003\u9038\uff0c\u5b83\u7684\u4f5c\u7528\u57df\u8fd8\u5728 main() \u4e4b\u4e2d\uff0c\u6240\u4ee5\u5206\u914d\u5728\u6808\u4e0a\u3002 \u5982\u4f55\u8ba9\u5b83\u4ea7\u751f\u5185\u5b58\u9003\u9038 \u52a0\u4ee5\u5f15\u7528\u5373\u53ef func NewPersonWithValue ( age int , name , hobby string ) * Person { return & Person { Age : age , Name : name , Hobby : hobby , } } $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:28:34: leaking param: name ./main.go:28:40: leaking param: hobby ./main.go:30:9: & Person { ... } escapes to heap \u6808\u7a7a\u95f4\u4e0d\u8db3\u9003\u9038 \u5f53\u6808\u7a7a\u95f4\u4e0d\u8db3\u4ee5\u5b58\u653e\u5f53\u524d\u5bf9\u8c61\u65f6\u6216\u65e0\u6cd5\u5224\u65ad\u5f53\u524d\u5207\u7247\u957f\u5ea6\u65f6\u4f1a\u5c06\u5bf9\u8c61\u5206\u914d\u5230\u5806\u4e2d\u3002 package main func main () { s := make ([] int , 10000 , 10000 ) for index , _ := range s { s [ index ] = index } } \u8fdb\u884c\u7f16\u8bd1 $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:5:11: make ([] int, 10000 , 10000 ) escapes to heap \u53ef\u4ee5\u770b\u5230 make([]int, 10000, 10000) escapes to heap \u52a8\u6001\u7c7b\u578b\u9003\u9038 \u5982\u679c\u4f60\u4f7f\u7528interface\u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u6bd4\u5982 func Printf ( format string , a ... interface {}) ( n int , err error ) \u7f16\u8bd1\u671f\u95f4\uff0c\u65e0\u6cd5\u786e\u5b9a\u5177\u4f53\u7684\u53c2\u6570\u7c7b\u578b\uff0cinterface\u5bf9\u5e94\u7684\u503c\u4f1a\u5728\u8fd0\u884c\u65f6\u4e2d\u901a\u8fc7\u53cd\u5c04\u5f97\u5230\uff0c\u90a3\u4e48\u4e5f\u4f1a\u4ea7\u751f\u5185\u5b58\u9003\u9038\u3002\u5982\u679c\u4f7f\u7528\u4e861.17\u7684\u8303\u578b\u6765\u4f5c\u4e3a\u53c2\u6570\u7684\u8bdd\uff0c\u53ef\u80fd\u2026\u2026 package main import \"fmt\" func main () { fmt . Println ( \"hello world\" ) } \u53ef\u4ee5\u770b\u5230 \"hello world\" escapes to heap $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:6:13: ... argument does not escape ./main.go:6:14: \"hello world\" escapes to heap \u603b\u7ed3 1\u3001\u5806\u4e0a\u52a8\u6001\u5206\u914d\u5185\u5b58\u6bd4\u6808\u4e0a\u9759\u6001\u5206\u914d\u5185\u5b58\uff0c\u5f00\u9500\u5927\u5f88\u591a\u3002 2\u3001\u53d8\u91cf\u5206\u914d\u5728\u6808\u4e0a\u9700\u8981\u80fd\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u5b83\u7684\u4f5c\u7528\u57df\uff0c\u5426\u5219\u4f1a\u5206\u914d\u5230\u5806\u4e0a\u3002 3\u3001Go\u7f16\u8bd1\u5668\u4f1a\u5728\u7f16\u8bd1\u671f\u5bf9\u8003\u5bdf\u53d8\u91cf\u7684\u4f5c\u7528\u57df\uff0c\u5e76\u4f5c\u4e00\u7cfb\u5217\u68c0\u67e5\uff0c\u5982\u679c\u5b83\u7684\u4f5c\u7528\u57df\u5728\u8fd0\u884c\u671f\u95f4\u5bf9\u7f16\u8bd1\u5668\u4e00\u76f4\u662f\u53ef\u77e5\u7684\uff0c\u90a3\u4e48\u5c31\u4f1a\u5206\u914d\u5230\u6808\u4e0a\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u53d8\u91cf\u662f\u5426\u88ab\u5916\u90e8\u5f15\u7528\u6765\u51b3\u5b9a\u662f\u5426\u9003\u9038\u3002 4\u3001\u5bf9\u4e8eGo\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u7684\u8fd9\u4e9b\u9003\u9038\u5206\u6790\u89c4\u5219\u4e0d\u9700\u8981\u638c\u63e1\uff0c\u6211\u4eec\u53ea\u9700\u901a\u8fc7go build -gcflags '-m\u2019\u547d\u4ee4\u6765\u89c2\u5bdf\u53d8\u91cf\u9003\u9038\u60c5\u51b5\u5c31\u884c\u4e86\u3002 5\u3001\u4e0d\u8981\u76f2\u76ee\u4f7f\u7528\u53d8\u91cf\u7684\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u867d\u7136\u5b83\u4f1a\u51cf\u5c11\u590d\u5236\u64cd\u4f5c\u3002\u4f46\u5176\u5b9e\u5f53\u53c2\u6570\u4e3a\u53d8\u91cf\u81ea\u8eab\u7684\u65f6\u5019\uff0c\u590d\u5236\u662f\u5728\u6808\u4e0a\u5b8c\u6210\u7684\u64cd\u4f5c\uff0c\u5f00\u9500\u8fdc\u6bd4\u53d8\u91cf\u9003\u9038\u540e\u52a8\u6001\u5730\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u5c11\u7684\u591a\u3002 6\u3001\u9003\u9038\u5206\u6790\u5728\u7f16\u8bd1\u9636\u6bb5\u5b8c\u6210\u7684\u3002 \u53c2\u8003\u6587\u6863 \u8ddf\u7740\u714e\u9c7c\u5b66go\uff1a\u6211\u8981\u5728\u6808\u4e0a\u3002\u4e0d\uff0c\u4f60\u5e94\u8be5\u5728\u5806\u4e0a Golang \u5185\u5b58\u5206\u914d\u4e4b\u9003\u9038\u5206\u6790 \u5185\u5b58\u9003\u9038\u5206\u6790\u4ee3\u7801https://github.com/InsideOfTheIndustry/iotgtt/blob/master/memescape","title":"\u5185\u5b58\u9003\u9038"},{"location":"pl/golang/memesacape/#_1","text":"\u5f15\u5165\uff0c\u4e00\u4e2a\u7b80\u5355\u601d\u8003 \u5148\u629b\u51fa\u4e00\u4e2a\u95ee\u9898\uff0c\u5728Go\u8bed\u8a00\u91cc\u4f20\u6307\u9488\u4e00\u5b9a\u6bd4\u503c\u62f7\u8d1d\u5feb\u5417\uff1foh\uff0c\u8fd9\u53ef\u80fd\u6210\u4e3a\u4e86Go\u7684\u57fa\u672c\u516b\u80a1\u6587\u4e4b\u4e00\u4e86\u3002 \u5728C\u8bed\u8a00\u91cc\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58(new/malloc)\u9700\u8981\u6211\u4eec\u624b\u52a8\u91ca\u653e\u8d44\u6e90\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u9700\u8981\u7533\u8bf7\u591a\u5c11\u5185\u5b58\u7a7a\u95f4\u53ef\u4ee5\u5f88\u597d\u7684\u638c\u63e1\u600e\u4e48\u5206\u914d\u3002\u4f46\u662f\u8fd9\u6709\u4e2a\u7f3a\u70b9\uff0c\u5982\u679c\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\uff0c\u5219\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 \u5728Go\u8bed\u8a00\u91cc\uff0cGo\u8bed\u8a00\u81ea\u5e26\u7684\u5783\u573e\u56de\u6536(GC)\u80fd\u591f\u5e2e\u52a9\u7a0b\u5e8f\u5458\u5fd8\u5374\u8d44\u6e90\u5206\u914d\u4e0e\u56de\u6536\u8fd9\u4ef6\u4e8b\uff0c\u628a\u590d\u6742\u7684\u5185\u5b58\u7ba1\u7406\u4ea4\u7ed9Go\u7f16\u8bd1\u5668\u3002","title":"\u5185\u5b58\u9003\u9038"},{"location":"pl/golang/memesacape/#_2","text":"\u5806\uff08Heap\uff09\uff1a\u4e00\u822c\u6765\u8bb2\u662f\u4eba\u4e3a\u624b\u52a8\u8fdb\u884c\u7ba1\u7406\uff0c\u624b\u52a8\u7533\u8bf7\u3001\u5206\u914d\u3001\u91ca\u653e\u3002\u4e00\u822c\u6240\u6d89\u53ca\u7684\u5185\u5b58\u5927\u5c0f\u5e76\u4e0d\u5b9a\uff0c\u4e00\u822c\u4f1a\u5b58\u653e\u8f83\u5927\u7684\u5bf9\u8c61\u3002\u53e6\u5916\u5176 \u5206\u914d\u76f8\u5bf9\u6162 \uff0c\u6d89\u53ca\u5230\u7684\u6307\u4ee4\u52a8\u4f5c\u4e5f\u76f8\u5bf9\u591a\u3002\u5806\u5206\u914d\u5185\u5b58\u9996\u5148\u9700\u8981\u53bb\u627e\u5230\u4e00\u5757\u5927\u5c0f\u5408\u9002\u7684\u5185\u5b58\u5757\u3002\u4e4b\u540e\u8981\u901a\u8fc7\u5783\u573e\u56de\u6536\u624d\u80fd\u91ca\u653e\u3002 \u6808\uff08Stack\uff09\uff1a\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7ba1\u7406\uff0c\u81ea\u52a8\u7533\u8bf7\u3001\u5206\u914d\u3001\u91ca\u653e\u3002\u4e00\u822c\u4e0d\u4f1a\u592a\u5927\uff0c\u6211\u4eec\u5e38\u89c1\u7684\u51fd\u6570\u53c2\u6570\uff08\u4e0d\u540c\u5e73\u53f0\u5141\u8bb8\u5b58\u653e\u7684\u6570\u91cf\u4e0d\u540c\uff09\uff0c \u5c40\u90e8\u53d8\u91cf \u7b49\u7b49\u90fd\u4f1a\u5b58\u653e\u5728\u6808\u4e0a\u3002\u6808\u5206\u914d\u5185\u5b58\u53ea\u9700\u8981\u4e24\u4e2aCPU\u6307\u4ee4\uff1a\u201cPUSH\u201d\u548c\u201cRELEASE\u201d\u5206\u914d\u548c\u91ca\u653e\u3002 \u5185\u5b58\u4ece\u6808escape\u5230\u5806\u7684\u8fc7\u7a0b\uff0c\u88ab\u53eb\u505a\u9003\u9038\u5206\u6790\u3002 Go\u8bed\u8a00\u901a\u8fc7\u7f16\u8bd1\u5668\uff0c\u5bf9\u5806\u6808\u8fdb\u884c\u5206\u6790\uff0c\u7136\u540e\u901a\u8fc7GC\u8fdb\u884c\u7ba1\u7406\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u5185\u5b58\u662f\u5206\u914d\u5728\u5806\u4e0a\u8fd8\u662f\u6808\u4e0a\u3002 // AllocateToStack: \u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\u653e\u5230\u4e86\u6808\u4e0a func AllocateToStack () { temp := make ([] int , 0 , 20 ) ... } \u4e0a\u9762\u7684\u4f8b\u5b50\uff0c Allocate \u51fd\u6570\u5185\u90e8\u7533\u8bf7\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u5373\u4f7f\u4f60\u662f\u7528make\u7533\u8bf7\u5230\u7684\u5185\u5b58\uff0c\u5982\u679c\u53d1\u73b0\u5728\u9000\u51fa\u51fd\u6570\u540e\u6ca1\u6709\u7528\u4e86\uff0c\u90a3\u4e48\u5c31\u628a\u4e22\u5230\u6808\u4e0a\uff0c\u6bd5\u7adf\u6808\u4e0a\u7684\u5185\u5b58\u5206\u914d\u6bd4\u5806\u4e0a\u5feb\u5f88\u591a\u3002 // AllocateToHeap: \u5b58\u5728\u5f15\u7528\u5206\u914d\u5230\u4e86\u5806 func AllocateToHeap () [] int { a := make ([] int , 0 , 20 ) return a } \u8fd9\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u7533\u8bf7\u7684\u4ee3\u7801\u548c\u4e0a\u9762\u7684\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u662f \u7533\u8bf7\u540e\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u4e86 \uff0c\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a\u5728\u9000\u51fa\u51fd\u6570\u4e4b\u540e\u8fd8\u6709\u5176\u4ed6\u5730\u65b9\u5728\u5f15\u7528\uff0c\u5f53\u51fd\u6570\u8fd4\u56de\u4e4b\u540e\u5e76\u4e0d\u4f1a\u5c06\u5176\u5185\u5b58\u5f52\u8fd8\u3002\u90a3\u4e48\u5c31\u7533\u8bf7\u5230 **\u5806 **\u91cc\u3002 \u8fc7\u591a\u7684\u5206\u914d\u5230\u6808\u4e0a\u5b58\u5728\u7684\u95ee\u9898\uff1a \u5783\u573e\u56de\u6536\uff08GC\uff09\u7684\u538b\u529b\u4e0d\u65ad\u589e\u5927 \u7533\u8bf7\u3001\u5206\u914d\u3001\u56de\u6536\u5185\u5b58\u7684\u7cfb\u7edf\u5f00\u9500\u589e\u5927\uff08\u76f8\u5bf9\u4e8e\u6808\uff09 \u52a8\u6001\u5206\u914d\u4ea7\u751f\u4e00\u5b9a\u91cf\u7684\u5185\u5b58\u788e\u7247","title":"\u5806\u548c\u6808"},{"location":"pl/golang/memesacape/#_3","text":"\u8fd9\u662f\u6211\u4eec\u9700\u8981\u8fdb\u884c\u9003\u9038\u5206\u6790 \u9003\u9038\u5206\u6790 \u9003\u9038\u5206\u6790 \u9003\u9038\u5206\u6790\u662f\u4e00\u79cd\u786e\u5b9a\u6307\u9488\u52a8\u6001\u8303\u56f4\u7684\u65b9\u6cd5\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5206\u6790\u5728\u7a0b\u5e8f\u7684\u54ea\u4e9b\u5730\u65b9\u53ef\u4ee5\u8bbf\u95ee\u5230\u8be5\u6307\u9488\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u53d8\u91cf\u662f\u5426\u88ab\u5916\u90e8\u5f15\u7528\u6765\u51b3\u5b9a\u662f\u5426\u9003\u9038\uff1a 1. \u5982\u679c\u51fd\u6570\u5916\u90e8\u6ca1\u6709\u5f15\u7528\uff0c\u5219\u4f18\u5148\u653e\u5230\u6808\u4e2d\uff1b\u5982\u679c\u8be5\u5bf9\u8c61\u8fc7\u5927\u4e86\uff0c\u65e0\u6cd5\u5b58\u653e\u5230\u6808\u4e0a\uff0c\u5219\u4e5f\u6709\u53ef\u80fd\u4f1a\u88ab\u5206\u914d\u5230\u5806\u4e0a\u3002 2. \u5982\u679c\u51fd\u6570\u5916\u90e8\u5b58\u5728\u5f15\u7528\uff0c\u5219\u5fc5\u5b9a\u653e\u5230\u5806\u4e2d\uff1b \u5bf9\u6b64\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u9003\u9038\u5206\u6790\u662f\u7f16\u8bd1\u5668\u7528\u4e8e\u51b3\u5b9a\u53d8\u91cf\u5206\u914d\u5230\u5806\u4e0a\u8fd8\u662f\u6808\u4e0a\u7684\u4e00\u79cd\u884c\u4e3a\u3002 \u6ce8\u610f\uff1ago \u5728 \u7f16\u8bd1\u9636\u6bb5\u786e\u7acb\u9003\u9038 \uff0c\u5e76\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u3002","title":"\u9003\u9038\u5206\u6790"},{"location":"pl/golang/memesacape/#_4","text":"\u56de\u7b54\u4e4b\u524d\u7684\u95ee\u9898\uff0c\u9996\u5148\u901a\u8fc7\u4e00\u4e2abenchmark\u6765\u8bf4\u660e\u95ee\u9898\u3002 \u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a\u8fd4\u56de\u6307\u9488\u7684\u51fd\u6570\uff0c\u4e0e\u4e00\u4e2a\u8fd4\u56de\u62f7\u8d1d\u503c\u7684\u51fd\u6570\u3002 // memescape.go func NewPersonWithPointer ( age int , name , hobby string ) * Person { person := new ( Person ) person . Age = age person . Name = name person . Hobby = hobby return person } func NewPersonWithValue ( age int , name , hobby string ) Person { return Person { Age : age , Name : name , Hobby : hobby , } } // memescape_benchmark.go func BenchmarkNewPersonWithPointer ( b * testing . B ) { var p * Person for i := 0 ; i < b . N ; i ++ { p = NewPersonWithPointer ( 1 , \"1\" , \"1\" ) } _ = fmt . Sprintf ( \"%s\" , p . Name ) } func BenchmarkNewPersonWithValue ( b * testing . B ) { var p Person for i := 0 ; i < b . N ; i ++ { NewPersonWithValue ( 1 , \"1\" , \"1\" ) } _ = fmt . Sprintf ( \"%s\" , p . Name ) } \u7ed3\u679c\uff1a ============ Benchmark ============ goos: darwin goarch: amd64 pkg: github.com/InsideOfTheIndustry/iotgtt/memescape cpu: Intel ( R ) Core ( TM ) i5-7267U CPU @ 3 .10GHz BenchmarkNewPersonWithPointer-4 25721979 46 .33 ns/op 48 B/op 1 allocs/op BenchmarkNewPersonWithValue-4 1000000000 0 .3313 ns/op 0 B/op 0 allocs/op PASS ok github.com/InsideOfTheIndustry/iotgtt/memescape 2 .414s \u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u6307\u9488\u4f20\u9012\uff0c 1 allocs/op \uff0c\u4e3a\u4ec0\u4e48\u5462\u3002\u901a\u8fc7gcflags\u53ef\u4ee5\u770b\u5230\uff0c new(Person) escapes to heap go build -gcflags = -m # github.com/InsideOfTheIndustry/iotgtt/memescape/build ./main.go:18:15: new ( Person ) escapes to heap \u8fd9\u4e00\u6bb5\u7684\u4ee3\u7801\u53ef\u4ee5\uff1a https://github.com/InsideOfTheIndustry/iotgtt/tree/master/memescape \u5f97\u5230\u3002 \u4f7f\u7528 go build -gcflags '-m -l' main.go \u53ef\u4ee5\u770b\u5230\u8c03\u7528\u4e86\u8fd0\u884c\u65f6\u51fd\u6570\uff0c runtime.newobject(SB) 0x0018 00024 ( main . go : 18 ) FUNCDATA $ 5 , \"\" . NewPersonWithPointer . arginfo1 ( SB ) ... 0x002c 00044 ( main . go : 23 ) MOVQ DI , \"\" . hobby + 56 ( SP ) 0x0031 00049 ( main . go : 19 ) LEAQ type . \"\" . Person ( SB ) , AX 0x0038 00056 ( main . go : 19 ) PCDATA $ 1 , $ 0 0x0038 00056 ( main . go : 19 ) CALL runtime . newobject ( SB ) 0x003d 00061 ( main . go : 21 ) MOVQ \"\" . age + 32 ( SP ) , CX 0x0042 00066 ( main . go : 21 ) MOVQ CX , ( AX ) ... \u8fd9\u662f\u56e0\u4e3a NewPersonWithPointer() \u8fd4\u56de\u7684\u662f\u6307\u9488\u5bf9\u8c61\uff0c\u5f15\u7528\u88ab\u8fd4\u56de\u5230\u4e86\u65b9\u6cd5\u4e4b\u5916\u4e86\u3002\u56e0\u6b64\u7f16\u8bd1\u5668\u4f1a\u628a\u8be5\u5bf9\u8c61\u5206\u914d\u5230\u5806\u4e0a\uff0c\u800c\u4e0d\u662f\u6808\u4e0a\u3002\u5426\u5219\u65b9\u6cd5\u7ed3\u675f\u4e4b\u540e\uff0c\u5c40\u90e8\u53d8\u91cf\u5c31\u88ab\u56de\u6536\u4e86\uff0c\u5c82\u4e0d\u662f\u7ffb\u8f66\u3002\u6240\u4ee5\u6700\u7ec8\u5206\u914d\u5230\u5806\u4e0a\u662f\u7406\u6240\u5f53\u7136\u7684\u3002","title":"\u5185\u5b58\u9003\u9038"},{"location":"pl/golang/memesacape/#_5","text":"\u540c\u6837\u8fd4\u56de\u4e86 NewPersonWithValue() \u4e3a\u4ec0\u4e48\u6ca1\u6709\u4ea7\u751f\u5185\u5b58\u9003\u9038\u5462\uff1f func main () { // func NewPersonWithValue(age int, name, hobby string) Person NewPersonWithValue ( 1 , \"12312\" , \"123123\" ) } func NewPersonWithValue ( age int , name , hobby string ) Person { return Person { Age : age , Name : name , Hobby : hobby , } } \u53ef\u4ee5\u770b\u5230\u53c2\u6570 name \u548c hobby \u4ea7\u751f\u4e86\u6cc4\u6f0f\u3002 $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:28:34: leaking param: name to result ~r3 level = 0 ./main.go:28:40: leaking param: hobby to result ~r3 level = 0 \u7ed3\u5408\u4ee3\u7801\u53ef\u5f97\u77e5name \u548c hobby\u4f20\u7ed9 NewPersonWithValue \u65b9\u6cd5\u540e\uff0c\u6ca1\u6709\u505a\u4efb\u4f55\u5f15\u7528\u4e4b\u7c7b\u7684\u6d89\u53ca\u53d8\u91cf\u7684\u52a8\u4f5c\uff0c\u76f4\u63a5\u5c31\u628a\u8fd9\u4e2a\u53d8\u91cf\u8fd4\u56de\u51fa\u53bb\u4e86\u3002\u56e0\u6b64\u8fd9\u4e2a\u53d8\u91cf\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u9003\u9038\uff0c\u5b83\u7684\u4f5c\u7528\u57df\u8fd8\u5728 main() \u4e4b\u4e2d\uff0c\u6240\u4ee5\u5206\u914d\u5728\u6808\u4e0a\u3002","title":"\u989d\u5916\u7684\u53c8\u4e00\u4e2a\u95ee\u9898"},{"location":"pl/golang/memesacape/#_6","text":"\u52a0\u4ee5\u5f15\u7528\u5373\u53ef func NewPersonWithValue ( age int , name , hobby string ) * Person { return & Person { Age : age , Name : name , Hobby : hobby , } } $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:28:34: leaking param: name ./main.go:28:40: leaking param: hobby ./main.go:30:9: & Person { ... } escapes to heap","title":"\u5982\u4f55\u8ba9\u5b83\u4ea7\u751f\u5185\u5b58\u9003\u9038"},{"location":"pl/golang/memesacape/#_7","text":"\u5f53\u6808\u7a7a\u95f4\u4e0d\u8db3\u4ee5\u5b58\u653e\u5f53\u524d\u5bf9\u8c61\u65f6\u6216\u65e0\u6cd5\u5224\u65ad\u5f53\u524d\u5207\u7247\u957f\u5ea6\u65f6\u4f1a\u5c06\u5bf9\u8c61\u5206\u914d\u5230\u5806\u4e2d\u3002 package main func main () { s := make ([] int , 10000 , 10000 ) for index , _ := range s { s [ index ] = index } } \u8fdb\u884c\u7f16\u8bd1 $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:5:11: make ([] int, 10000 , 10000 ) escapes to heap \u53ef\u4ee5\u770b\u5230 make([]int, 10000, 10000) escapes to heap","title":"\u6808\u7a7a\u95f4\u4e0d\u8db3\u9003\u9038"},{"location":"pl/golang/memesacape/#_8","text":"\u5982\u679c\u4f60\u4f7f\u7528interface\u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u6bd4\u5982 func Printf ( format string , a ... interface {}) ( n int , err error ) \u7f16\u8bd1\u671f\u95f4\uff0c\u65e0\u6cd5\u786e\u5b9a\u5177\u4f53\u7684\u53c2\u6570\u7c7b\u578b\uff0cinterface\u5bf9\u5e94\u7684\u503c\u4f1a\u5728\u8fd0\u884c\u65f6\u4e2d\u901a\u8fc7\u53cd\u5c04\u5f97\u5230\uff0c\u90a3\u4e48\u4e5f\u4f1a\u4ea7\u751f\u5185\u5b58\u9003\u9038\u3002\u5982\u679c\u4f7f\u7528\u4e861.17\u7684\u8303\u578b\u6765\u4f5c\u4e3a\u53c2\u6570\u7684\u8bdd\uff0c\u53ef\u80fd\u2026\u2026 package main import \"fmt\" func main () { fmt . Println ( \"hello world\" ) } \u53ef\u4ee5\u770b\u5230 \"hello world\" escapes to heap $ go build -gcflags '-m -l' main.go # command-line-arguments ./main.go:6:13: ... argument does not escape ./main.go:6:14: \"hello world\" escapes to heap","title":"\u52a8\u6001\u7c7b\u578b\u9003\u9038"},{"location":"pl/golang/memesacape/#_9","text":"1\u3001\u5806\u4e0a\u52a8\u6001\u5206\u914d\u5185\u5b58\u6bd4\u6808\u4e0a\u9759\u6001\u5206\u914d\u5185\u5b58\uff0c\u5f00\u9500\u5927\u5f88\u591a\u3002 2\u3001\u53d8\u91cf\u5206\u914d\u5728\u6808\u4e0a\u9700\u8981\u80fd\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u5b83\u7684\u4f5c\u7528\u57df\uff0c\u5426\u5219\u4f1a\u5206\u914d\u5230\u5806\u4e0a\u3002 3\u3001Go\u7f16\u8bd1\u5668\u4f1a\u5728\u7f16\u8bd1\u671f\u5bf9\u8003\u5bdf\u53d8\u91cf\u7684\u4f5c\u7528\u57df\uff0c\u5e76\u4f5c\u4e00\u7cfb\u5217\u68c0\u67e5\uff0c\u5982\u679c\u5b83\u7684\u4f5c\u7528\u57df\u5728\u8fd0\u884c\u671f\u95f4\u5bf9\u7f16\u8bd1\u5668\u4e00\u76f4\u662f\u53ef\u77e5\u7684\uff0c\u90a3\u4e48\u5c31\u4f1a\u5206\u914d\u5230\u6808\u4e0a\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u53d8\u91cf\u662f\u5426\u88ab\u5916\u90e8\u5f15\u7528\u6765\u51b3\u5b9a\u662f\u5426\u9003\u9038\u3002 4\u3001\u5bf9\u4e8eGo\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u7684\u8fd9\u4e9b\u9003\u9038\u5206\u6790\u89c4\u5219\u4e0d\u9700\u8981\u638c\u63e1\uff0c\u6211\u4eec\u53ea\u9700\u901a\u8fc7go build -gcflags '-m\u2019\u547d\u4ee4\u6765\u89c2\u5bdf\u53d8\u91cf\u9003\u9038\u60c5\u51b5\u5c31\u884c\u4e86\u3002 5\u3001\u4e0d\u8981\u76f2\u76ee\u4f7f\u7528\u53d8\u91cf\u7684\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u867d\u7136\u5b83\u4f1a\u51cf\u5c11\u590d\u5236\u64cd\u4f5c\u3002\u4f46\u5176\u5b9e\u5f53\u53c2\u6570\u4e3a\u53d8\u91cf\u81ea\u8eab\u7684\u65f6\u5019\uff0c\u590d\u5236\u662f\u5728\u6808\u4e0a\u5b8c\u6210\u7684\u64cd\u4f5c\uff0c\u5f00\u9500\u8fdc\u6bd4\u53d8\u91cf\u9003\u9038\u540e\u52a8\u6001\u5730\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u5c11\u7684\u591a\u3002 6\u3001\u9003\u9038\u5206\u6790\u5728\u7f16\u8bd1\u9636\u6bb5\u5b8c\u6210\u7684\u3002","title":"\u603b\u7ed3"},{"location":"pl/golang/memesacape/#_10","text":"\u8ddf\u7740\u714e\u9c7c\u5b66go\uff1a\u6211\u8981\u5728\u6808\u4e0a\u3002\u4e0d\uff0c\u4f60\u5e94\u8be5\u5728\u5806\u4e0a Golang \u5185\u5b58\u5206\u914d\u4e4b\u9003\u9038\u5206\u6790 \u5185\u5b58\u9003\u9038\u5206\u6790\u4ee3\u7801https://github.com/InsideOfTheIndustry/iotgtt/blob/master/memescape","title":"\u53c2\u8003\u6587\u6863"},{"location":"pl/golang/struct-align/","text":"Golang \u5185\u5b58\u5bf9\u9f50 \u548c\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\uff0cGolang\u4e2d\u4e3a\u4e86\u63d0\u9ad8\u5185\u5b58\u8bbf\u95ee\u6548\u7387\u4e5f\u9700\u8981\u5185\u5b58\u5bf9\u9f50\u3002 \u53ef\u4ee5\u53c2\u770b runtime2.go \u4e2d interface \u5e95\u5c42\u5b9e\u73b0\u4e2ditab\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff1a type itab struct { inter * interfacetype _type * _type hash uint32 // copy of _type.hash. Used for type switches. _ [ 4 ] byte fun [ 1 ] uintptr // variable sized. fun[0]==0 means _type does not implement inter. } \u53ef\u4ee5\u6ce8\u610f\u5230\u4f7f\u7528\u4e00\u4e2a4\u957f\u5ea6\u7684byte\u6570\u7ec4\uff0c\u8fd9\u91cc\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u4e3a\u4e86\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\u3002\u80fd\u591f\u65b9\u4fbfCPU\u4e00\u6b21\u6027\u8bfb\u53d6\u5230\u540e\u540e\u9762\u7684fun\u7684\u6570\u636e\uff0c fun \u662f\u53ef\u53d8\u957f\u5ea6\u7684\uff0c\u53ef\u80fd\u4f1a\u5b58\u591a\u4e2a\u503c\uff0c\u56e0\u6b64\u5c06\u8fd9\u4e00\u5757\u8fdb\u884c\u5bf9\u9f50\u843d\u5728\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\u4e0a\u3002 \u4e3a\u4ec0\u4e48\u8981\u5185\u5b58\u5bf9\u9f50 \u7b80\u5355\u7684\u8bf4\uff0cCPU\u4e0d\u4f1a\u4e00\u4e2a\u4e00\u4e2a\u5b57\u8282\u7684\u53bb\u8bfb\u53d6\u548c\u5199\u5165\u5185\u5b58\u3002\u76f8\u53cdCPU\u8bfb\u53d6\u5185\u5b58\u662f\u4e00\u5757\u4e00\u5757\u7684\u8fdb\u884c\u8bfb\u7684\uff0c\u5757\u7684\u5927\u5c0f\u53ef\u4ee5\u662f2\uff0c4\uff0c6\uff0c8\u5b57\u8282\u7b49\u5927\u5c0f\u3002\u5757\u7684\u5927\u5c0f\u88ab\u79f0\u4e3a **\u5185\u5b58\u8bbf\u95ee\u7c92\u5ea6 **\u300232\u4f4d\u7684\u7cfb\u7edf\u8bbf\u95ee\u7c92\u5ea6\u662f4\u5b57\u8282\uff0c64\u4f4d\u7684\u7cfb\u7edf\u8bbf\u95ee\u662f8\u5b57\u8282\u3002 \u5f53\u8bbf\u95ee\u7684\u6570\u636e\u957f\u5ea6\u4e3an\u5b57\u8282\u4e14\u8be5\u6570\u636e\u5730\u5740\u4e0en\u5b57\u8282\u5bf9\u9f50\uff0c\u90a3\u5c31\u80fd\u591f\u4e00\u6b21\u6027\u7684\u5b9a\u4f4d\u5230\u6570\u636e\uff0c\u4e0d\u9700\u8981\u591a\u6b21\u8bfb\u53d6\u3001\u5904\u7406\u5bf9\u5176\u8fd0\u7b97\u7b49\u989d\u5916\u64cd\u4f5c\u3002\u5982\u679c\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0cCPU \u9700\u8981\u505a\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\u3002 \u5982\u4e0a\u56fe\u4e2d\uff0c\u4e00\u6761\u6570\u636e\u5b58\u5728\u4e8e 1-4 \u4e0a\uff0c\u8fd9\u65f6\u5019\u662f\u4e0d\u5bf9\u9f50\u7684\u3002 CPU **\u9996\u6b21**\u8bfb\u53d6\u672a\u5bf9\u9f50\u5730\u5740\u7684\u7b2c\u4e00\u4e2a\u5185\u5b58\u5757\uff0c\u8bfb\u53d6 0-3 \u5b57\u8282\u3002\u5e76\u79fb\u9664\u4e0d\u9700\u8981\u7684\u5b57\u8282 0 CPU **\u518d\u6b21**\u8bfb\u53d6\u672a\u5bf9\u9f50\u5730\u5740\u7684\u7b2c\u4e8c\u4e2a\u5185\u5b58\u5757\uff0c\u8bfb\u53d6 4-7 \u5b57\u8282\u3002\u5e76\u79fb\u9664\u4e0d\u9700\u8981\u7684\u5b57\u8282 5\u30016\u30017 \u5b57\u8282 \u5408\u5e76 1-4 \u5b57\u8282\u7684\u6570\u636e \u5408\u5e76\u540e\u653e\u5165\u5bc4\u5b58\u5668 \u5982\u679c\u5c06\u8fd9\u6761\u6570\u636e\u653e\u57280-3\u4e0a\u90a3\u4e48\uff0c\u53ea\u9700\u8981\u8bfb\u53d6\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u5230\u5168\u90e8\u6570\u636e\u3002 \u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u4e00\u79cd\u5178\u578b\u7684 \u7a7a\u95f4\u6362\u65f6\u95f4 \u65b9\u6cd5\u3002 \u8fdb\u884c\u5bf9\u9f50 go\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u5bf9\u5177\u4f53\u7684\u5927\u5c0f\u8fdb\u884c\u4e86\u63cf\u8ff0 // https://golang.org/ref/spec#Size_and_alignment_guarantees type size in bytes byte , uint8 , int8 , bool 1 uint16 , int16 2 uint32 , int32 , float32 4 uint64 , int64 , float64 , complex64 8 complex128 16 \u4e0d\u540c\u7684\u90a3\u4e9b\u5bf9\u9f50\u4fdd\u8bc1\u5982\u4e0b\uff0c\u503c\u7684\u6ce8\u610f\u7684\u662fcomplex 64 \u4ed6\u867d\u7136\u957f\u5ea6\u662f8\u5b57\u8282\uff0c\u4f46\u662f\u662f\u6309\u71674\u5b57\u8282\u6765\u8fdb\u884c\u5bf9\u9f50\u7684\u3002 type alignment guarantee ------ ------ bool , uint8 , int8 1 uint16 , int16 2 uint32 , int32 4 float32 , complex64 4 int64 , float64 8 arrays depend on element types \u53d6\u51b3\u4e8e\u5143\u7d20\u4e2a\u6570 structs depend on field types \u53d6\u51b3\u4e8e\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u7c7b\u578b other types size of a native word \u53d6\u51b3\u4e8e\u673a\u5668\u7684\u5b57\u957f \u5b9e\u4f8b\u5206\u67901 \u73b0\u5728\u6709\u5982\u4e0b\u4ee3\u7801\uff1a type T1 struct { a [ 2 ] int8 b int64 c int16 } type T2 struct { a [ 2 ] int8 c int16 b int64 } fmt . Printf ( \"arrange fields to reduce size:\\n\" + \"T1 align: %d, size: %d\\n\" + \"T2 align: %d, size: %d\\n\" , unsafe . Alignof ( T1 {}), unsafe . Sizeof ( T1 {}), unsafe . Alignof ( T2 {}), unsafe . Sizeof ( T2 {})) /* output: arrange fields to reduce size: T1 align: 8, size: 24 T2 align: 8, size: 16 */ T1 \u548cT2 \u4e24\u4e2a\u7ed3\u6784\u4f53\u5b57\u6bb5\u6700\u5927\u90fd\u662f int64\uff0c T1\u4e2d\uff0csize = 24 a\u5927\u5c0f\u662f2\u5b57\u8282\uff0c\u586b\u51456\u5206\u5b57\u8282\u8fdb\u884c\u5bf9\u9f50\uff08\u7b2c\u4e00\u90e8\u5206\u516b\u4e2a\u5b57\u8282\uff09 b\u5927\u5c0f\u662f8\u5b57\u8282\uff0c\u76f4\u63a5\u5bf9\u9f50 c\u5927\u5c0f\u662f2\u5b57\u8282\uff0c\u586b\u5145\u516d\u4e2a\u5b57\u8282\u4f7f\u5b83\u5bf9\u9f50 T2\u4e2d\uff0csize = 16 a\u548cc\u5927\u5c0f\u4e3a\u4e00\u51714\uff0c\u586b\u51454\u5b57\u8282\u5bf9\u9f50 b\u672c\u8eab\u81ea\u5df1\u662f\u5bf9\u9f50\u7684 \u6240\u4ee5\uff0c\u5408\u7406\u7684\u5b57\u6bb5\u6392\u5e8f\uff0c\u80fd\u591f\u4f7f\u5b57\u6bb5\u66f4\u52a0\u7d27\u5bc6\uff0c\u51cf\u5c11\u586b\u5145 \u5b9e\u4f8b\u5206\u67902 \u4e0b\u9762\u6709\u4e00\u4e2a\u65b0\u7684\u7ed3\u6784\u4f53\uff1a type Part1 struct { a bool // 1byte b int32 // 4byte c int8 // 1byte d int64 // 8byte e byte // 1byte } type Part2 struct { e byte // 1byte c int8 // 1byte a bool // 1byte b int32 // 4byte d int64 // 8byte } func main () { part1 := Part1 {} part2 := Part2 {} fmt . Printf ( \"part1 size: %d, align: %d\\n\" , unsafe . Sizeof ( part1 ), unsafe . Alignof ( part1 )) fmt . Printf ( \"part2 size: %d, align: %d\\n\" , unsafe . Sizeof ( part2 ), unsafe . Alignof ( part2 )) } /* output: part1 size: 32, align: 8 part2 size: 16, align: 8 */ \u548c\u4e0a\u9762\u4e00\u6837\u8fdb\u884c\u5206\u6790\uff1a part1: a _ _ _ | b b b b || c _ _ _ | _ _ _ _ || d d d d | d d d d || e _ _ _ | _ _ _ _ \u957f\u5ea6\u4e3a4\u4e2a\u5b57 part2: e c a _ | b b b b || d d d d | d d d d \u957f\u5ea6\u4e3a2\u4e2a\u5b57 \u603b\u7ed3 \u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\uff0c\u80fd\u591f\u63d0\u9ad8CPU\u5bf9\u5185\u5b58\u8bbf\u95ee\u7684\u6548\u7387\uff0c\u4ec5\u9700\u8981\u4e00\u6b21\u5c31\u80fd\u591f\u8bfb\u5230\u5bf9\u5e94\u6240\u9700\u8981\u7684\u503c\u3002 go\u8bed\u8a00\u4e2d\u4e0d\u540c\u5b57\u6bb5\u6240\u8981\u6c42\u7684\u5bf9\u9f50\u4fdd\u8bc1\u7684\u957f\u5ea6\u662f\u4e0d\u4e00\u6837\u7684 \u5408\u7406\u7684\u7ed3\u6784\u9898\u5b57\u6bb5\u5e03\u5c40\uff0c\u80fd\u591f\u6709\u6548\u7684\u8282\u7701\u5185\u5b58\u7a7a\u95f4\u3002","title":"Golang\u5185\u5b58\u5bf9\u9f50"},{"location":"pl/golang/struct-align/#golang","text":"\u548c\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\uff0cGolang\u4e2d\u4e3a\u4e86\u63d0\u9ad8\u5185\u5b58\u8bbf\u95ee\u6548\u7387\u4e5f\u9700\u8981\u5185\u5b58\u5bf9\u9f50\u3002 \u53ef\u4ee5\u53c2\u770b runtime2.go \u4e2d interface \u5e95\u5c42\u5b9e\u73b0\u4e2ditab\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff1a type itab struct { inter * interfacetype _type * _type hash uint32 // copy of _type.hash. Used for type switches. _ [ 4 ] byte fun [ 1 ] uintptr // variable sized. fun[0]==0 means _type does not implement inter. } \u53ef\u4ee5\u6ce8\u610f\u5230\u4f7f\u7528\u4e00\u4e2a4\u957f\u5ea6\u7684byte\u6570\u7ec4\uff0c\u8fd9\u91cc\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u4e3a\u4e86\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\u3002\u80fd\u591f\u65b9\u4fbfCPU\u4e00\u6b21\u6027\u8bfb\u53d6\u5230\u540e\u540e\u9762\u7684fun\u7684\u6570\u636e\uff0c fun \u662f\u53ef\u53d8\u957f\u5ea6\u7684\uff0c\u53ef\u80fd\u4f1a\u5b58\u591a\u4e2a\u503c\uff0c\u56e0\u6b64\u5c06\u8fd9\u4e00\u5757\u8fdb\u884c\u5bf9\u9f50\u843d\u5728\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\u4e0a\u3002","title":"Golang \u5185\u5b58\u5bf9\u9f50"},{"location":"pl/golang/struct-align/#_1","text":"\u7b80\u5355\u7684\u8bf4\uff0cCPU\u4e0d\u4f1a\u4e00\u4e2a\u4e00\u4e2a\u5b57\u8282\u7684\u53bb\u8bfb\u53d6\u548c\u5199\u5165\u5185\u5b58\u3002\u76f8\u53cdCPU\u8bfb\u53d6\u5185\u5b58\u662f\u4e00\u5757\u4e00\u5757\u7684\u8fdb\u884c\u8bfb\u7684\uff0c\u5757\u7684\u5927\u5c0f\u53ef\u4ee5\u662f2\uff0c4\uff0c6\uff0c8\u5b57\u8282\u7b49\u5927\u5c0f\u3002\u5757\u7684\u5927\u5c0f\u88ab\u79f0\u4e3a **\u5185\u5b58\u8bbf\u95ee\u7c92\u5ea6 **\u300232\u4f4d\u7684\u7cfb\u7edf\u8bbf\u95ee\u7c92\u5ea6\u662f4\u5b57\u8282\uff0c64\u4f4d\u7684\u7cfb\u7edf\u8bbf\u95ee\u662f8\u5b57\u8282\u3002 \u5f53\u8bbf\u95ee\u7684\u6570\u636e\u957f\u5ea6\u4e3an\u5b57\u8282\u4e14\u8be5\u6570\u636e\u5730\u5740\u4e0en\u5b57\u8282\u5bf9\u9f50\uff0c\u90a3\u5c31\u80fd\u591f\u4e00\u6b21\u6027\u7684\u5b9a\u4f4d\u5230\u6570\u636e\uff0c\u4e0d\u9700\u8981\u591a\u6b21\u8bfb\u53d6\u3001\u5904\u7406\u5bf9\u5176\u8fd0\u7b97\u7b49\u989d\u5916\u64cd\u4f5c\u3002\u5982\u679c\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0cCPU \u9700\u8981\u505a\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\u3002 \u5982\u4e0a\u56fe\u4e2d\uff0c\u4e00\u6761\u6570\u636e\u5b58\u5728\u4e8e 1-4 \u4e0a\uff0c\u8fd9\u65f6\u5019\u662f\u4e0d\u5bf9\u9f50\u7684\u3002 CPU **\u9996\u6b21**\u8bfb\u53d6\u672a\u5bf9\u9f50\u5730\u5740\u7684\u7b2c\u4e00\u4e2a\u5185\u5b58\u5757\uff0c\u8bfb\u53d6 0-3 \u5b57\u8282\u3002\u5e76\u79fb\u9664\u4e0d\u9700\u8981\u7684\u5b57\u8282 0 CPU **\u518d\u6b21**\u8bfb\u53d6\u672a\u5bf9\u9f50\u5730\u5740\u7684\u7b2c\u4e8c\u4e2a\u5185\u5b58\u5757\uff0c\u8bfb\u53d6 4-7 \u5b57\u8282\u3002\u5e76\u79fb\u9664\u4e0d\u9700\u8981\u7684\u5b57\u8282 5\u30016\u30017 \u5b57\u8282 \u5408\u5e76 1-4 \u5b57\u8282\u7684\u6570\u636e \u5408\u5e76\u540e\u653e\u5165\u5bc4\u5b58\u5668 \u5982\u679c\u5c06\u8fd9\u6761\u6570\u636e\u653e\u57280-3\u4e0a\u90a3\u4e48\uff0c\u53ea\u9700\u8981\u8bfb\u53d6\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u5230\u5168\u90e8\u6570\u636e\u3002 \u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u4e00\u79cd\u5178\u578b\u7684 \u7a7a\u95f4\u6362\u65f6\u95f4 \u65b9\u6cd5\u3002","title":"\u4e3a\u4ec0\u4e48\u8981\u5185\u5b58\u5bf9\u9f50"},{"location":"pl/golang/struct-align/#_2","text":"go\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u5bf9\u5177\u4f53\u7684\u5927\u5c0f\u8fdb\u884c\u4e86\u63cf\u8ff0 // https://golang.org/ref/spec#Size_and_alignment_guarantees type size in bytes byte , uint8 , int8 , bool 1 uint16 , int16 2 uint32 , int32 , float32 4 uint64 , int64 , float64 , complex64 8 complex128 16 \u4e0d\u540c\u7684\u90a3\u4e9b\u5bf9\u9f50\u4fdd\u8bc1\u5982\u4e0b\uff0c\u503c\u7684\u6ce8\u610f\u7684\u662fcomplex 64 \u4ed6\u867d\u7136\u957f\u5ea6\u662f8\u5b57\u8282\uff0c\u4f46\u662f\u662f\u6309\u71674\u5b57\u8282\u6765\u8fdb\u884c\u5bf9\u9f50\u7684\u3002 type alignment guarantee ------ ------ bool , uint8 , int8 1 uint16 , int16 2 uint32 , int32 4 float32 , complex64 4 int64 , float64 8 arrays depend on element types \u53d6\u51b3\u4e8e\u5143\u7d20\u4e2a\u6570 structs depend on field types \u53d6\u51b3\u4e8e\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u7c7b\u578b other types size of a native word \u53d6\u51b3\u4e8e\u673a\u5668\u7684\u5b57\u957f","title":"\u8fdb\u884c\u5bf9\u9f50"},{"location":"pl/golang/struct-align/#1","text":"\u73b0\u5728\u6709\u5982\u4e0b\u4ee3\u7801\uff1a type T1 struct { a [ 2 ] int8 b int64 c int16 } type T2 struct { a [ 2 ] int8 c int16 b int64 } fmt . Printf ( \"arrange fields to reduce size:\\n\" + \"T1 align: %d, size: %d\\n\" + \"T2 align: %d, size: %d\\n\" , unsafe . Alignof ( T1 {}), unsafe . Sizeof ( T1 {}), unsafe . Alignof ( T2 {}), unsafe . Sizeof ( T2 {})) /* output: arrange fields to reduce size: T1 align: 8, size: 24 T2 align: 8, size: 16 */ T1 \u548cT2 \u4e24\u4e2a\u7ed3\u6784\u4f53\u5b57\u6bb5\u6700\u5927\u90fd\u662f int64\uff0c T1\u4e2d\uff0csize = 24 a\u5927\u5c0f\u662f2\u5b57\u8282\uff0c\u586b\u51456\u5206\u5b57\u8282\u8fdb\u884c\u5bf9\u9f50\uff08\u7b2c\u4e00\u90e8\u5206\u516b\u4e2a\u5b57\u8282\uff09 b\u5927\u5c0f\u662f8\u5b57\u8282\uff0c\u76f4\u63a5\u5bf9\u9f50 c\u5927\u5c0f\u662f2\u5b57\u8282\uff0c\u586b\u5145\u516d\u4e2a\u5b57\u8282\u4f7f\u5b83\u5bf9\u9f50 T2\u4e2d\uff0csize = 16 a\u548cc\u5927\u5c0f\u4e3a\u4e00\u51714\uff0c\u586b\u51454\u5b57\u8282\u5bf9\u9f50 b\u672c\u8eab\u81ea\u5df1\u662f\u5bf9\u9f50\u7684 \u6240\u4ee5\uff0c\u5408\u7406\u7684\u5b57\u6bb5\u6392\u5e8f\uff0c\u80fd\u591f\u4f7f\u5b57\u6bb5\u66f4\u52a0\u7d27\u5bc6\uff0c\u51cf\u5c11\u586b\u5145","title":"\u5b9e\u4f8b\u5206\u67901"},{"location":"pl/golang/struct-align/#2","text":"\u4e0b\u9762\u6709\u4e00\u4e2a\u65b0\u7684\u7ed3\u6784\u4f53\uff1a type Part1 struct { a bool // 1byte b int32 // 4byte c int8 // 1byte d int64 // 8byte e byte // 1byte } type Part2 struct { e byte // 1byte c int8 // 1byte a bool // 1byte b int32 // 4byte d int64 // 8byte } func main () { part1 := Part1 {} part2 := Part2 {} fmt . Printf ( \"part1 size: %d, align: %d\\n\" , unsafe . Sizeof ( part1 ), unsafe . Alignof ( part1 )) fmt . Printf ( \"part2 size: %d, align: %d\\n\" , unsafe . Sizeof ( part2 ), unsafe . Alignof ( part2 )) } /* output: part1 size: 32, align: 8 part2 size: 16, align: 8 */ \u548c\u4e0a\u9762\u4e00\u6837\u8fdb\u884c\u5206\u6790\uff1a part1: a _ _ _ | b b b b || c _ _ _ | _ _ _ _ || d d d d | d d d d || e _ _ _ | _ _ _ _ \u957f\u5ea6\u4e3a4\u4e2a\u5b57 part2: e c a _ | b b b b || d d d d | d d d d \u957f\u5ea6\u4e3a2\u4e2a\u5b57","title":"\u5b9e\u4f8b\u5206\u67902"},{"location":"pl/golang/struct-align/#_3","text":"\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\uff0c\u80fd\u591f\u63d0\u9ad8CPU\u5bf9\u5185\u5b58\u8bbf\u95ee\u7684\u6548\u7387\uff0c\u4ec5\u9700\u8981\u4e00\u6b21\u5c31\u80fd\u591f\u8bfb\u5230\u5bf9\u5e94\u6240\u9700\u8981\u7684\u503c\u3002 go\u8bed\u8a00\u4e2d\u4e0d\u540c\u5b57\u6bb5\u6240\u8981\u6c42\u7684\u5bf9\u9f50\u4fdd\u8bc1\u7684\u957f\u5ea6\u662f\u4e0d\u4e00\u6837\u7684 \u5408\u7406\u7684\u7ed3\u6784\u9898\u5b57\u6bb5\u5e03\u5c40\uff0c\u80fd\u591f\u6709\u6548\u7684\u8282\u7701\u5185\u5b58\u7a7a\u95f4\u3002","title":"\u603b\u7ed3"},{"location":"pl/golang-imp/gmp/","text":"GMP runtime \u91cc\u9762\u90fd\u6709\u4ec0\u4e48 G type g struct { stack stack // \u5806\u6808\u53c2\u6570 ...... m * m // \u5f53\u524d\u4f7f\u7528\u7684\u7684 M sched gobuf // \u5b58\u50a8\u4e86g\u7684\u4e0a\u4e0b\u6587\u3002 // \u5f53\u72b6\u6001\u662f\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u65f6\uff0csp\u5806\u6808\u6307\u9488\uff0cpc\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c syscallsp uintptr // if status==Gsyscall, syscallsp = sched.sp to use during gc syscallpc uintptr // if status==Gsyscall, syscallpc = sched.pc to use during gc ...... // param \u662f\u901a\u7528\u6307\u9488\u53c2\u6570\u5b57\u6bb5\uff0c\u7528\u4e8e\u5728\u96be\u4ee5\u627e\u5230\u53c2\u6570\u7684\u5176\u4ed6\u5b58\u50a8\u7684\u7279\u5b9a\u4e0a\u4e0b\u6587\u4e2d\u4f20\u9012\u503c\u3002 \u76ee\u524d\u4ee5\u4e09\u79cd\u65b9\u5f0f\u4f7f\u7528\uff1a // 1. \u5f53\u4e00\u4e2achannel\u5524\u9192\u4e00\u4e2a\u963b\u585e\u7684goroutine\u65f6\uff0c // \u5c06\u8bbe\u7f6e\u53c2\u6570\u8bbe\u7f6e\u6307\u5411\u4e00\u4e2a\u7b49\u5f85\u4e2d\u4ee5\u53ca\u5b8c\u6210\u963b\u585e\u8fc7\u7a0b\u7684goroutine param unsafe . Pointer // \u7528\u4e8e\u53c2\u6570\u4f20\u9012\uff0c\u7761\u7720\u65f6\u5176\u4ed6goroutine\u53ef\u4ee5\u8bbe\u7f6e\u53c2\u6570\uff0c\u5524\u9192\u65f6\u5019goroutine\u53ef\u4ee5\u83b7\u53d6\u5230\u3002 atomicstatus uint32 stackLock uint32 // sigprof/scang lock; TODO: fold in to atomicstatus goid int64 schedlink guintptr waitsince int64 // g \u963b\u585e\u7684\u5927\u81f4\u65f6\u95f4 waitreason waitReason // if status==Gwaiting preempt bool // preemption signal, duplicates stackguard0 = stackpreempt preemptStop bool // transition to _Gpreempted on preemption; otherwise, just deschedule preemptShrink bool // shrink stack at synchronous safe point // asyncSafePoint is set if g is stopped at an asynchronous // safe point. This means there are frames on the stack // without precise pointer information. asyncSafePoint bool paniconfault bool // panic (instead of crash) on unexpected fault address gcscandone bool // g has scanned stack; protected by _Gscan bit in status throwsplit bool // must not split stack // activeStackChans indicates that there are unlocked channels // pointing into this goroutine's stack. If true, stack // copying needs to acquire channel locks to protect these // areas of the stack. activeStackChans bool // parkingOnChan indicates that the goroutine is about to // park on a chansend or chanrecv. Used to signal an unsafe point // for stack shrinking. It's a boolean value, but is updated atomically. parkingOnChan uint8 raceignore int8 // ignore race detection events sysblocktraced bool // StartTrace has emitted EvGoInSyscall about this goroutine tracking bool // whether we're tracking this G for sched latency statistics trackingSeq uint8 // used to decide whether to track this G runnableStamp int64 // timestamp of when the G last became runnable, only used when tracking runnableTime int64 // the amount of time spent runnable, cleared when running, only used when tracking sysexitticks int64 // cputicks when syscall has returned (for tracing) traceseq uint64 // trace event sequencer tracelastp puintptr // last P emitted an event for this goroutine lockedm muintptr sig uint32 writebuf [] byte sigcode0 uintptr sigcode1 uintptr sigpc uintptr gopc uintptr // pc of go statement that created this goroutine ancestors * [] ancestorInfo // ancestor information goroutine(s) that created this goroutine (only used if debug.tracebackancestors) startpc uintptr // pc of goroutine function racectx uintptr waiting * sudog // sudog structures this g is waiting on (that have a valid elem ptr); in lock order cgoCtxt [] uintptr // cgo traceback context labels unsafe . Pointer // profiler labels timer * timer // cached timer for time.Sleep selectDone uint32 // are we participating in a select and did someone win the race? // Per-G GC state // gcAssistBytes is this G's GC assist credit in terms of // bytes allocated. If this is positive, then the G has credit // to allocate gcAssistBytes bytes without assisting. If this // is negative, then the G must correct this by performing // scan work. We track this in bytes to make it fast to update // and check for debt in the malloc hot path. The assist ratio // determines how this corresponds to scan work debt. gcAssistBytes int64 } gobuf \u8fd9\u91cc\u9762\u6709\u4e00\u4e2a sched \u7ed3\u6784\u4f53\u8bb0\u5f55\u4e86 g\u7684\u4e0a\u4e0b\u6587 type gobuf struct { sp uintptr // rsp\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u4e5f\u5c31\u662fstack pointer pc uintptr // rip\u5bc4\u5b58\u5668\u7684\u503c\uff0c g guintptr // \u5bf9\u5e94\u4e86\u54ea\u4e00\u4e2ag \u2026 ret uintptr // \u8fd4\u56de\u503c lr uintptr bp uintptr // \u90e8\u5206\u6709rbp\u5bc4\u5b58\u5668\u7684\u67b6\u6784\uff0cfor framepointer-enabled architectures } M type m struct { g0 * g // \u5e26\u6709\u8c03\u5ea6\u6808\u7684goroutine goroutine with scheduling stack morebuf gobuf // gobuf arg to morestack divmod uint32 // div/mod denominator for arm - known to liblink // Fields not known to debuggers. procid uint64 // for debuggers, but offset not hard-coded gsignal * g // signal-handling g goSigStack gsignalStack // Go-allocated signal handling stack sigmask sigset // storage for saved signal mask tls [ tlsSlots ] uintptr // thread-local storage (for x86 extern register) mstartfn func () curg * g // \u5f53\u524d\u8fd0\u884c\u7684 g caughtsig guintptr // goroutine running during fatal signal p puintptr // attached p for executing go code (nil if not executing go code) nextp puintptr oldp puintptr // the p that was attached before executing a syscall id int64 mallocing int32 throwing int32 preemptoff string // if != \"\", keep curg running on this m locks int32 dying int32 profilehz int32 spinning bool // m is out of work and is actively looking for work blocked bool // m is blocked on a note newSigstack bool // minit on C thread called sigaltstack printlock int8 incgo bool // m is executing a cgo call freeWait uint32 // if == 0, safe to free g0 and delete m (atomic) fastrand [ 2 ] uint32 needextram bool traceback uint8 ncgocall uint64 // number of cgo calls in total ncgo int32 // number of cgo calls currently in progress cgoCallersUse uint32 // if non-zero, cgoCallers in use temporarily cgoCallers * cgoCallers // cgo traceback if crashing in cgo call doesPark bool // non-P running threads: sysmon and newmHandoff never use .park park note alllink * m // on allm schedlink muintptr lockedg guintptr createstack [ 32 ] uintptr // stack that created this thread. lockedExt uint32 // tracking for external LockOSThread lockedInt uint32 // tracking for internal lockOSThread nextwaitm muintptr // next m waiting for lock waitunlockf func ( * g , unsafe . Pointer ) bool waitlock unsafe . Pointer waittraceev byte waittraceskip int startingtrace bool syscalltick uint32 freelink * m // on sched.freem // mFixup is used to synchronize OS related m state // (credentials etc) use mutex to access. To avoid deadlocks // an atomic.Load() of used being zero in mDoFixupFn() // guarantees fn is nil. mFixup struct { lock mutex used uint32 fn func ( bool ) bool } // these are here because they are too large to be on the stack // of low-level NOSPLIT functions. libcall libcall libcallpc uintptr // for cpu profiler libcallsp uintptr libcallg guintptr syscall libcall // stores syscall parameters on windows vdsoSP uintptr // SP for traceback while in VDSO call (0 if not in call) vdsoPC uintptr // PC for traceback while in VDSO call // preemptGen counts the number of completed preemption // signals. This is used to detect when a preemption is // requested, but fails. Accessed atomically. preemptGen uint32 // Whether this is a pending preemption signal on this M. // Accessed atomically. signalPending uint32 dlogPerM mOS // Up to 10 locks held by this m, maintained by the lock ranking code. locksHeldLen int locksHeld [ 10 ] heldLockInfo } P type p struct { id int32 status uint32 // one of pidle/prunning/... link puintptr schedtick uint32 // incremented on every scheduler call syscalltick uint32 // incremented on every system call sysmontick sysmontick // last tick observed by sysmon m muintptr // back-link to associated m (nil if idle) mcache * mcache pcache pageCache raceprocctx uintptr deferpool [ 5 ][] * _defer // pool of available defer structs of different sizes (see panic.go) deferpoolbuf [ 5 ][ 32 ] * _defer // Cache of goroutine ids, amortizes accesses to runtime\u00b7sched.goidgen. goidcache uint64 goidcacheend uint64 // Queue of runnable goroutines. Accessed without lock. runqhead uint32 runqtail uint32 runq [ 256 ] guintptr // 256\u4e2a\u73af\u884c\u961f\u5217g\u7684\u6307\u9488 // runnext, if non-nil, is a runnable G that was ready'd by // the current G and should be run next instead of what's in // runq if there's time remaining in the running G's time // slice. It will inherit the time left in the current time // slice. If a set of goroutines is locked in a // communicate-and-wait pattern, this schedules that set as a // unit and eliminates the (potentially large) scheduling // latency that otherwise arises from adding the ready'd // goroutines to the end of the run queue. // // Note that while other P's may atomically CAS this to zero, // only the owner P can CAS it to a valid G. runnext guintptr } global g \u91c7\u7528gQueue\u5b9e\u73b0\uff0c\u540c\u65f6\u6709\u4e00\u4e2a\u5168\u5c40 mutex type schedt struct { // accessed atomically. keep at top to ensure alignment on 32-bit systems. goidgen uint64 lastpoll uint64 // time of last network poll, 0 if currently polling pollUntil uint64 // time to which current poll is sleeping lock mutex // When increasing nmidle, nmidlelocked, nmsys, or nmfreed, be // sure to call checkdead(). midle muintptr // idle m's waiting for work nmidle int32 // number of idle m's waiting for work nmidlelocked int32 // number of locked m's waiting for work mnext int64 // number of m's that have been created and next M ID maxmcount int32 // maximum number of m's allowed (or die) nmsys int32 // number of system m's not counted for deadlock nmfreed int64 // cumulative number of freed m's ngsys uint32 // number of system goroutines; updated atomically pidle puintptr // idle p's npidle uint32 nmspinning uint32 // See \"Worker thread parking/unparking\" comment in proc.go. // Global runnable queue.\uff01\uff01\uff01\uff01 runq gQueue runqsize int32 // disable controls selective disabling of the scheduler. // // Use schedEnableUser to control this. // // disable is protected by sched.lock. disable struct { // user disables scheduling of user goroutines. user bool runnable gQueue // pending runnable Gs n int32 // length of runnable } // Global cache of dead G's. gFree struct { lock mutex stack gList // Gs with stacks noStack gList // Gs without stacks n int32 } // Central cache of sudog structs. sudoglock mutex sudogcache * sudog // Central pool of available defer structs of different sizes. deferlock mutex deferpool [ 5 ] * _defer // freem is the list of m's waiting to be freed when their // m.exited is set. Linked through m.freelink. freem * m gcwaiting uint32 // gc is waiting to run stopwait int32 stopnote note sysmonwait uint32 sysmonnote note // While true, sysmon not ready for mFixup calls. // Accessed atomically. sysmonStarting uint32 // safepointFn should be called on each P at the next GC // safepoint if p.runSafePointFn is set. safePointFn func ( * p ) safePointWait int32 safePointNote note profilehz int32 // cpu profiling rate procresizetime int64 // nanotime() of last change to gomaxprocs totaltime int64 // \u222bgomaxprocs dt up to procresizetime // sysmonlock protects sysmon's actions on the runtime. // // Acquire and hold this mutex to block sysmon from interacting // with the rest of the runtime. sysmonlock mutex _ uint32 // ensure timeToRun has 8-byte alignment // timeToRun is a distribution of scheduling latencies, defined // as the sum of time a G spends in the _Grunnable state before // it transitions to _Grunning. // // timeToRun is protected by sched.lock. timeToRun timeHistogram } // A gQueue is a dequeue of Gs linked through g.schedlink. A G can only // be on one gQueue or gList at a time. type gQueue struct { head guintptr tail guintptr }","title":"gmp\u4ee3\u7801\u89e3\u91ca"},{"location":"pl/golang-imp/gmp/#gmp-runtime","text":"","title":"GMP runtime \u91cc\u9762\u90fd\u6709\u4ec0\u4e48"},{"location":"pl/golang-imp/gmp/#g","text":"type g struct { stack stack // \u5806\u6808\u53c2\u6570 ...... m * m // \u5f53\u524d\u4f7f\u7528\u7684\u7684 M sched gobuf // \u5b58\u50a8\u4e86g\u7684\u4e0a\u4e0b\u6587\u3002 // \u5f53\u72b6\u6001\u662f\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u65f6\uff0csp\u5806\u6808\u6307\u9488\uff0cpc\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c syscallsp uintptr // if status==Gsyscall, syscallsp = sched.sp to use during gc syscallpc uintptr // if status==Gsyscall, syscallpc = sched.pc to use during gc ...... // param \u662f\u901a\u7528\u6307\u9488\u53c2\u6570\u5b57\u6bb5\uff0c\u7528\u4e8e\u5728\u96be\u4ee5\u627e\u5230\u53c2\u6570\u7684\u5176\u4ed6\u5b58\u50a8\u7684\u7279\u5b9a\u4e0a\u4e0b\u6587\u4e2d\u4f20\u9012\u503c\u3002 \u76ee\u524d\u4ee5\u4e09\u79cd\u65b9\u5f0f\u4f7f\u7528\uff1a // 1. \u5f53\u4e00\u4e2achannel\u5524\u9192\u4e00\u4e2a\u963b\u585e\u7684goroutine\u65f6\uff0c // \u5c06\u8bbe\u7f6e\u53c2\u6570\u8bbe\u7f6e\u6307\u5411\u4e00\u4e2a\u7b49\u5f85\u4e2d\u4ee5\u53ca\u5b8c\u6210\u963b\u585e\u8fc7\u7a0b\u7684goroutine param unsafe . Pointer // \u7528\u4e8e\u53c2\u6570\u4f20\u9012\uff0c\u7761\u7720\u65f6\u5176\u4ed6goroutine\u53ef\u4ee5\u8bbe\u7f6e\u53c2\u6570\uff0c\u5524\u9192\u65f6\u5019goroutine\u53ef\u4ee5\u83b7\u53d6\u5230\u3002 atomicstatus uint32 stackLock uint32 // sigprof/scang lock; TODO: fold in to atomicstatus goid int64 schedlink guintptr waitsince int64 // g \u963b\u585e\u7684\u5927\u81f4\u65f6\u95f4 waitreason waitReason // if status==Gwaiting preempt bool // preemption signal, duplicates stackguard0 = stackpreempt preemptStop bool // transition to _Gpreempted on preemption; otherwise, just deschedule preemptShrink bool // shrink stack at synchronous safe point // asyncSafePoint is set if g is stopped at an asynchronous // safe point. This means there are frames on the stack // without precise pointer information. asyncSafePoint bool paniconfault bool // panic (instead of crash) on unexpected fault address gcscandone bool // g has scanned stack; protected by _Gscan bit in status throwsplit bool // must not split stack // activeStackChans indicates that there are unlocked channels // pointing into this goroutine's stack. If true, stack // copying needs to acquire channel locks to protect these // areas of the stack. activeStackChans bool // parkingOnChan indicates that the goroutine is about to // park on a chansend or chanrecv. Used to signal an unsafe point // for stack shrinking. It's a boolean value, but is updated atomically. parkingOnChan uint8 raceignore int8 // ignore race detection events sysblocktraced bool // StartTrace has emitted EvGoInSyscall about this goroutine tracking bool // whether we're tracking this G for sched latency statistics trackingSeq uint8 // used to decide whether to track this G runnableStamp int64 // timestamp of when the G last became runnable, only used when tracking runnableTime int64 // the amount of time spent runnable, cleared when running, only used when tracking sysexitticks int64 // cputicks when syscall has returned (for tracing) traceseq uint64 // trace event sequencer tracelastp puintptr // last P emitted an event for this goroutine lockedm muintptr sig uint32 writebuf [] byte sigcode0 uintptr sigcode1 uintptr sigpc uintptr gopc uintptr // pc of go statement that created this goroutine ancestors * [] ancestorInfo // ancestor information goroutine(s) that created this goroutine (only used if debug.tracebackancestors) startpc uintptr // pc of goroutine function racectx uintptr waiting * sudog // sudog structures this g is waiting on (that have a valid elem ptr); in lock order cgoCtxt [] uintptr // cgo traceback context labels unsafe . Pointer // profiler labels timer * timer // cached timer for time.Sleep selectDone uint32 // are we participating in a select and did someone win the race? // Per-G GC state // gcAssistBytes is this G's GC assist credit in terms of // bytes allocated. If this is positive, then the G has credit // to allocate gcAssistBytes bytes without assisting. If this // is negative, then the G must correct this by performing // scan work. We track this in bytes to make it fast to update // and check for debt in the malloc hot path. The assist ratio // determines how this corresponds to scan work debt. gcAssistBytes int64 }","title":"G"},{"location":"pl/golang-imp/gmp/#gobuf","text":"\u8fd9\u91cc\u9762\u6709\u4e00\u4e2a sched \u7ed3\u6784\u4f53\u8bb0\u5f55\u4e86 g\u7684\u4e0a\u4e0b\u6587 type gobuf struct { sp uintptr // rsp\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u4e5f\u5c31\u662fstack pointer pc uintptr // rip\u5bc4\u5b58\u5668\u7684\u503c\uff0c g guintptr // \u5bf9\u5e94\u4e86\u54ea\u4e00\u4e2ag \u2026 ret uintptr // \u8fd4\u56de\u503c lr uintptr bp uintptr // \u90e8\u5206\u6709rbp\u5bc4\u5b58\u5668\u7684\u67b6\u6784\uff0cfor framepointer-enabled architectures }","title":"gobuf"},{"location":"pl/golang-imp/gmp/#m","text":"type m struct { g0 * g // \u5e26\u6709\u8c03\u5ea6\u6808\u7684goroutine goroutine with scheduling stack morebuf gobuf // gobuf arg to morestack divmod uint32 // div/mod denominator for arm - known to liblink // Fields not known to debuggers. procid uint64 // for debuggers, but offset not hard-coded gsignal * g // signal-handling g goSigStack gsignalStack // Go-allocated signal handling stack sigmask sigset // storage for saved signal mask tls [ tlsSlots ] uintptr // thread-local storage (for x86 extern register) mstartfn func () curg * g // \u5f53\u524d\u8fd0\u884c\u7684 g caughtsig guintptr // goroutine running during fatal signal p puintptr // attached p for executing go code (nil if not executing go code) nextp puintptr oldp puintptr // the p that was attached before executing a syscall id int64 mallocing int32 throwing int32 preemptoff string // if != \"\", keep curg running on this m locks int32 dying int32 profilehz int32 spinning bool // m is out of work and is actively looking for work blocked bool // m is blocked on a note newSigstack bool // minit on C thread called sigaltstack printlock int8 incgo bool // m is executing a cgo call freeWait uint32 // if == 0, safe to free g0 and delete m (atomic) fastrand [ 2 ] uint32 needextram bool traceback uint8 ncgocall uint64 // number of cgo calls in total ncgo int32 // number of cgo calls currently in progress cgoCallersUse uint32 // if non-zero, cgoCallers in use temporarily cgoCallers * cgoCallers // cgo traceback if crashing in cgo call doesPark bool // non-P running threads: sysmon and newmHandoff never use .park park note alllink * m // on allm schedlink muintptr lockedg guintptr createstack [ 32 ] uintptr // stack that created this thread. lockedExt uint32 // tracking for external LockOSThread lockedInt uint32 // tracking for internal lockOSThread nextwaitm muintptr // next m waiting for lock waitunlockf func ( * g , unsafe . Pointer ) bool waitlock unsafe . Pointer waittraceev byte waittraceskip int startingtrace bool syscalltick uint32 freelink * m // on sched.freem // mFixup is used to synchronize OS related m state // (credentials etc) use mutex to access. To avoid deadlocks // an atomic.Load() of used being zero in mDoFixupFn() // guarantees fn is nil. mFixup struct { lock mutex used uint32 fn func ( bool ) bool } // these are here because they are too large to be on the stack // of low-level NOSPLIT functions. libcall libcall libcallpc uintptr // for cpu profiler libcallsp uintptr libcallg guintptr syscall libcall // stores syscall parameters on windows vdsoSP uintptr // SP for traceback while in VDSO call (0 if not in call) vdsoPC uintptr // PC for traceback while in VDSO call // preemptGen counts the number of completed preemption // signals. This is used to detect when a preemption is // requested, but fails. Accessed atomically. preemptGen uint32 // Whether this is a pending preemption signal on this M. // Accessed atomically. signalPending uint32 dlogPerM mOS // Up to 10 locks held by this m, maintained by the lock ranking code. locksHeldLen int locksHeld [ 10 ] heldLockInfo }","title":"M"},{"location":"pl/golang-imp/gmp/#p","text":"type p struct { id int32 status uint32 // one of pidle/prunning/... link puintptr schedtick uint32 // incremented on every scheduler call syscalltick uint32 // incremented on every system call sysmontick sysmontick // last tick observed by sysmon m muintptr // back-link to associated m (nil if idle) mcache * mcache pcache pageCache raceprocctx uintptr deferpool [ 5 ][] * _defer // pool of available defer structs of different sizes (see panic.go) deferpoolbuf [ 5 ][ 32 ] * _defer // Cache of goroutine ids, amortizes accesses to runtime\u00b7sched.goidgen. goidcache uint64 goidcacheend uint64 // Queue of runnable goroutines. Accessed without lock. runqhead uint32 runqtail uint32 runq [ 256 ] guintptr // 256\u4e2a\u73af\u884c\u961f\u5217g\u7684\u6307\u9488 // runnext, if non-nil, is a runnable G that was ready'd by // the current G and should be run next instead of what's in // runq if there's time remaining in the running G's time // slice. It will inherit the time left in the current time // slice. If a set of goroutines is locked in a // communicate-and-wait pattern, this schedules that set as a // unit and eliminates the (potentially large) scheduling // latency that otherwise arises from adding the ready'd // goroutines to the end of the run queue. // // Note that while other P's may atomically CAS this to zero, // only the owner P can CAS it to a valid G. runnext guintptr }","title":"P"},{"location":"pl/golang-imp/gmp/#global-g","text":"\u91c7\u7528gQueue\u5b9e\u73b0\uff0c\u540c\u65f6\u6709\u4e00\u4e2a\u5168\u5c40 mutex type schedt struct { // accessed atomically. keep at top to ensure alignment on 32-bit systems. goidgen uint64 lastpoll uint64 // time of last network poll, 0 if currently polling pollUntil uint64 // time to which current poll is sleeping lock mutex // When increasing nmidle, nmidlelocked, nmsys, or nmfreed, be // sure to call checkdead(). midle muintptr // idle m's waiting for work nmidle int32 // number of idle m's waiting for work nmidlelocked int32 // number of locked m's waiting for work mnext int64 // number of m's that have been created and next M ID maxmcount int32 // maximum number of m's allowed (or die) nmsys int32 // number of system m's not counted for deadlock nmfreed int64 // cumulative number of freed m's ngsys uint32 // number of system goroutines; updated atomically pidle puintptr // idle p's npidle uint32 nmspinning uint32 // See \"Worker thread parking/unparking\" comment in proc.go. // Global runnable queue.\uff01\uff01\uff01\uff01 runq gQueue runqsize int32 // disable controls selective disabling of the scheduler. // // Use schedEnableUser to control this. // // disable is protected by sched.lock. disable struct { // user disables scheduling of user goroutines. user bool runnable gQueue // pending runnable Gs n int32 // length of runnable } // Global cache of dead G's. gFree struct { lock mutex stack gList // Gs with stacks noStack gList // Gs without stacks n int32 } // Central cache of sudog structs. sudoglock mutex sudogcache * sudog // Central pool of available defer structs of different sizes. deferlock mutex deferpool [ 5 ] * _defer // freem is the list of m's waiting to be freed when their // m.exited is set. Linked through m.freelink. freem * m gcwaiting uint32 // gc is waiting to run stopwait int32 stopnote note sysmonwait uint32 sysmonnote note // While true, sysmon not ready for mFixup calls. // Accessed atomically. sysmonStarting uint32 // safepointFn should be called on each P at the next GC // safepoint if p.runSafePointFn is set. safePointFn func ( * p ) safePointWait int32 safePointNote note profilehz int32 // cpu profiling rate procresizetime int64 // nanotime() of last change to gomaxprocs totaltime int64 // \u222bgomaxprocs dt up to procresizetime // sysmonlock protects sysmon's actions on the runtime. // // Acquire and hold this mutex to block sysmon from interacting // with the rest of the runtime. sysmonlock mutex _ uint32 // ensure timeToRun has 8-byte alignment // timeToRun is a distribution of scheduling latencies, defined // as the sum of time a G spends in the _Grunnable state before // it transitions to _Grunning. // // timeToRun is protected by sched.lock. timeToRun timeHistogram } // A gQueue is a dequeue of Gs linked through g.schedlink. A G can only // be on one gQueue or gList at a time. type gQueue struct { head guintptr tail guintptr }","title":"global g"},{"location":"pl/golang-imp/interface/","text":"Interface{}\u7684\u5e95\u5c42\u5b9e\u73b0 Interface \u63a5\u53e3 \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u63a5\u53e3\u662f\u4e00\u4e2a \u5171\u4eab\u8fb9\u754c \uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u72ec\u7acb\u7ec4\u4ef6\u4e4b\u95f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u5171\u4eab\u8fb9\u754c\u6765\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u3002\u8fd9\u79cd\u4fe1\u606f\u4ea4\u6362\u53ef\u4ee5\u5728\u8f6f\u4ef6\u3001\u786c\u4ef6\u3001\u5916\u56f4\u8bbe\u5907\u3001\u751a\u81f3\u4e0e\u4eba\u4e4b\u95f4\u8fdb\u884c\u3002\u63a5\u53e3\u7684\u5b58\u5728\u65e0\u7591\u662f\u5e26\u6765\u597d\u5904\u7684\uff1a \u9690\u85cf\u7ec6\u8282 \uff1a \u63a5\u53e3\u5bf9\u5bf9\u8c61\u8fdb\u884c\u4e86\u5fc5\u8981\u7684\u62bd\u8c61\u3002\u53ea\u8981\u6ee1\u8db3\u63a5\u53e3\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fdb\u884c\u5bf9\u63a5\uff0c\u4e0d\u5fc5\u5173\u6ce8\u5982\u4f55\u5b9e\u73b0\u4e86\u63a5\u53e3\u3002 \u63a7\u5236\u7cfb\u7edf\u590d\u6742\u6027 \uff1a\u901a\u8fc7\u63a5\u53e3\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \u6a21\u5757\u5316 \u6784\u5efa\u8d1f\u8d23\u800c\u5e9e\u5927\u7684\u7cfb\u7edf\u3002\u5c06\u7cfb\u7edf\u62c6\u5206\u6210\u6a21\u5757\u3002 \u6743\u9650\u63a7\u5236 \uff1a \u63a5\u53e3\u662f\u7cfb\u7edf\u4e0e\u5916\u754c\u4ea4\u6d41\u7684\u552f\u4e00\u9014\u5f84\uff0c\u901a\u8fc7\u5bf9\u63a5\u53e3\u63a5\u5165\u65b9\u5f0f\u548c\u63a5\u5165\u884c\u4e3a\u7684\u63a7\u5236\uff0c\u4fdd\u8bc1\u5b89\u5168\u3002 \u7531\u4e8e\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u7684\u662f\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u5728\u5bf9\u4e8e\u63a5\u53e3\u7684\u4ecb\u7ecd\u4e0a\u4f1a\u76f8\u5bf9\u7684\u7b80\u7ec3\u3002\u5728\u6b64\u4e4b\u524d\u4f60\u9700\u8981\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528\u63a5\u53e3\u3002 1 go \u8bed\u8a00\u4e2d\u7684\u63a5\u53e3 Go\u8bed\u8a00\u4e2d\u7684\u63a5\u53e3\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\u3002\u7531\u4e8eGo\u8bed\u8a00\u4e2d\u4e0d\u5b58\u5728\u7ee7\u627f\uff0c\u63a5\u53e3\u7684\u5b58\u5728\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u6241\u5e73\u5316\u3001\u9762\u5411\u7ec4\u548c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u6709\u4e24\u79cd\u5f62\u5f0f\u7684\u63a5\u53e3\uff0c\u4ed6\u4eec\u7684\u5e95\u5c42\u5b9e\u73b0\u5e76\u4e0d\u4e00\u6837\u3002 1.1 \u5e26\u6709\u65b9\u6cd5\u7b7e\u540d\u7684\u63a5\u53e3 \u5e26\u6709\u65b9\u6cd5\u7b7e\u540d\u7684\u63a5\u53e3\u5185\u90e8\u5305\u542b\u5176\u4ed6\u7c7b\u578b\u53ef\u4ee5\u5b9e\u73b0\u7684\u65b9\u6cd5\u7b7e\u540d\u7684\u96c6\u5408\u3002\u63a5\u53e3\u7684\u5b9e\u73b0\u662f\u9690\u5f0f\u7684\uff0c\u53ea\u8981\u5b9e\u73b0\u4e86\u63a5\u53e3\u4e2d\u5168\u90e8\u7684\u65b9\u6cd5\u7b7e\u540d\uff0c\u90a3\u4e48\u5c31\u5b9e\u73b0\u4e86\u63a5\u53e3\u3002 type InterfaceWithFunc interface { funcA () funcB ( a int , b int ) int } 1.2 \u7a7a\u63a5\u53e3 \u7a7a\u63a5\u53e3\u662f\u4e0d\u5305\u542b\u7b7e\u540d\u7684\u63a5\u53e3\uff0c type InterfaceN interface {} \u7a7a\u63a5\u53e3\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b\uff0c\u6bd4\u5982\u6211\u4eec\u4f7f\u7528\u7684\u8f93\u5165\u8f93\u51fa\u51fd\u6570 fmt.Println(a ...interface{}) \uff0c\u7a7a\u63a5\u53e3\u7684\u5b58\u5728\u662f\u7684\u6211\u4eec\u4e0d\u7528\u5bf9\u6bcf\u4e00\u79cd\u7c7b\u578b\u63d0\u4f9b\u4e00\u4e2aPrintln\u51fd\u6570\u3002 \u5f53\u7136\u8fd9\u4e2a\u5728go\u6b63\u5f0f\u5f15\u5165\u8303\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8303\u578b\u6765\u5b9e\u73b0\u3002Interface\u7684\u7c7b\u578b\u65ad\u8a00\uff0c\u4f4d\u4e8eruntime\u4e0b\uff0c\u800c\u5982\u679c\u4f7f\u7528\u4e86\u8303\u578b\u5219\u901a\u8fc7\u7f16\u8bd1\u5668\u5bf9\u591a\u79cd\u7c7b\u578b\u8fdb\u884c\u7f16\u8bd1\u3002 \u8fdb\u884c\u7c7b\u578b\u65ad\u8a00\u7684\u8bed\u6cd5 i.(type) \uff0c\u4f7f\u7528switch\u51fd\u6570\u6765\u5bf9\u65ad\u8a00\u7c7b\u578b\u8fdb\u884c\u5224\u65ad\uff1a switch f := arg .( type ) { case bool : p . fmtBool ( f , verb ) ... case int64 : p . fmtInt : ... }","title":"interface\u7684\u5b9e\u73b0"},{"location":"pl/golang-imp/interface/#interface","text":"Interface \u63a5\u53e3 \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u63a5\u53e3\u662f\u4e00\u4e2a \u5171\u4eab\u8fb9\u754c \uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u72ec\u7acb\u7ec4\u4ef6\u4e4b\u95f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u5171\u4eab\u8fb9\u754c\u6765\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u3002\u8fd9\u79cd\u4fe1\u606f\u4ea4\u6362\u53ef\u4ee5\u5728\u8f6f\u4ef6\u3001\u786c\u4ef6\u3001\u5916\u56f4\u8bbe\u5907\u3001\u751a\u81f3\u4e0e\u4eba\u4e4b\u95f4\u8fdb\u884c\u3002\u63a5\u53e3\u7684\u5b58\u5728\u65e0\u7591\u662f\u5e26\u6765\u597d\u5904\u7684\uff1a \u9690\u85cf\u7ec6\u8282 \uff1a \u63a5\u53e3\u5bf9\u5bf9\u8c61\u8fdb\u884c\u4e86\u5fc5\u8981\u7684\u62bd\u8c61\u3002\u53ea\u8981\u6ee1\u8db3\u63a5\u53e3\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fdb\u884c\u5bf9\u63a5\uff0c\u4e0d\u5fc5\u5173\u6ce8\u5982\u4f55\u5b9e\u73b0\u4e86\u63a5\u53e3\u3002 \u63a7\u5236\u7cfb\u7edf\u590d\u6742\u6027 \uff1a\u901a\u8fc7\u63a5\u53e3\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \u6a21\u5757\u5316 \u6784\u5efa\u8d1f\u8d23\u800c\u5e9e\u5927\u7684\u7cfb\u7edf\u3002\u5c06\u7cfb\u7edf\u62c6\u5206\u6210\u6a21\u5757\u3002 \u6743\u9650\u63a7\u5236 \uff1a \u63a5\u53e3\u662f\u7cfb\u7edf\u4e0e\u5916\u754c\u4ea4\u6d41\u7684\u552f\u4e00\u9014\u5f84\uff0c\u901a\u8fc7\u5bf9\u63a5\u53e3\u63a5\u5165\u65b9\u5f0f\u548c\u63a5\u5165\u884c\u4e3a\u7684\u63a7\u5236\uff0c\u4fdd\u8bc1\u5b89\u5168\u3002 \u7531\u4e8e\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u7684\u662f\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u5728\u5bf9\u4e8e\u63a5\u53e3\u7684\u4ecb\u7ecd\u4e0a\u4f1a\u76f8\u5bf9\u7684\u7b80\u7ec3\u3002\u5728\u6b64\u4e4b\u524d\u4f60\u9700\u8981\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528\u63a5\u53e3\u3002","title":"Interface{}\u7684\u5e95\u5c42\u5b9e\u73b0"},{"location":"pl/golang-imp/interface/#1-go","text":"Go\u8bed\u8a00\u4e2d\u7684\u63a5\u53e3\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\u3002\u7531\u4e8eGo\u8bed\u8a00\u4e2d\u4e0d\u5b58\u5728\u7ee7\u627f\uff0c\u63a5\u53e3\u7684\u5b58\u5728\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u6241\u5e73\u5316\u3001\u9762\u5411\u7ec4\u548c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u6709\u4e24\u79cd\u5f62\u5f0f\u7684\u63a5\u53e3\uff0c\u4ed6\u4eec\u7684\u5e95\u5c42\u5b9e\u73b0\u5e76\u4e0d\u4e00\u6837\u3002","title":"1 go \u8bed\u8a00\u4e2d\u7684\u63a5\u53e3"},{"location":"pl/golang-imp/interface/#11","text":"\u5e26\u6709\u65b9\u6cd5\u7b7e\u540d\u7684\u63a5\u53e3\u5185\u90e8\u5305\u542b\u5176\u4ed6\u7c7b\u578b\u53ef\u4ee5\u5b9e\u73b0\u7684\u65b9\u6cd5\u7b7e\u540d\u7684\u96c6\u5408\u3002\u63a5\u53e3\u7684\u5b9e\u73b0\u662f\u9690\u5f0f\u7684\uff0c\u53ea\u8981\u5b9e\u73b0\u4e86\u63a5\u53e3\u4e2d\u5168\u90e8\u7684\u65b9\u6cd5\u7b7e\u540d\uff0c\u90a3\u4e48\u5c31\u5b9e\u73b0\u4e86\u63a5\u53e3\u3002 type InterfaceWithFunc interface { funcA () funcB ( a int , b int ) int }","title":"1.1 \u5e26\u6709\u65b9\u6cd5\u7b7e\u540d\u7684\u63a5\u53e3"},{"location":"pl/golang-imp/interface/#12","text":"\u7a7a\u63a5\u53e3\u662f\u4e0d\u5305\u542b\u7b7e\u540d\u7684\u63a5\u53e3\uff0c type InterfaceN interface {} \u7a7a\u63a5\u53e3\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b\uff0c\u6bd4\u5982\u6211\u4eec\u4f7f\u7528\u7684\u8f93\u5165\u8f93\u51fa\u51fd\u6570 fmt.Println(a ...interface{}) \uff0c\u7a7a\u63a5\u53e3\u7684\u5b58\u5728\u662f\u7684\u6211\u4eec\u4e0d\u7528\u5bf9\u6bcf\u4e00\u79cd\u7c7b\u578b\u63d0\u4f9b\u4e00\u4e2aPrintln\u51fd\u6570\u3002 \u5f53\u7136\u8fd9\u4e2a\u5728go\u6b63\u5f0f\u5f15\u5165\u8303\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8303\u578b\u6765\u5b9e\u73b0\u3002Interface\u7684\u7c7b\u578b\u65ad\u8a00\uff0c\u4f4d\u4e8eruntime\u4e0b\uff0c\u800c\u5982\u679c\u4f7f\u7528\u4e86\u8303\u578b\u5219\u901a\u8fc7\u7f16\u8bd1\u5668\u5bf9\u591a\u79cd\u7c7b\u578b\u8fdb\u884c\u7f16\u8bd1\u3002 \u8fdb\u884c\u7c7b\u578b\u65ad\u8a00\u7684\u8bed\u6cd5 i.(type) \uff0c\u4f7f\u7528switch\u51fd\u6570\u6765\u5bf9\u65ad\u8a00\u7c7b\u578b\u8fdb\u884c\u5224\u65ad\uff1a switch f := arg .( type ) { case bool : p . fmtBool ( f , verb ) ... case int64 : p . fmtInt : ... }","title":"1.2 \u7a7a\u63a5\u53e3"},{"location":"translate/tp1/","text":"\u3010\u7ffb\u8bd1\u8ba1\u52121\u3011Know Kubernetes \u2014 Pictorially Created: Feb 26, 2021 7:44 PM Year: 2019 link: https://medium.com/tarkalabs/know-kubernetes-pictorially-f6e6a0052dd0 writer: Sudhakar Rayavaram \u6807\u7b7e: kubernetes, \u6280\u672f \u4e0a\u4e00\u6b21\u8bf4\u5230\u7ffb\u8bd1\u8ba1\u5212\uff0c\u4f3c\u4e4e\u8fd8\u662f16\u5e74\u5728\u70b9\u77f3\u56e2\u961f\u7684\u65f6\u5019\u3002\u201cOpen Eyes Project\u201d\uff0c\u90a3\u65f6\u5019\u7f3a\u4e4f\u4e86\u63a8\u52a8\u529b\u3002\u8fd9\u6b21\u91cd\u65b0\u5f00\u59cb\uff0c\u7ffb\u8bd1\u4e00\u4e9b\u6280\u672f\u6587\u7ae0\u6216\u8005\uff0c\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002\u6682\u65f6\u4e0d\u7ed9\u4ed6\u4e00\u4e2a\u540d\u5b57\u5427\u3002 \u65b0\u7ffb\u8bd1\u8ba1\u5212 \u5b83\u6765\u4e86\u3002\u8fd9\u662f\u672c\u7cfb\u5217\u7684\u7b2c\u4e00\u7bc7\u7ffb\u8bd1\u6587\u7ae0\u3002 \u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u57282019\u5e74\u53d1\u8868\u5728medium\u4e0a\uff0c\u4f5c\u8005\u662fSudhakar Rayavaram\uff0c\u4e3b\u8981\u76ee\u7684\u901a\u8fc7\u56fe\u7247\u6f2b\u753b\u8bed\u8a00\u66f4\u597d\u7684\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3k8s\u7684\u57fa\u672c\u7ec4\u4ef6\u3002\u800c\u7ffb\u8bd1\u4ed6\u7684\u521d\u8877\u4e5f\u662f\u56e0\u4e3a\uff0c\u8bd1\u8005\u6b63\u5728\u5b66\u4e60k8s\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u901a\u8fc7\u6f2b\u753b-\u8ba4\u8bc6Kubernetes \u6700\u8fd1\uff0c\u6211\u5f00\u59cb\u4e86\u6211\u7684Kubernetes\u4e4b\u65c5\uff0c\u5e0c\u671b\u66f4\u597d\u7684\u53bb\u7406\u89e3\u5b83\u7684\u5185\u90e8\u539f\u7406\u3002\u6211\u505a\u4e86\u4e00\u4e2a\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\u7684\u6f14\u8bb2\uff0c\u8fd9\u91cc\u662f\u4ed6\u7684\u535a\u5ba2\u7248\u672c\u3002 Container \u5728\u6211\u4eec\u5f04\u6e05\u695a\u4ec0\u4e48\u662fKubernetes\u4e4b\u524d\uff0c\u6211\u4eec\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u5f04\u6e05\u695a\u5bb9\u5668\u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u4eec\u8fd9\u4e48\u53d7\u6b22\u8fce\u3002\u6bd5\u7adf\u5728\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u5bb9\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u8c08\u8bba\u5bb9\u5668\u7f16\u6392(containers orchestrator, Kubernetes)\u662f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\u3002 Container \u5bb9\u5668 \"Container\"\u5373\u662f\u4e00\u4e2a\u5bb9\u5668\uff0c\u2026\u2026\u7528\u6765\u88c5\u6240\u6709\u4f60\u653e\u8fdb\u53bb\u7684\u4e1c\u897f\u3002 \u8fd9\u4e9b\u4e1c\u897f\u5305\u62ec\u4e86\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u3001\u4f9d\u8d56\u5e93\u4ee5\u53ca\u4ee5\u53ca\u5b83\u6240\u4f9d\u8d56\u7684\u4e00\u4e9b\u73af\u5883\u76f4\u5230\u5185\u6838\u3002\u8fd9\u4e2d\u95f4\u7684\u5173\u952e\u5219\u662f\u9694\u79bb\u3002\u628a\u4f60\u6240\u6709\u7684\u4e1c\u897f\u548c\u5176\u4ed6\u7684\u73af\u5883\u3001\u7a0b\u5e8f\u7b49\u7b49\u9694\u79bb\u5f00\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u66f4\u597d\u7684\u63a7\u5236\u4ed6\u4eec\u3002 Workspace isolation(Process, Network) - \u5de5\u4f5c\u533a\u9694\u79bb\uff08\u8fdb\u7a0b\uff0c\u7f51\u7edc\uff09 Resource isolation(CPU, Memory) - \u8d44\u6e90\u9694\u79bb\uff08CPU\uff0c\u5185\u5b58\uff09 File System isolation(Union File System$ ^1$, Union FS) - \u6587\u4ef6\u7cfb\u7edf\u9694\u79bb\uff08\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\uff09 \u628a\u5bb9\u5668\u770b\u4f5c\u7cbe\u7b80\u7684\u865a\u62df\u673aVM\u3002\u5b83\u4eec\u7cbe\u7b80\uff0c\u80fd\u591f\u5feb\u901f\u542f\u52a8\uff0c\u800c\u4e14\u8fd9\u4e00\u5207\u90fd\u4e0d\u662f\u4ece\u96f6\u5efa\u7acb\u8d77\u6765\u7684\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u4f7f\u7528\u4e86linux\u4e2d\u5df2\u6709\u7684\u5de5\u5177\uff08\u5982cgroups, namespaces\uff09\u5efa\u7acb\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u62bd\u8c61\u5c42\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5bb9\u5668\u662f\u4ec0\u4e48\u4e86\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u4e3a\u4ec0\u4e48\u5b83\u4eec\u8fd9\u4e48\u53d7\u6b22\u8fce\u3002\u76f8\u6bd4\u4e8e\u4ec5\u4ec5\u53d1\u5e03\u4f60\u7684\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u6216\u8005\u4ee3\u7801\uff0c\u8fd9\u4f7f\u5f97\u53d1\u5e03\u80fd\u591f\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u7684\u6574\u4e2a\u73af\u5883\u6210\u4e3a\u4e86\u53ef\u80fd\uff0c\u56e0\u4e3a\u5bb9\u5668\u53ef\u4ee5\u88ab\u6784\u5efa\u4e3a\u975e\u5e38\u5c0f\u7684\u5355\u5143\u3002\u8fd9\u5b8c\u7f8e\u4fee\u590d\u4e86\u201cIt works in my machine\u201d\u7684\u95ee\u9898\u3002 \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528Kubernetes\uff1f \u5bb9\u5668\u4e00\u5207\u90fd\u4e0d\u9519\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7684\u65e5\u5b50\u4e5f\u6bd4\u4ee5\u524d\u66f4\u597d\u8fc7\u4e86\u3002\u53ef\u662f\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u50cfKubernetes\u8fd9\u6837\u7684\u5bb9\u5668\u7f16\u6392\u6280\u672f\u5462\uff1f too-many-containers \u5f53\u4f60\u8fbe\u5230\u4e0a\u56fe\u8fd9\u79cd\u72b6\u6001\u65f6\uff0c\u4f60\u5c31\u9700\u8981\u4ed6\u4e86\uff0c\u56e0\u4e3a\u4f60\u6709\u592a\u591a\u7684\u5bb9\u5668\u9700\u8981\u7ba1\u7406\u3002 Q\uff1a\u6211\u7684\u524d\u7aef\u5bb9\u5668\u5728\u54ea\u91cc\uff0c\u6211\u8fd0\u884c\u4e86\u591a\u4e2a\u524d\u7aef\u5bb9\u5668\uff1f A\uff1a\u5f88\u96be\u56de\u7b54\u3002\u8bf7\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u3002 Q\uff1a\u5982\u4f55\u8ba9\u6211\u7684\u524d\u7aef\u4ee3\u7801\u5bb9\u5668\u548c\u540e\u7aef\u5bb9\u5668\u8fdb\u884c\u901a\u8baf\uff1f A\uff1a\u5f88\u96be\u56de\u7b54\u3002\u6216\u8005\u4f60\u53ef\u4ee5\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u3002 Q\uff1a\u5982\u4f55\u8fdb\u884c\u6eda\u52a8\u5347\u7ea7(rolling upgrade)\uff1f A\uff1a\u5f88\u96be\u56de\u7b54\u3002\u8bf7\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u3002 \u4e3a\u4ec0\u4e48\u6211\u66f4\u559c\u6b22Kubernetes\uff1f \u6709\u5f88\u591a\u5bb9\u5668\u7f16\u6392\u5668\u53ef\u4ee5\u9009\u62e9\uff0c\u6bd4\u5982docker swarm\u3001Mesos\u3001Kubernets\u3002\u6211\u7684\u9009\u62e9\u662fKubernetes\uff0c\u56e0\u4e3aKubernetes\u50cf\u662f\u2026\u2026 like blocks \u2026\u2026\u4e50\u9ad8\u79ef\u6728\u4e00\u6837\u3002\u5b83\u4e0d\u4ec5\u6709\u8fd0\u884c\u5927\u89c4\u6a21\u5bb9\u5668\u7f16\u6392\u7684\u7ec4\u5efa\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u7075\u6d3b\u5730\u5bf9\u4e0d\u540c\u7ec4\u5efa\u8fdb\u884c\u5ba2\u5236\u5316\u7684\u66ff\u6362\u3002\u5f53\u4f60\u9700\u8981\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8c03\u5ea6\u5668\uff0c\u5f53\u7136\u53ea\u9700\u8981\u63d2\u5165\u5176\u4e2d\u5373\u53ef\u3002\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u8d44\u6e90\u7c7b\u578b\uff1f\u5199\u4e00\u4e2aCRD ^2 ^2 ( CustomResourceDefinition )\u5c31\u53ef\u4ee5\u3002\u6b64\u5916\uff0cKubernetes\u793e\u533a\u975e\u5e38\u7684\u6d3b\u8dc3\uff0c\u5404\u79cd\u5de5\u5177\u4e5f\u5728\u8fc5\u731b\u7684\u53d1\u5c55\u3002 Kubernetes\u7684\u67b6\u6784 Architecture \u6bcf\u4e00\u4e2aKubernetes\u96c6\u7fa4\u90fd\u6709\u4e24\u79cd\u8282\u70b9\uff08\u673a\u5668\uff09\uff1a\u4e3b\u8282\u70b9\uff08Master\uff09\u548cWorker\u8282\u70b9\uff08Worker\uff09\u3002\u4e3b\u8282\u70b9\uff0c\u5de5\u4f5c\u8282\u70b9\u3002\u987e\u540d\u601d\u4e49\uff0c\u4e3b\u8282\u70b9\u662f\u63a7\u5236\u548c\u76d1\u63a7\u96c6\u7fa4\u5373\u5de5\u4f5c\u8282\u70b9\u4e0a\u8fd0\u884c\u7684\u8d1f\u8f7d\u60c5\u51b5\u548c\u5e94\u7528\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u96c6\u7fa4\u53ef\u4ee5\u53ea\u6709\u5355\u4e2a\u7684\u8282\u70b9\uff0c\u4f46\u662f\u6700\u597d\u8fd8\u662f\u6709\u4e09\u4e2a\u8282\u70b9\u6765\u786e\u4fdd\u9ad8\u53ef\u7528\u6027\uff08\u5373\u6240\u8bf4\u7684HA Clusters\uff0c\u9ad8\u53ef\u7528\u96c6\u7fa4\uff09\u3002 \u7136\u540e\u6211\u4e48\u4ed4\u7ec6\u770b\u770b**\u4e3b\u8282\u70b9\uff08Master\uff09**\u4ed6\u662f\u600e\u4e48\u6784\u6210\u7684\uff1a master node etcd \uff1a\u7528\u4e8e\u5b58\u50a8Kubernetes\u5bf9\u8c61\u7684\u6240\u6709\u6570\u636e\u3001\u5b83\u4eec\u7684\u72b6\u6001\u3001\u8bbf\u95ee\u4fe1\u606f\u4ee5\u53ca\u5176\u4ed6\u8282\u70b9\u7684\u914d\u7f6e\u4fe1\u606f\u3002 **API Server\uff1a**RESTFul API\u670d\u52a1\u5668\u66b4\u9732\u4e86End Points\u4ee5\u4fbf\u4e8e\u63a7\u5236\u96c6\u7fa4\u3002\u51e0\u4e4e\u4e3b\u8282\u70b9\u5de5\u4f5c\u8282\u70b9\u4e0a\u7684\u6240\u6709\u7ec4\u5efa\u90fd\u4f1a\u4e8e\u8be5\u670d\u52a1\u5668\u901a\u8baf\u4ee5\u6267\u884c\u5b83\u4eec\u5404\u81ea\u7684\u529f\u80fd\u3002 Scheduler \uff1a\u8c03\u5ea6\u5668\uff0c\u51b3\u5b9a\u4e86\u5e94\u7528\u9700\u8981\u5728\u54ea\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u3002 control manager \uff1a \u63a7\u5236\u5668\uff0c\u662f\u4e00\u4e2a\u63a7\u5236\u5faa\u73af\uff0c\u5b83\u76d1\u89c6\u96c6\u7fa4\u7684\u72b6\u6001\uff08\u901a\u8fc7\u4eceAPI Server\u8c03\u53d6\u7684\u6570\u636e\uff09\uff0c\u5e76\u91c7\u53d6\u64cd\u4f5c\u4fdd\u8bc1\u8fbe\u5230\u9884\u671f\u7684\u72b6\u6001\u3002 \u5de5\u4f5c\u8282\u70b9\uff1a worker node **kubelet\uff1a**\u662f\u5de5\u4f5c\u8282\u70b9\u7684\u5fc3\u810f\u3002\u5b83\u4e0e\u4e3b\u8282\u70b9\u7684API\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u5e76\u4e3a\u5176\u8282\u8fd0\u884c\u5bb9\u5668\u8c03\u5ea6\u5668\u3002 **kube Proxy\uff1a**\u4f7f\u7528IP\u8868/IPVS\u6765\u5904\u7406pods\u7684\u7f51\u7edc\u9700\u6c42\u3002 **Pod\uff1a**Kubernetes\u4e2d\u7684\u6267\u884c\u8005\uff0c\u5b83\u8fd0\u884c\u4e86\u4f60\u7684\u6240\u6709\u5bb9\u5668\u3002\u6ca1\u6709POD\u7684\u7ed3\u6784\uff0c\u4f60\u4e0d\u80fd\u5728Kubernetes\u4e2d\u8fd0\u884c\u5bb9\u5668\u3002Pod\u589e\u52a0\u4e86\u8ba9Kuberenetes\u5728\u5bb9\u5668\u4e4b\u95f4\u5efa\u7acb\u7f51\u7edc\u7684\u65b9\u5f0f\u81f3\u5173\u91cd\u8981\u7684\u529f\u80fd Pod \u4e00\u4e2aPod\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5668\uff0c\u5e76\u4e14\u6240\u6709\u8fd0\u884c\u5728\u8fd9\u4e9b\u5bb9\u5668\u4e2d\u7684\u670d\u52a1\u5668\u80fd\u591f\u628a\u5f7c\u6b64\u770b\u4f5c\u672c\u5730\u4e3b\u673a\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u975e\u5e38\u65b9\u4fbf\u7684\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u670d\u52a1\u5206\u5272\u5230\u5355\u4e2a\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u88c5\u8f7d\u5230\u4e00\u4e2aPod\u4e2d\u3002Pod\u7684\u6a21\u5f0f\u4e5f\u6709\u591a\u79cd\uff0c\u6bd4\u5982sidecar\u3001proxy\u4ee5\u53caambassador\u4ee5\u65b9\u4fbf\u6ee1\u8db3\u4e0d\u540c\u7684\u9700\u6c42\u3002\u53ef\u4ee5\u67e5\u770b\u8fd9\u7bc7\u6587\u7ae0\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8ePod\u6a21\u5f0f\u7684\u4fe1\u606f\uff1a Multi-Container Pod Design Patterns in Kubernetes ^3 ^3 \u3002 Pod\u7f51\u7edc\u63a5\u53e3\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u80fd\u591f\u5c06\u540c\u4e00\u8282\u70b9\u4e2d\u7684\u5176\u4ed6pod\u6216\u8005\u5176\u4ed6\u5de5\u4f5c\u8282\u70b9\u4e2d\u7684Pod\u8054\u7f51\u3002 pod network \u6b64\u5916\uff0c\u6bcf\u4e2apod\u90fd\u4f1a\u88ab\u5206\u914d\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u80fd\u591f\u88abkube-proxy\u7528\u4e8e\u8def\u7531\u901a\u4fe1\u3002\u8fd9\u4e9bIP\u5730\u5740\u53ea\u80fd\u591f\u5728\u96c6\u7fa4\u4e2d\u53ef\u89c1\u3002 pod\u4e2d\u6302\u5728\u7684\u6570\u636e\u5377\uff08volume\uff09\u4e5f\u662f\u5bf9\u6240\u6709\u5bb9\u5668\u53ef\u89c1\u7684\uff0c\u6709\u65f6\u8fd9\u4e9b\u6570\u636e\u5377\u53ef\u4ee5\u88ab\u7528\u4e8e\u4e0d\u540cpod\u4e4b\u95f4\u7684\u5f02\u6b65\u901a\u4fe1\u3002\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u4f60\u7684\u5e94\u7528\u662f\u4e00\u4e2a\u56fe\u7247\u4e0a\u4f20\u5e94\u7528\uff08\u53ef\u80fd\u50cfInstagram\u4e00\u6837\uff09\uff0c\u5b83\u80fd\u591f\u4fdd\u5b58\u8fd9\u4e9b\u6587\u4ef6\u5728\u6570\u636e\u5377\u4e2d\uff0c\u540c\u4e00\u4e2apod\u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u80fd\u591f\u76d1\u89c6\u6570\u636e\u5377\u4e2d\u7684\u65b0\u6587\u4ef6\uff0c\u5e76\u5c06\u4ed6\u4eec\u5904\u7406\u6210\u591a\u79cd\u5927\u5c0f\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u5e76\u4e0a\u4f20\u5230\u4e91\u5b58\u50a8\u4e2d\u3002 Controllers \u63a7\u5236\u5668 \u5728Kubernetes\u4e2d\uff0c\u6709\u5f88\u591a\u79cd\u7684\u63a7\u5236\u5668\uff0c\u6bd4\u5982ReplicaSet\u3001Replication Controllers\u3001Deployments\u3001statefulset\u548cService\u3002\u8fd9\u4e9b\u5bf9\u8c61\u80fd\u591f\u4ee5\u8fd9\u6837\u6216\u90a3\u6837\u7684\u65b9\u5f0f\u63a7\u5236Pod\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5176\u4e2d\u76f8\u5bf9\u91cd\u8981\u7684\u4e00\u4e9b\u3002 ReplicaSet ReplicaSet\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u590d\u5236pod \u8fd9\u4e2a\u63a7\u5236\u5668\u7684\u4e3b\u8981\u804c\u8d23\u662f\u7ed9\u7279\u5b9a\u7684pod\u521b\u5efa\u526f\u672c\u3002\u5982\u679c\u4e00\u4e2apod\u56e0\u4e3a\u67d0\u79cd\u613f\u610f\u6b7b\u4ea1\u4e86\uff0c\u63a7\u5236\u5668\u4f1a\u63a5\u6536\u5230\u901a\u77e5\uff0c\u5e76\u7acb\u5373\u5f00\u59cb\u884c\u52a8\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684pod\u3002 Deployment Deployment\u901a\u8fc7\u63a7\u5236ReplicaSet Deployment\u662f\u4e00\u4e2a\u9ad8\u9636\u5bf9\u8c61\uff0c\u5b83\u4f7f\u7528ReplicaSet\u53bb\u7ba1\u7406\u526f\u672c\u3002\u5b83\u80fd\u591f\u901a\u8fc7\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684ReplicaSet\u6765\uff0c\u9010\u6e10\u7f29\u5c0f\uff08\u6700\u7ec8\u5220\u9664\uff09\u73b0\u6709\u7684ReplicaSet\u6765\u5b9e\u73b0\u6eda\u52a8\u5347\u7ea7\u3002 Service Service\u88ab\u8868\u793a\u4e3a\u65e0\u4eba\u673a\u5411\u76f8\u5e94\u7684Pod\u4e2d\u8fd0\u9001\u6570\u636e\u5305 Service\u7684\u4e3b\u8981\u6307\u8d23\u662f\u4f5c\u4e3a\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u6570\u636e\u5305\u5206\u53d1\u7ed9\u76f8\u5e94\u7684\u8282\u70b9\u3002\u5b83\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u63a7\u5236\u5668\u7ed3\u6784\uff0c\u7528\u4e8e\u5206\u7ec4\u76f8\u4f3c\u7684pod\uff08\u901a\u5e38\u7531pod\u6807\u7b7e\u8fdb\u884c\u533a\u5206\uff09\u5728\u5de5\u4f5c\u8282\u70b9\u4e4b\u95f4\u3002 \u5047\u8bbe\u4f60\u7684\u524d\u7aef\u5e94\u7528\u60f3\u4e0e\u540e\u7aef\u5e94\u7528\u673a\u68b0\u80fd\u901a\u4fe1\uff0c\u53ef\u80fd\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5b9e\u4f8b\u3002\u4e0e\u5176\u62c5\u5fc3\u5bf9\u6bcf\u4e00\u4e2a\u540e\u7aefpod\u8fdb\u884c\u7f16\u7801\uff0c\u4e0d\u5982\u76f4\u63a5\u5c06\u6570\u636e\u5305\u53d1\u9001\u7ed9\u540e\u7aefService\uff0c\u8ba9\u5b83\u6765\u51b3\u5b9a\u968f\u540e\u5982\u4f55\u53bb\u5e73\u8861\u8d1f\u8f7d\u5e76\u8fdb\u884c\u8f6c\u53d1\u3002 \u6ce8\u610f\uff0cService\u66f4\u50cf\u662f\u4e00\u4e2a\u865a\u62df\u5b9e\u4f53\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5305\u90fd\u662f\u901a\u8fc7IP\u8868/IPVS/CNI\u63d2\u4ef6\u8fdb\u884c\u5904\u7406\u7684\u3002\u5b83\u53ea\u662f\u8ba9\u6211\u4eec\u66f4\u5bb9\u6613\u628a\u5b83\u770b\u4f5c\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u5b9e\u4f53\uff0c\u4f7f\u5f97\u6211\u4eec\u66f4\u5bb9\u6613\u7684\u53bb\u7406\u89e3\u4ed6\u5728Kubernetes\u751f\u6001\u4e2d\u7684\u89d2\u8272\u3002 Ingress Ingress\u6d6e\u52a8\u7684\u5e73\u53f0\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u901a\u8fc7\u8be5\u5e73\u53f0\u6d41\u5165\u96c6\u7fa4\u4e2d Ingress\u63a7\u5236\u5668\u662f\u4e00\u4e2a\u4e0e\u5916\u90e8\u4e16\u754c\u8fdb\u884c\u8054\u7cfb\u7684\u5355\u70b9\uff0c\u7528\u4e8e\u4e0e\u96c6\u7fa4\u5185\u8fd0\u884c\u7684\u6240\u6709\u670d\u52a1\u8fdb\u884c\u901a\u4fe1\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u5f88\u5bb9\u6613\u7684\u5728\u5176\u4e2d\u8bbe\u7f6e\u5b89\u5168\u7b56\u7565\u3001\u8fdb\u884c\u76d1\u89c6\u4ee5\u53ca\u65e5\u5fd7\u8bb0\u5f55\u3002 P.S:\u5728Kubernetes\u4e2d\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u63a7\u5236\u5668\u5bf9\u8c61\uff0c\u6bd4\u5982DaemonSet\u3001StatefulSet\u548cJobs\u3002\u8fd8\u6709\u5f88\u591a\u5bf9\u8c61\u6bd4\u5982\uff0cSecrets\u3001ConfigMaps\u80fd\u591f\u7528\u4e8e\u5b58\u50a8\u5e94\u7528\u5bc6\u94a5\u548c\u914d\u7f6e\u6587\u4ef6\u3002 \u3010\u7ffb\u8bd1\u8ba1\u52122\u3011\u4e0b\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f1a\u7ee7\u7eed\u8ddf\u8fdbservice mesh\u3002\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e9b\u6ca1\u6709\u4ecb\u7ecd\u5230\u7684\u670d\u52a1\u3002 More [1]Union File System ^1 ^1 : \u201c\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2aLinux\uff0cFreeBSD\uff0cNetBSD\u7684\u6587\u4ef6\u7cfb\u7edf\u670d\u52a1\uff0c\u5b83\u5b9e\u73b0\u4e86\u9488\u5bf9\u4e0e\u5176\u4ed6\u6587\u4ef6\u7684\u8054\u5408\u6302\u8f7d\u3002\u5b83\u5141\u8bb8\u5355\u72ec\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff08\u5206\u652f\uff09\u88ab\u900f\u660e\u7684\u8986\u76d6\uff0c\u5f62\u6210\u4e00\u4e2a\u4e00\u81f4\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u88ab\u5408\u5e76\u7684\u5206\u652f\u4e2d\u5982\u679c\u5177\u6709\u76f8\u540c\u7684\u8def\u5f84\uff0c\u4f1a\u51fa\u73b0\u5728\u4e00\u4e2a\u5408\u5e76\u7684\u76ee\u5f55\u4e2d\uff0c\u5e76\u4f4d\u4e8e\u65b0\u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u7684\u76ee\u5f55\u4e2d\u201d \u2014WikiPedia [2]CRD ^2 ^2 : CustomResourceDefinition\uff0clink\uff1a \u4f7f\u7528CRD\u62d3\u5c55Kubernetes API [3]Pod\u591a\u5bb9\u5668\u8bbe\u8ba1\u6a21\u5f0f\uff0clink\uff1a Multi-Container Pod Design Patterns in Kubernetes","title":"\u901a\u8fc7\u6f2b\u753b-\u8ba4\u8bc6Kubernete"},{"location":"translate/tp1/#1know-kubernetes-pictorially","text":"Created: Feb 26, 2021 7:44 PM Year: 2019 link: https://medium.com/tarkalabs/know-kubernetes-pictorially-f6e6a0052dd0 writer: Sudhakar Rayavaram \u6807\u7b7e: kubernetes, \u6280\u672f \u4e0a\u4e00\u6b21\u8bf4\u5230\u7ffb\u8bd1\u8ba1\u5212\uff0c\u4f3c\u4e4e\u8fd8\u662f16\u5e74\u5728\u70b9\u77f3\u56e2\u961f\u7684\u65f6\u5019\u3002\u201cOpen Eyes Project\u201d\uff0c\u90a3\u65f6\u5019\u7f3a\u4e4f\u4e86\u63a8\u52a8\u529b\u3002\u8fd9\u6b21\u91cd\u65b0\u5f00\u59cb\uff0c\u7ffb\u8bd1\u4e00\u4e9b\u6280\u672f\u6587\u7ae0\u6216\u8005\uff0c\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002\u6682\u65f6\u4e0d\u7ed9\u4ed6\u4e00\u4e2a\u540d\u5b57\u5427\u3002 \u65b0\u7ffb\u8bd1\u8ba1\u5212 \u5b83\u6765\u4e86\u3002\u8fd9\u662f\u672c\u7cfb\u5217\u7684\u7b2c\u4e00\u7bc7\u7ffb\u8bd1\u6587\u7ae0\u3002 \u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u57282019\u5e74\u53d1\u8868\u5728medium\u4e0a\uff0c\u4f5c\u8005\u662fSudhakar Rayavaram\uff0c\u4e3b\u8981\u76ee\u7684\u901a\u8fc7\u56fe\u7247\u6f2b\u753b\u8bed\u8a00\u66f4\u597d\u7684\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3k8s\u7684\u57fa\u672c\u7ec4\u4ef6\u3002\u800c\u7ffb\u8bd1\u4ed6\u7684\u521d\u8877\u4e5f\u662f\u56e0\u4e3a\uff0c\u8bd1\u8005\u6b63\u5728\u5b66\u4e60k8s\u76f8\u5173\u7684\u5185\u5bb9\u3002","title":"\u3010\u7ffb\u8bd1\u8ba1\u52121\u3011Know Kubernetes \u2014 Pictorially"},{"location":"translate/tp1/#-kubernetes","text":"\u6700\u8fd1\uff0c\u6211\u5f00\u59cb\u4e86\u6211\u7684Kubernetes\u4e4b\u65c5\uff0c\u5e0c\u671b\u66f4\u597d\u7684\u53bb\u7406\u89e3\u5b83\u7684\u5185\u90e8\u539f\u7406\u3002\u6211\u505a\u4e86\u4e00\u4e2a\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\u7684\u6f14\u8bb2\uff0c\u8fd9\u91cc\u662f\u4ed6\u7684\u535a\u5ba2\u7248\u672c\u3002","title":"\u901a\u8fc7\u6f2b\u753b-\u8ba4\u8bc6Kubernetes"},{"location":"translate/tp1/#container","text":"\u5728\u6211\u4eec\u5f04\u6e05\u695a\u4ec0\u4e48\u662fKubernetes\u4e4b\u524d\uff0c\u6211\u4eec\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u5f04\u6e05\u695a\u5bb9\u5668\u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u4eec\u8fd9\u4e48\u53d7\u6b22\u8fce\u3002\u6bd5\u7adf\u5728\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u5bb9\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u8c08\u8bba\u5bb9\u5668\u7f16\u6392(containers orchestrator, Kubernetes)\u662f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\u3002 Container \u5bb9\u5668 \"Container\"\u5373\u662f\u4e00\u4e2a\u5bb9\u5668\uff0c\u2026\u2026\u7528\u6765\u88c5\u6240\u6709\u4f60\u653e\u8fdb\u53bb\u7684\u4e1c\u897f\u3002 \u8fd9\u4e9b\u4e1c\u897f\u5305\u62ec\u4e86\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u3001\u4f9d\u8d56\u5e93\u4ee5\u53ca\u4ee5\u53ca\u5b83\u6240\u4f9d\u8d56\u7684\u4e00\u4e9b\u73af\u5883\u76f4\u5230\u5185\u6838\u3002\u8fd9\u4e2d\u95f4\u7684\u5173\u952e\u5219\u662f\u9694\u79bb\u3002\u628a\u4f60\u6240\u6709\u7684\u4e1c\u897f\u548c\u5176\u4ed6\u7684\u73af\u5883\u3001\u7a0b\u5e8f\u7b49\u7b49\u9694\u79bb\u5f00\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u66f4\u597d\u7684\u63a7\u5236\u4ed6\u4eec\u3002 Workspace isolation(Process, Network) - \u5de5\u4f5c\u533a\u9694\u79bb\uff08\u8fdb\u7a0b\uff0c\u7f51\u7edc\uff09 Resource isolation(CPU, Memory) - \u8d44\u6e90\u9694\u79bb\uff08CPU\uff0c\u5185\u5b58\uff09 File System isolation(Union File System$ ^1$, Union FS) - \u6587\u4ef6\u7cfb\u7edf\u9694\u79bb\uff08\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\uff09 \u628a\u5bb9\u5668\u770b\u4f5c\u7cbe\u7b80\u7684\u865a\u62df\u673aVM\u3002\u5b83\u4eec\u7cbe\u7b80\uff0c\u80fd\u591f\u5feb\u901f\u542f\u52a8\uff0c\u800c\u4e14\u8fd9\u4e00\u5207\u90fd\u4e0d\u662f\u4ece\u96f6\u5efa\u7acb\u8d77\u6765\u7684\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u4f7f\u7528\u4e86linux\u4e2d\u5df2\u6709\u7684\u5de5\u5177\uff08\u5982cgroups, namespaces\uff09\u5efa\u7acb\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u62bd\u8c61\u5c42\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5bb9\u5668\u662f\u4ec0\u4e48\u4e86\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u4e3a\u4ec0\u4e48\u5b83\u4eec\u8fd9\u4e48\u53d7\u6b22\u8fce\u3002\u76f8\u6bd4\u4e8e\u4ec5\u4ec5\u53d1\u5e03\u4f60\u7684\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u6216\u8005\u4ee3\u7801\uff0c\u8fd9\u4f7f\u5f97\u53d1\u5e03\u80fd\u591f\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u7684\u6574\u4e2a\u73af\u5883\u6210\u4e3a\u4e86\u53ef\u80fd\uff0c\u56e0\u4e3a\u5bb9\u5668\u53ef\u4ee5\u88ab\u6784\u5efa\u4e3a\u975e\u5e38\u5c0f\u7684\u5355\u5143\u3002\u8fd9\u5b8c\u7f8e\u4fee\u590d\u4e86\u201cIt works in my machine\u201d\u7684\u95ee\u9898\u3002","title":"Container"},{"location":"translate/tp1/#kubernetes","text":"\u5bb9\u5668\u4e00\u5207\u90fd\u4e0d\u9519\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7684\u65e5\u5b50\u4e5f\u6bd4\u4ee5\u524d\u66f4\u597d\u8fc7\u4e86\u3002\u53ef\u662f\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u50cfKubernetes\u8fd9\u6837\u7684\u5bb9\u5668\u7f16\u6392\u6280\u672f\u5462\uff1f too-many-containers \u5f53\u4f60\u8fbe\u5230\u4e0a\u56fe\u8fd9\u79cd\u72b6\u6001\u65f6\uff0c\u4f60\u5c31\u9700\u8981\u4ed6\u4e86\uff0c\u56e0\u4e3a\u4f60\u6709\u592a\u591a\u7684\u5bb9\u5668\u9700\u8981\u7ba1\u7406\u3002 Q\uff1a\u6211\u7684\u524d\u7aef\u5bb9\u5668\u5728\u54ea\u91cc\uff0c\u6211\u8fd0\u884c\u4e86\u591a\u4e2a\u524d\u7aef\u5bb9\u5668\uff1f A\uff1a\u5f88\u96be\u56de\u7b54\u3002\u8bf7\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u3002 Q\uff1a\u5982\u4f55\u8ba9\u6211\u7684\u524d\u7aef\u4ee3\u7801\u5bb9\u5668\u548c\u540e\u7aef\u5bb9\u5668\u8fdb\u884c\u901a\u8baf\uff1f A\uff1a\u5f88\u96be\u56de\u7b54\u3002\u6216\u8005\u4f60\u53ef\u4ee5\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u3002 Q\uff1a\u5982\u4f55\u8fdb\u884c\u6eda\u52a8\u5347\u7ea7(rolling upgrade)\uff1f A\uff1a\u5f88\u96be\u56de\u7b54\u3002\u8bf7\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u3002","title":"\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528Kubernetes\uff1f"},{"location":"translate/tp1/#kubernetes_1","text":"\u6709\u5f88\u591a\u5bb9\u5668\u7f16\u6392\u5668\u53ef\u4ee5\u9009\u62e9\uff0c\u6bd4\u5982docker swarm\u3001Mesos\u3001Kubernets\u3002\u6211\u7684\u9009\u62e9\u662fKubernetes\uff0c\u56e0\u4e3aKubernetes\u50cf\u662f\u2026\u2026 like blocks \u2026\u2026\u4e50\u9ad8\u79ef\u6728\u4e00\u6837\u3002\u5b83\u4e0d\u4ec5\u6709\u8fd0\u884c\u5927\u89c4\u6a21\u5bb9\u5668\u7f16\u6392\u7684\u7ec4\u5efa\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u7075\u6d3b\u5730\u5bf9\u4e0d\u540c\u7ec4\u5efa\u8fdb\u884c\u5ba2\u5236\u5316\u7684\u66ff\u6362\u3002\u5f53\u4f60\u9700\u8981\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8c03\u5ea6\u5668\uff0c\u5f53\u7136\u53ea\u9700\u8981\u63d2\u5165\u5176\u4e2d\u5373\u53ef\u3002\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u8d44\u6e90\u7c7b\u578b\uff1f\u5199\u4e00\u4e2aCRD ^2 ^2 ( CustomResourceDefinition )\u5c31\u53ef\u4ee5\u3002\u6b64\u5916\uff0cKubernetes\u793e\u533a\u975e\u5e38\u7684\u6d3b\u8dc3\uff0c\u5404\u79cd\u5de5\u5177\u4e5f\u5728\u8fc5\u731b\u7684\u53d1\u5c55\u3002","title":"\u4e3a\u4ec0\u4e48\u6211\u66f4\u559c\u6b22Kubernetes\uff1f"},{"location":"translate/tp1/#kubernetes_2","text":"Architecture \u6bcf\u4e00\u4e2aKubernetes\u96c6\u7fa4\u90fd\u6709\u4e24\u79cd\u8282\u70b9\uff08\u673a\u5668\uff09\uff1a\u4e3b\u8282\u70b9\uff08Master\uff09\u548cWorker\u8282\u70b9\uff08Worker\uff09\u3002\u4e3b\u8282\u70b9\uff0c\u5de5\u4f5c\u8282\u70b9\u3002\u987e\u540d\u601d\u4e49\uff0c\u4e3b\u8282\u70b9\u662f\u63a7\u5236\u548c\u76d1\u63a7\u96c6\u7fa4\u5373\u5de5\u4f5c\u8282\u70b9\u4e0a\u8fd0\u884c\u7684\u8d1f\u8f7d\u60c5\u51b5\u548c\u5e94\u7528\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u96c6\u7fa4\u53ef\u4ee5\u53ea\u6709\u5355\u4e2a\u7684\u8282\u70b9\uff0c\u4f46\u662f\u6700\u597d\u8fd8\u662f\u6709\u4e09\u4e2a\u8282\u70b9\u6765\u786e\u4fdd\u9ad8\u53ef\u7528\u6027\uff08\u5373\u6240\u8bf4\u7684HA Clusters\uff0c\u9ad8\u53ef\u7528\u96c6\u7fa4\uff09\u3002 \u7136\u540e\u6211\u4e48\u4ed4\u7ec6\u770b\u770b**\u4e3b\u8282\u70b9\uff08Master\uff09**\u4ed6\u662f\u600e\u4e48\u6784\u6210\u7684\uff1a master node etcd \uff1a\u7528\u4e8e\u5b58\u50a8Kubernetes\u5bf9\u8c61\u7684\u6240\u6709\u6570\u636e\u3001\u5b83\u4eec\u7684\u72b6\u6001\u3001\u8bbf\u95ee\u4fe1\u606f\u4ee5\u53ca\u5176\u4ed6\u8282\u70b9\u7684\u914d\u7f6e\u4fe1\u606f\u3002 **API Server\uff1a**RESTFul API\u670d\u52a1\u5668\u66b4\u9732\u4e86End Points\u4ee5\u4fbf\u4e8e\u63a7\u5236\u96c6\u7fa4\u3002\u51e0\u4e4e\u4e3b\u8282\u70b9\u5de5\u4f5c\u8282\u70b9\u4e0a\u7684\u6240\u6709\u7ec4\u5efa\u90fd\u4f1a\u4e8e\u8be5\u670d\u52a1\u5668\u901a\u8baf\u4ee5\u6267\u884c\u5b83\u4eec\u5404\u81ea\u7684\u529f\u80fd\u3002 Scheduler \uff1a\u8c03\u5ea6\u5668\uff0c\u51b3\u5b9a\u4e86\u5e94\u7528\u9700\u8981\u5728\u54ea\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u3002 control manager \uff1a \u63a7\u5236\u5668\uff0c\u662f\u4e00\u4e2a\u63a7\u5236\u5faa\u73af\uff0c\u5b83\u76d1\u89c6\u96c6\u7fa4\u7684\u72b6\u6001\uff08\u901a\u8fc7\u4eceAPI Server\u8c03\u53d6\u7684\u6570\u636e\uff09\uff0c\u5e76\u91c7\u53d6\u64cd\u4f5c\u4fdd\u8bc1\u8fbe\u5230\u9884\u671f\u7684\u72b6\u6001\u3002 \u5de5\u4f5c\u8282\u70b9\uff1a worker node **kubelet\uff1a**\u662f\u5de5\u4f5c\u8282\u70b9\u7684\u5fc3\u810f\u3002\u5b83\u4e0e\u4e3b\u8282\u70b9\u7684API\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u5e76\u4e3a\u5176\u8282\u8fd0\u884c\u5bb9\u5668\u8c03\u5ea6\u5668\u3002 **kube Proxy\uff1a**\u4f7f\u7528IP\u8868/IPVS\u6765\u5904\u7406pods\u7684\u7f51\u7edc\u9700\u6c42\u3002 **Pod\uff1a**Kubernetes\u4e2d\u7684\u6267\u884c\u8005\uff0c\u5b83\u8fd0\u884c\u4e86\u4f60\u7684\u6240\u6709\u5bb9\u5668\u3002\u6ca1\u6709POD\u7684\u7ed3\u6784\uff0c\u4f60\u4e0d\u80fd\u5728Kubernetes\u4e2d\u8fd0\u884c\u5bb9\u5668\u3002Pod\u589e\u52a0\u4e86\u8ba9Kuberenetes\u5728\u5bb9\u5668\u4e4b\u95f4\u5efa\u7acb\u7f51\u7edc\u7684\u65b9\u5f0f\u81f3\u5173\u91cd\u8981\u7684\u529f\u80fd Pod \u4e00\u4e2aPod\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5668\uff0c\u5e76\u4e14\u6240\u6709\u8fd0\u884c\u5728\u8fd9\u4e9b\u5bb9\u5668\u4e2d\u7684\u670d\u52a1\u5668\u80fd\u591f\u628a\u5f7c\u6b64\u770b\u4f5c\u672c\u5730\u4e3b\u673a\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u975e\u5e38\u65b9\u4fbf\u7684\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u670d\u52a1\u5206\u5272\u5230\u5355\u4e2a\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u88c5\u8f7d\u5230\u4e00\u4e2aPod\u4e2d\u3002Pod\u7684\u6a21\u5f0f\u4e5f\u6709\u591a\u79cd\uff0c\u6bd4\u5982sidecar\u3001proxy\u4ee5\u53caambassador\u4ee5\u65b9\u4fbf\u6ee1\u8db3\u4e0d\u540c\u7684\u9700\u6c42\u3002\u53ef\u4ee5\u67e5\u770b\u8fd9\u7bc7\u6587\u7ae0\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8ePod\u6a21\u5f0f\u7684\u4fe1\u606f\uff1a Multi-Container Pod Design Patterns in Kubernetes ^3 ^3 \u3002 Pod\u7f51\u7edc\u63a5\u53e3\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u80fd\u591f\u5c06\u540c\u4e00\u8282\u70b9\u4e2d\u7684\u5176\u4ed6pod\u6216\u8005\u5176\u4ed6\u5de5\u4f5c\u8282\u70b9\u4e2d\u7684Pod\u8054\u7f51\u3002 pod network \u6b64\u5916\uff0c\u6bcf\u4e2apod\u90fd\u4f1a\u88ab\u5206\u914d\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u80fd\u591f\u88abkube-proxy\u7528\u4e8e\u8def\u7531\u901a\u4fe1\u3002\u8fd9\u4e9bIP\u5730\u5740\u53ea\u80fd\u591f\u5728\u96c6\u7fa4\u4e2d\u53ef\u89c1\u3002 pod\u4e2d\u6302\u5728\u7684\u6570\u636e\u5377\uff08volume\uff09\u4e5f\u662f\u5bf9\u6240\u6709\u5bb9\u5668\u53ef\u89c1\u7684\uff0c\u6709\u65f6\u8fd9\u4e9b\u6570\u636e\u5377\u53ef\u4ee5\u88ab\u7528\u4e8e\u4e0d\u540cpod\u4e4b\u95f4\u7684\u5f02\u6b65\u901a\u4fe1\u3002\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u4f60\u7684\u5e94\u7528\u662f\u4e00\u4e2a\u56fe\u7247\u4e0a\u4f20\u5e94\u7528\uff08\u53ef\u80fd\u50cfInstagram\u4e00\u6837\uff09\uff0c\u5b83\u80fd\u591f\u4fdd\u5b58\u8fd9\u4e9b\u6587\u4ef6\u5728\u6570\u636e\u5377\u4e2d\uff0c\u540c\u4e00\u4e2apod\u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u80fd\u591f\u76d1\u89c6\u6570\u636e\u5377\u4e2d\u7684\u65b0\u6587\u4ef6\uff0c\u5e76\u5c06\u4ed6\u4eec\u5904\u7406\u6210\u591a\u79cd\u5927\u5c0f\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u5e76\u4e0a\u4f20\u5230\u4e91\u5b58\u50a8\u4e2d\u3002","title":"Kubernetes\u7684\u67b6\u6784"},{"location":"translate/tp1/#controllers","text":"\u5728Kubernetes\u4e2d\uff0c\u6709\u5f88\u591a\u79cd\u7684\u63a7\u5236\u5668\uff0c\u6bd4\u5982ReplicaSet\u3001Replication Controllers\u3001Deployments\u3001statefulset\u548cService\u3002\u8fd9\u4e9b\u5bf9\u8c61\u80fd\u591f\u4ee5\u8fd9\u6837\u6216\u90a3\u6837\u7684\u65b9\u5f0f\u63a7\u5236Pod\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5176\u4e2d\u76f8\u5bf9\u91cd\u8981\u7684\u4e00\u4e9b\u3002","title":"Controllers \u63a7\u5236\u5668"},{"location":"translate/tp1/#replicaset","text":"ReplicaSet\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u590d\u5236pod \u8fd9\u4e2a\u63a7\u5236\u5668\u7684\u4e3b\u8981\u804c\u8d23\u662f\u7ed9\u7279\u5b9a\u7684pod\u521b\u5efa\u526f\u672c\u3002\u5982\u679c\u4e00\u4e2apod\u56e0\u4e3a\u67d0\u79cd\u613f\u610f\u6b7b\u4ea1\u4e86\uff0c\u63a7\u5236\u5668\u4f1a\u63a5\u6536\u5230\u901a\u77e5\uff0c\u5e76\u7acb\u5373\u5f00\u59cb\u884c\u52a8\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684pod\u3002","title":"ReplicaSet"},{"location":"translate/tp1/#deployment","text":"Deployment\u901a\u8fc7\u63a7\u5236ReplicaSet Deployment\u662f\u4e00\u4e2a\u9ad8\u9636\u5bf9\u8c61\uff0c\u5b83\u4f7f\u7528ReplicaSet\u53bb\u7ba1\u7406\u526f\u672c\u3002\u5b83\u80fd\u591f\u901a\u8fc7\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684ReplicaSet\u6765\uff0c\u9010\u6e10\u7f29\u5c0f\uff08\u6700\u7ec8\u5220\u9664\uff09\u73b0\u6709\u7684ReplicaSet\u6765\u5b9e\u73b0\u6eda\u52a8\u5347\u7ea7\u3002","title":"Deployment"},{"location":"translate/tp1/#service","text":"Service\u88ab\u8868\u793a\u4e3a\u65e0\u4eba\u673a\u5411\u76f8\u5e94\u7684Pod\u4e2d\u8fd0\u9001\u6570\u636e\u5305 Service\u7684\u4e3b\u8981\u6307\u8d23\u662f\u4f5c\u4e3a\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u6570\u636e\u5305\u5206\u53d1\u7ed9\u76f8\u5e94\u7684\u8282\u70b9\u3002\u5b83\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u63a7\u5236\u5668\u7ed3\u6784\uff0c\u7528\u4e8e\u5206\u7ec4\u76f8\u4f3c\u7684pod\uff08\u901a\u5e38\u7531pod\u6807\u7b7e\u8fdb\u884c\u533a\u5206\uff09\u5728\u5de5\u4f5c\u8282\u70b9\u4e4b\u95f4\u3002 \u5047\u8bbe\u4f60\u7684\u524d\u7aef\u5e94\u7528\u60f3\u4e0e\u540e\u7aef\u5e94\u7528\u673a\u68b0\u80fd\u901a\u4fe1\uff0c\u53ef\u80fd\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5b9e\u4f8b\u3002\u4e0e\u5176\u62c5\u5fc3\u5bf9\u6bcf\u4e00\u4e2a\u540e\u7aefpod\u8fdb\u884c\u7f16\u7801\uff0c\u4e0d\u5982\u76f4\u63a5\u5c06\u6570\u636e\u5305\u53d1\u9001\u7ed9\u540e\u7aefService\uff0c\u8ba9\u5b83\u6765\u51b3\u5b9a\u968f\u540e\u5982\u4f55\u53bb\u5e73\u8861\u8d1f\u8f7d\u5e76\u8fdb\u884c\u8f6c\u53d1\u3002 \u6ce8\u610f\uff0cService\u66f4\u50cf\u662f\u4e00\u4e2a\u865a\u62df\u5b9e\u4f53\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5305\u90fd\u662f\u901a\u8fc7IP\u8868/IPVS/CNI\u63d2\u4ef6\u8fdb\u884c\u5904\u7406\u7684\u3002\u5b83\u53ea\u662f\u8ba9\u6211\u4eec\u66f4\u5bb9\u6613\u628a\u5b83\u770b\u4f5c\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u5b9e\u4f53\uff0c\u4f7f\u5f97\u6211\u4eec\u66f4\u5bb9\u6613\u7684\u53bb\u7406\u89e3\u4ed6\u5728Kubernetes\u751f\u6001\u4e2d\u7684\u89d2\u8272\u3002","title":"Service"},{"location":"translate/tp1/#ingress","text":"Ingress\u6d6e\u52a8\u7684\u5e73\u53f0\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u901a\u8fc7\u8be5\u5e73\u53f0\u6d41\u5165\u96c6\u7fa4\u4e2d Ingress\u63a7\u5236\u5668\u662f\u4e00\u4e2a\u4e0e\u5916\u90e8\u4e16\u754c\u8fdb\u884c\u8054\u7cfb\u7684\u5355\u70b9\uff0c\u7528\u4e8e\u4e0e\u96c6\u7fa4\u5185\u8fd0\u884c\u7684\u6240\u6709\u670d\u52a1\u8fdb\u884c\u901a\u4fe1\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u5f88\u5bb9\u6613\u7684\u5728\u5176\u4e2d\u8bbe\u7f6e\u5b89\u5168\u7b56\u7565\u3001\u8fdb\u884c\u76d1\u89c6\u4ee5\u53ca\u65e5\u5fd7\u8bb0\u5f55\u3002 P.S:\u5728Kubernetes\u4e2d\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u63a7\u5236\u5668\u5bf9\u8c61\uff0c\u6bd4\u5982DaemonSet\u3001StatefulSet\u548cJobs\u3002\u8fd8\u6709\u5f88\u591a\u5bf9\u8c61\u6bd4\u5982\uff0cSecrets\u3001ConfigMaps\u80fd\u591f\u7528\u4e8e\u5b58\u50a8\u5e94\u7528\u5bc6\u94a5\u548c\u914d\u7f6e\u6587\u4ef6\u3002 \u3010\u7ffb\u8bd1\u8ba1\u52122\u3011\u4e0b\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f1a\u7ee7\u7eed\u8ddf\u8fdbservice mesh\u3002\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e9b\u6ca1\u6709\u4ecb\u7ecd\u5230\u7684\u670d\u52a1\u3002","title":"Ingress"},{"location":"translate/tp1/#more","text":"[1]Union File System ^1 ^1 : \u201c\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2aLinux\uff0cFreeBSD\uff0cNetBSD\u7684\u6587\u4ef6\u7cfb\u7edf\u670d\u52a1\uff0c\u5b83\u5b9e\u73b0\u4e86\u9488\u5bf9\u4e0e\u5176\u4ed6\u6587\u4ef6\u7684\u8054\u5408\u6302\u8f7d\u3002\u5b83\u5141\u8bb8\u5355\u72ec\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff08\u5206\u652f\uff09\u88ab\u900f\u660e\u7684\u8986\u76d6\uff0c\u5f62\u6210\u4e00\u4e2a\u4e00\u81f4\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u88ab\u5408\u5e76\u7684\u5206\u652f\u4e2d\u5982\u679c\u5177\u6709\u76f8\u540c\u7684\u8def\u5f84\uff0c\u4f1a\u51fa\u73b0\u5728\u4e00\u4e2a\u5408\u5e76\u7684\u76ee\u5f55\u4e2d\uff0c\u5e76\u4f4d\u4e8e\u65b0\u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u7684\u76ee\u5f55\u4e2d\u201d \u2014WikiPedia [2]CRD ^2 ^2 : CustomResourceDefinition\uff0clink\uff1a \u4f7f\u7528CRD\u62d3\u5c55Kubernetes API [3]Pod\u591a\u5bb9\u5668\u8bbe\u8ba1\u6a21\u5f0f\uff0clink\uff1a Multi-Container Pod Design Patterns in Kubernetes","title":"More"},{"location":"translate/tp2/","text":"\u3010\u7ffb\u8bd1\u8ba1\u52124\u3011How does Shazam work? Music Recognition Algorithms, Fingerprinting, and Processing Created: Mar 15, 2021 2:22 PM link: https://www.toptal.com/algorithms/shazam-it-music-processing-fingerprinting-and-recognition writer: JOVAN JOVANOVIC \u6807\u7b7e: \u6280\u672f, \u97f3\u9891\u5904\u7406 Jovan is an entrepreneur and engineer with a strong mathematical background and an extensive skillset for problem-solving. \u3010About Project\u3011\u4e0a\u4e00\u6b21\u8bf4\u5230\u7ffb\u8bd1\u8ba1\u5212\uff0c\u4f3c\u4e4e\u8fd8\u662f16\u5e74\u5728\u70b9\u77f3\u56e2\u961f\u7684\u65f6\u5019\u3002\u201cOpen Eyes Project\u201d\uff0c\u90a3\u65f6\u5019\u7f3a\u4e4f\u4e86\u63a8\u52a8\u529b\u3002\u8fd9\u6b21\u91cd\u65b0\u5f00\u59cb\uff0c\u7ffb\u8bd1\u4e00\u4e9b\u6280\u672f\u6587\u7ae0\u6216\u8005\uff0c\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002\u6682\u65f6\u4e0d\u7ed9\u4ed6\u4e00\u4e2a\u540d\u5b57\u5427\u3002 \u65b0\u7ffb\u8bd1\u8ba1\u5212 \u5b83\u6765\u4e86\u3002\u8fd9\u662f\u672c\u7cfb\u5217\u7684\u7b2c\u4e8c\u7bc7\u7ffb\u8bd1\u6587\u7ae0\u3002 \u4e0a\u5468\uff0c\u62ff\u5230\u5b9e\u4e60\u516c\u53f8\u7684\u4e00\u4e2a\u9700\u6c42\uff0c\u5bf9\u97f3\u9891\u8fdb\u884c\u6a21\u5f0f\u8bc6\u522b\uff0c\u5927\u81f4\u80fd\u591f\u533a\u5206\u8fd9\u6bb5\u97f3\u9891\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\uff0c\u5728\u5bfb\u6c42\u89e3\u51b3\u65b9\u6848\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u7bc7\u6587\u7ae0\u3002\u8bb2\u8ff0\u4e86Shazam\uff08\u542c\u6b4c\u8bc6\u66f2\u8f6f\u4ef6\uff09\u5b83\u662f\u600e\u4e48\u505a\u5230\u7684\u3002 \u4ee5\u4e0b\u662f\u672c\u6587\u7684\u6b63\u6587\u5185\u5bb9\uff1a Shazam\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\u97f3\u4e50\u8bc6\u522b\u7b97\u6cd5\uff0c\u58f0\u7eb9\u4ee5\u53ca\u5904\u7406\u8fc7\u7a0b Introduction \u4f60\u5728\u4ff1\u4e50\u90e8\u6216\u8005\u9910\u9986\u91cc\u542c\u5230\u4e86\u4e00\u9996\u719f\u6089\u7684\u6b4c\u3002\u8fd9\u9996\u6b4c\u771f\u8bda\u7684\u6253\u52a8\u4e86\u4f60\uff0c\u5c3d\u7ba1\u4f60\u5df2\u7ecf\u542c\u8fc7\u4e0a\u5343\u904d\uff0c\u4f60\u60f3\u660e\u5929\u518d\u6b21\u53bb\u542c\u8fd9\u9996\u6b4c\uff0c\u4f46\u662f\u4f60\u56de\u5fc6\u4e0d\u51fa\u6765\u5b83\u7684\u540d\u5b57\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5728\u8fd9\u4e2a\u795e\u5947\u7684\u4e16\u754c\u91cc\uff0c\u4f60\u6709\u4e00\u90e8\u5b89\u88c5\u4e86\u542c\u6b4c\u8bc6\u66f2\u7684\u624b\u673a\uff0c\u4f60\u5f97\u6551\u4e86\u3002\u4f60\u53ef\u4ee5\u653e\u8f7b\u677e\u4e86\uff0c\u56e0\u4e3a\u8f6f\u4ef6\u4f1a\u544a\u8bc9\u4f60\u8fd9\u9996\u6b4c\u7684\u540d\u5b57\uff0c\u4f60\u77e5\u9053\u4f60\u53c8\u80fd\u542c\u5b83\u4e86\uff0c\u53ea\u5230\u5b83\u6210\u4e3a\u4f60\u7684\u4e00\u90e8\u5206\u2026\u2026\u6216\u8005\u4f60\u538c\u5026\u4e86\u5b83\u3002 \u79fb\u52a8\u6280\u672f\uff0c\u548c\u97f3\u9891\u4fe1\u53f7\u5904\u7406\u6280\u672f\u7684\u5de8\u5927\u53d1\u5c55\uff0c\u8d4b\u4e88\u4e86\u6211\u4eec\u7684\u7b97\u6cd5\u5f00\u53d1\u4eba\u5458\u53bb\u521b\u9020\u97f3\u4e50\u8bc6\u522b\u8f6f\u4ef6\u7684\u80fd\u529b\u3002\u5176\u4e2d\u6700\u6709\u540d\u7684\u97f3\u4e50\u8bc6\u522b\u8f6f\u4ef6\u4e4b\u4e00\uff0cShazam\u3002\u5982\u679c\u4f60\u6355\u6349\u5230\u4e00\u9996\u6b4c\u7684\u4e8c\u5341\u79d2\uff0c\u65e0\u8bba\u662f\u524d\u594f(intro)\uff0c\u4e3b\u6b4c(verse)\u8fd8\u662f\u526f\u6b4c(chorus)\uff0c\u5b83\u90fd\u4f1a\u4e3a\u5f55\u97f3\u6837\u672c\u521b\u9020\u4e00\u4e2a\u58f0\u7eb9\uff08Voice Fingerprint\uff0cvoiceprint\uff09\uff0c\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u7528\u97f3\u4e50\u8bc6\u522b\u7b97\u6cd5\u544a\u8bc9\u4f60\u6b63\u5728\u542c\u54ea\u4e00\u9996\u6b4c\u3002 Music recognition software:' Shazam' \u4f46\u662fShazam\u662f\u600e\u6837\u5de5\u4f5c\u7684\u5462\uff1f2003\u5e74\uff0cAvery Li-Chung Wang\u5411\u4e16\u754c\u5c55\u793a\u4e86Shazam\u7684\u7b97\u6cd5\uff08\u4f5c\u4e3a\u8bba\u6587\u88ab\u53d1\u8868\uff09\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecdShazam\u7684\u97f3\u4e50\u8bc6\u522b\u7b97\u6cd5\u7684\u57fa\u672c\u539f\u7406\u3002 Analog to Digital - Sampling a Signal \u6a21\u62df\u4fe1\u53f7\u5230\u6570\u5b57\u4fe1\u53f7 - \u4fe1\u53f7\u91c7\u6837 \u58f0\u97f3\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\u5b83\u662f\u67d0\u79cd\u795e\u79d8\u7684\u7269\u8d28\uff0c\u6211\u4eec\u4e0d\u80fd\u89e6\u6478\uff0c\u4f46\u662f\u53ef\u4ee5\u98de\u5230\u6211\u4eec\u7684\u8033\u6735\u91cc\uff0c\u8ba9\u6211\u4eec\u542c\u5230\u4e00\u4e9b\u4e1c\u897f\uff1f \u5f53\u7136\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u5728\u73b0\u5b9e\u4e2d\uff0c\u58f0\u97f3\u662f\u4e00\u79cd\u9707\u52a8\uff0c\u5b83\u4ee5\u538b\u529b\u4e0e\u4f4d\u79fb\u7684\u673a\u68b0\u6ce2\u7684\u5f62\u5f0f\uff0c\u901a\u8fc7\u7a7a\u6c14\u6216\u8005\u6c34\u8fd9\u6837\u7684\u4ecb\u8d28\u4f20\u64ad\u3002\u5f53\u8fd9\u79cd\u9707\u52a8\u4f20\u5230\u6211\u4eec\u7684\u8033\u6735\uff0c\u7279\u522b\u662f\u9f13\u819c\u7684\u65f6\u5019\uff0c\u8033\u9aa8\u5c06\u9707\u52a8\u8fdb\u4e00\u6b65\u7684\u4f20\u5230\u6211\u4eec\u7684\u5185\u8033\u6df1\u5904\u7684\u6bdb\u7ec6\u80de\uff08Hair Cell\uff09\u3002\u6700\u540e\u8fd9\u4e9b\u6bdb\u7ec6\u80de\u4ea7\u751f\u7535\u8109\u51b2\uff0c\u901a\u8fc7\u542c\u89c9\u795e\u7ecf\u4f20\u5165\u6211\u4eec\u7684\u5927\u8111\u3002 \u5f55\u97f3\u8bbe\u5907\u76f8\u5f53\u63a5\u8fd1\u7684\u8fd8\u539f\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5229\u7528\u58f0\u6ce2\u7684\u538b\u529b\u4ea7\u751f\u7684\u9707\u52a8\u8f6c\u6362\u6210\u7535\u4fe1\u53f7\u3002\u7a7a\u6c14\u4e2d\u7684\u5b9e\u9645\u58f0\u6ce2\u662f\u4e00\u79cd\u8fde\u7eed\u7684\u538b\u529b\u4fe1\u53f7\u3002\u9ea6\u514b\u98ce\u662f\u8fd9\u79cd\u538b\u529b\u4fe1\u53f7\uff08\u58f0\u6ce2\uff09\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u7535\u5b50\u5143\u4ef6\uff0c\u5c06\u538b\u529b\u4fe1\u53f7\u8f6c\u6362\u6210\u4e86\u6a21\u62df\u7535\u538b\u4fe1\u53f7\u2014\u2014\u540c\u6837\u4e5f\u662f\u8fde\u7eed\uff08continuous\uff09\u7684\u3002\u8fd9\u79cd\u8fde\u7eed\u7684\u4fe1\u53f7\u5728\u6570\u7ec4\u4e16\u754c\u91cc\u6ca1\u6709\u591a\u5927\u7684\u7528\u5904\uff0c\u6240\u4ee5\u5728\u5904\u7406\u5b83\u4e4b\u524d\uff0c\u5fc5\u987b\u5c06\u5b83\u8f6c\u6362\u6210\u4e00\u4e2a\u79bb\u6563\uff08discrete\uff09\u7684\u7535\u4fe1\u53f7\u3002\u8fd9\u662f\u901a\u8fc7\u6355\u83b7\u4fe1\u53f7\u632f\u5e45\u7684\u6570\u5b57\u503c\u6765\u5b9e\u73b0\u7684\u3002 \u8fd9\u79cd\u8f6c\u6362\u6d89\u53ca\u5230\u4e86\u8f93\u5165\u7684\u91cf\u5316\uff0c\u5fc5\u7136\u4f1a\u5f15\u8d77\u5c11\u91cf\u7684\u8bef\u5dee\u3002\u56e0\u6b64\uff0c\u4e0d\u540c\u4e8e\u4e00\u6b21\u6027\u7684\u8f6c\u6362\uff0c\u6a21\u62df\u6570\u5b57\u8f6c\u6362\u5668\u9700\u8981\u5bf9\u5f88\u5c0f\u7684\u7247\u6bb5\u6267\u884c\u591a\u6b21\u8f6c\u6362\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u91c7\u6837\u3002 Analog to digital signal \u5948\u594e\u65af\u7279-\u9999\u519c\u5b9a\u7406 ^1 ^1 \u544a\u8bc9\u6211\u4eec\uff0c\u8981\u6355\u83b7\u8fde\u7eed\u4fe1\u53f7\u4e2d\u7684\u67d0\u4e2a\u9891\u7387\uff0c\u5fc5\u987b\u4f7f\u7528\u7279\u5b9a\u7684\u91c7\u6837\u7387\u3002\u7279\u522b\u662f\u4e3a\u4e86\u6355\u83b7\u6240\u6709\u4eba\u7c7b\u80fd\u591f\u5728\u97f3\u9891\u4fe1\u53f7\u4e2d\u542c\u5230\u7684\u6240\u6709\u9891\u7387\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u4eba\u7c7b\u542c\u89c9\u8303\u56f4\u5185\u7684\u4e24\u500d\u9891\u7387\u5bf9\u4fe1\u53f7\u8fdb\u884c\u91c7\u6837\u3002\u4eba\u7c7b\u7684\u8033\u6735\u80fd\u591f\u542c\u5230\u5927\u7ea6\u4ece20Hz\u523020000Hz\u4e4b\u95f4\u7684\u9891\u7387\u3002\u56e0\u6b64\uff0c\u97f3\u9891\u901a\u5e38\u4ee544,100Hz\u7684\u91c7\u6837\u7387\u8fdb\u884c\u8bb0\u5f55\u3002\u8fd9\u662f\u5149\u76d8\u7684\u91c7\u6837\u7387\uff0c\u4e5f\u662fMPEG-1\u97f3\u9891\uff08VCD\u3001MP3\uff09\u6700\u5e38\u7528\u7684\u91c7\u6837\u7387\u3002Sony\u516c\u53f8\u6700\u65e9\u91c7\u7528\u4e86\u8fd9\u4e2a\u9891\u7387\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u4ee5\u6bcf\u79d225\u5e27\uff08PAL\uff09\u6216\u6bcf\u79d230\u5e27\u7684\u901f\u5ea6\uff08\u4f7f\u7528NTSC\u5355\u8272\u5f55\u50cf\u673a\uff09\u5f55\u5236\u5728\u7ecf\u8fc7\u4fee\u6539\u7684\u89c6\u9891\u8bbe\u5907\u4e2d\uff0c\u8986\u76d620,000Hz\u7684\u5e26\u5bbd\uff0c\u5728\u5f53\u65f6\u88ab\u8ba4\u4e3a\u662f\u53ef\u4ee5\u4e0e\u4e13\u4e1a\u7684\u5f55\u97f3\u8bbe\u5907\u76f8\u5ab2\u7f8e\u3002\u6240\u4ee5\u5f53\u4f60\u9009\u62e9\u91c7\u6837\u7387\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u80fd\u4f1a\u8d8b\u5411\u4e8e\u9009\u62e944,100Hz\u3002 Recording - Capturing the Sound \u5f55\u97f3-\u6355\u83b7\u58f0\u97f3 \u8bb0\u5f55\u5df2\u7ecf\u88ab\u91c7\u6837\u7684\u97f3\u9891\u4fe1\u53f7\u5f88\u5bb9\u6613\u3002\u56e0\u4e3a\u73b0\u4ee3\u58f0\u5361\u5df2\u7ecf\u6709\u4e86\u6a21\u6570\u8f6c\u6362\u5668\uff0c\u53ea\u9700\u8981\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u627e\u5230\u4e00\u4e2a\u5408\u9002\u5e93\uff0c\u8bbe\u7f6e\u91c7\u6837\u7387\u3001\u901a\u9053\u6570\u91cf\uff08\u901a\u5e38\u662f\u5355\u58f0\u9053\u6216\u7acb\u4f53\u58f0\uff09\uff0c\u91c7\u6837\u5927\u5c0f\uff08\u6bd4\u598216\u4f4d\u91c7\u6837\uff09\u3002\u7136\u540e\u50cf\u6253\u5f00\u4efb\u4f55\u8f93\u5165\u6d41\u4e00\u6837\u4ece\u58f0\u5361\u8bfb\u5165\u884c\u5199\u5165\u5230\u5b57\u8282\u6570\u7ec4\u4e2d\u3002\u4e0b\u9762\u6709\u4e00\u6bb5Java\u7684\u793a\u4f8b\u4ee3\u7801\uff1a private AudioFormat getFormat () { float sampleRate = 44100 ; int sampleSizeInBits = 16 ; int channels = 1 ; boolean signed = true ; //\u8868\u793a\u6570\u636e\u662f\u5426\u662f\u7b7e\u540d\u7684 boolean bigEndian = true ; //\u8868\u793a\u6570\u636e\u662f\u5426\u662f\u6309\u7167\u5927\u5b57\u8282\u5e8f\u6216\u8005\u5c0f\u5b57\u8282\u5e8f\u5b58\u50a8\u7684 return new AudioFormat ( sampleRate , sampleSizeIntBits , channels , signed , bigEndian ); } final AudioFormat format = getFormat (); //\u6309\u7167\u8bbe\u5b9a\u586b\u5145AudioFormat DataLine . Info info = new DataLine . Info ( TargetDataLine . class , format ); final TargetDataLine line = ( TargetDataLine ) AudioSystem . getLine ( info ); line . open ( format ); line . start ; \u53ea\u9700\u8981\u4eceTargetDateLined\u4e2d\u8bfb\u53d6\u6570\u636e\u5373\u53ef\u3002\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0crunning\u7684\u6807\u5fd7\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u88ab\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u505c\u6b62-\u4f8b\u5982\uff0c\u6211\u4eec\u6709\u5e26\u6709GUI\u7684STOP\u6309\u94ae\u3002\uff09 OutputStream out = new ByteArrayOutputStream (); running = true ; try { while ( running ) { int count = line . read ( buffer , 0 , buffer . length ); if ( count > 0 ) { out . write ( buffer , 0 , count ); } } out . close (); } catch ( IOException e ) { System . err . println ( \"I/O problems: \" + e ); System . exit ( - 1 ); } *\u4e00\u822c\u60c5\u51b5\u4e0b\u53ef\u4ee5\u6839\u636eRead\u7684\u5b57\u8282\u957f\u5ea6\u6765\u5224\u65ad\u662f\u5426\u5199\u5165\u5230buffer\u4e2d\u3002 Time-Domain and Frequency-Domain \u65f6\u57df\u548c\u9891\u57df \u8fd9\u4e2a\u5b57\u8282\u6570\u7ec4\u4e2d\u6709\u8bb0\u5f55\u5728\u65f6\u57df\u4e2d\u7684\u4fe1\u53f7\u3002\u65f6\u57df\uff08Time-Domain\uff09\u4fe1\u53f7\u8868\u793a\u7684\u662f\u4fe1\u53f7\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5e45\u5ea6\u3002 \u5728\u5341\u4e5d\u4e16\u7eaa\u65e9\u671f\uff0cJean-Baptiste Joseph Fourier\u53d1\u73b0\uff0c\u4efb\u4f55\u65f6\u57df\u4e2d\u7684\u4fe1\u53f7\u90fd\u7b49\u4ef7\u4e8e\u4e00\u4e9b\u7b80\u5355\u7684\u6b63\u5f26\u4fe1\u53f7\uff08\u53ef\u80fd\u662f\u65e0\u9650\u4e2a\uff09\u7684\u548c\uff0c\u7ed9\u5b9a\u6bcf\u4e2a\u5206\u91cf\u7684\u6b63\u5f26\u6ce2\u90fd\u6709\u7279\u5b9a\u7684\u9891\u7387\u3001\u632f\u5e45\u548c\u76f8\u4f4d\u3002\u5408\u5728\u4e00\u8d77\u5f62\u6210\u7684\u539f\u59cb\u65f6\u57df\u4fe1\u53f7\u7684\u6b63\u5f26\u6ce2\u5e8f\u5217\u88ab\u79f0\u4e3a\u4e86\u5085\u91cc\u53f6\u7ea7\u6570\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u8981\u7ed9\u51fa\u7ec4\u6210\u4fe1\u53f7\u7684\u6b63\u5f26\u6ce2\u6240\u5bf9\u5e94\u7684\u9891\u7387\u3001\u76f8\u4f4d\u548c\u632f\u5e45\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u65f6\u57df\u7684\u4fe1\u53f7\u3002\u8fd9\u79cd\u4fe1\u53f7\u7684\u8868\u793a\u65b9\u6cd5\u88ab\u79f0\u4e3a\u4e86\u9891\u57df\uff08Frequency-Domain\uff09\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u9891\u57df\u4f5c\u4e3a\u65f6\u57df\u4fe1\u53f7\u7684\u6307\u7eb9\u6216\u8005\u7b7e\u540d\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u63d0\u4f9b\u4e86\u52a8\u6001\u4fe1\u53f7\u7684\u9759\u6001\u8868\u793a\u3002 Time Domain & Frequency Domain \u4e0b\u9762\u7684GIF\u52a8\u753b\u6f14\u793a\u4e861Hz\u65b9\u6ce2\u7684\u5085\u91cc\u53f6\u7ea7\u6570\uff0c\u4ee5\u53ca\u5982\u4f55\u4ece\u6b63\u5f26\u5206\u91cf\u4e2d\u4ea7\u751f\uff08\u8fd1\u4f3c\uff09\u65b9\u6ce2\u3002\u4fe1\u53f7\u663e\u793a\u5728\u4e0a\u9762\u7684\u65f6\u57df\u4e2d\uff0c\u9891\u57df\u663e\u793a\u5728\u4e0b\u9762\u7684\u56fe\u50cf\u4e2d\u3002 1Hz Square Wave \u5728\u9891\u57df\u4e2d\u5206\u6790\u4fe1\u53f7\u53ef\u4ee5\u6781\u5927\u7684\u7b80\u5316\u8bb8\u591a\u4e8b\u60c5\u3002\u5728\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u9886\u57df\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u52a0\u7684\u7b80\u4fbf\uff0c\u56e0\u4e3a\u5de5\u7a0b\u5e08\u4eec\u53ef\u4ee5\u89c1\u5c31\u9891\u8c31\uff0c\u5e76\u786e\u5b9a\u54ea\u4e9b\u9891\u7387\u662f\u5b58\u5728\u7684\uff0c\u54ea\u4e9b\u9891\u7387\u662f\u7f3a\u5931\u7684\u3002\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u505a\u8fc7\u6ee4\uff0c\u589e\u52a0\u6216\u8005\u51cf\u5c11\u4e00\u4e9b\u9891\u7387\uff0c\u6216\u8005\u4ece\u7ed9\u5b9a\u7684\u9891\u7387\u4e2d\u8bc6\u522b\u786e\u5207\u7684\u97f3\u8c03\u3002 The Discrete Fourier Transform \u79bb\u6563\u5085\u91cc\u53f6\u53d8\u5316 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u6211\u4eec\u7684\u4fe1\u53f7\u4ece\u65f6\u57df\u8f6c\u5230\u9891\u57df\u4e2d\u6765\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362 ^2 ^2 \uff08DFT\uff0cDiscrete Fourier Transform\uff09\u3002 DFT\u662f\u4e00\u79cd\u7528\u4e8e\u5bf9\u79bb\u6563\uff08\u91c7\u6837\uff09\u4fe1\u53f7\u6267\u884c\u5085\u7acb\u53f6\u5206\u6790\u7684\u6570\u5b66\u65b9\u6cd5\u3002\u901a\u8fc7\u8003\u8651\u8fd9\u4e9b\u6b63\u5f26\u6ce2\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u91c7\u6837\u7387\uff0c\u4ed6\u5c06\u7531\u4e00\u4e2a\u51fd\u6570\u7684\u7b49\u8ddd\u91c7\u6837\u5217\u8868\uff0c\u8f6c\u6362\u6210\u4e86\u4e00\u4e2a\u6309\u7167\u9891\u7387\u6392\u5217\u7684\u6709\u9650\u7ec4\u5408\u7684\u6b63\u5f26\u66f2\u7ebf\u7684\u7cfb\u6570\u5217\u8868\u3002 \u8ba1\u7b97DFT\u7684\u6700\u6d41\u884c\u7684\u6570\u503c\u7b97\u6cd5\u4e4b\u4e00\uff0c\u5c31\u662f\u5feb\u901f\u5085\u7acb\u53f6\u53d8\u6362 ^3 ^3 \uff08FFT\uff0cFast Fourier Transform\uff09\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6700\u5e38\u7528\u7684FFT\u7b97\u6cd5\u662fCooley-Tukey\u7b97\u6cd5\u3002\u8fd9\u662f\u4e00\u79cd\u5206\u6cbb\u7b97\u6cd5\uff0c\u9012\u5f52\u7684\u5c06DFT\u5206\u89e3\u6210\u8bb8\u591a\u5c0f\u7684DFT\u8fdb\u884c\u8ba1\u7b97\u3002\u76f4\u63a5\u8ba1\u7b97DFT\u4f1a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n^2) O(n^2) \uff0c\u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230\u4e86 O(n log n) O(n log n) \u3002 \u627e\u5230\u4e00\u4e2a\u5408\u9002FFT\u5e93\u5e76\u4e0d\u96be\uff0c\u4e00\u4e0b\u5217\u4e3e\u4e86\u51e0\u4e2a\uff1a C - FFTW C++ - Eigen FFT Java - JTransform Python - NumPy Ruby - Ruby-FFTW3(Interface to FFTW) \u4e0b\u9762\u662f\u4e00\u4e2a\u7528Java\u7f16\u5199\u7684FFT\u51fd\u6570\u7684\u4f8b\u5b50\u3002\uff08FFT\u91c7\u7528\u590d\u6570\u4f5c\u4e3a\u8f93\u5165\u3002\u8981\u7406\u89e3\u590d\u6570\u548c\u4e09\u89d2\u51fd\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5efa\u8bae\u9605\u8bfb\u6b27\u62c9\u516c\u5f0f ^4 ^4 \uff09 public static Complex [] fft ( Complex [] x ) { int N = x . length ; // fft \u5076\u6570\u9879 Complex [] even = new Complex [ N / 2 ] ; for ( int k = 0 ; k < N / 2 ; k ++ ) { even [ k ] = x [ 2 * k ] ; } Complex [] q = fft ( even ); // fft \u5947\u6570\u9879 Complex [] odd = even ; // reuse the array for ( int k = 0 ; k < N / 2 ; k ++ ) { odd [ k ] = x [ 2 * k + 1 ] ; } Complex [] r = fft ( odd ); // \u5408\u5e76 Complex [] y = new Complex [ N ] ; for ( int k = 0 ; k < N / 2 ; k ++ ) { double kth = - 2 * k * Math . PI / N ; Complex wk = new Complex ( Math . cos ( kth ), Math . sin ( kth )); y [ k ] = q [ k ] . plus ( wk . times ( r [ k ] )); y [ k + N / 2 ] = q [ k ] . minus ( wk . times ( r [ k ] )); } return y ; } \u4e0b\u9762\u662f\u4e00\u4e2a\u4fe1\u53f7\u5728FFT\u5206\u6790\u524d\u540e\u7684\u6837\u5b50\uff1a before & after of FFT Music Recognition: Fingerprinting a Song \u97f3\u4e50\u8bc6\u522b\uff1a\u901a\u8fc7\u58f0\u7eb9\u8bc6\u522b\u4e00\u9996\u6b4c \u4e00\u4e2a\u4f7f\u7528FFT\u7684\u526f\u4f5c\u7528\u662f\u6211\u4eec\u4e22\u5931\u4e86\u5927\u91cf\u5173\u4e8e\u65f6\u95f4\u7ef4\u5ea6\u7684\u4fe1\u606f\u3002\uff08\u5c3d\u7ba1\u7406\u8bba\u4e0a\u662f\u53ef\u4ee5\u907f\u514d\u7684\uff0c\u4f46\u662f\u6027\u80fd\u5f00\u9500\u662f\u5de8\u5927\u7684\u3002\uff09\u5bf9\u4e8e\u4e00\u9996\u4e09\u5206\u949f\u7684\u6b4c\u66f2\uff0c\u6211\u4eec\u770b\u89c1\u4e86\u4ed6\u4eec\u6240\u6709\u7684\u9891\u7387\uff0c\u548c\u5b83\u4eec\u7684\u5927\u5c0f\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u4eec\u662f\u4ec0\u4e48\u65f6\u5019\u51fa\u73b0\u5728\u6b4c\u66f2\u4e2d\u7684\u3002\u4f46\u662f\u8fd9\u4e2a\u5173\u952e\u4fe1\u606f\uff08\u51fa\u73b0\u9891\u7387\u7684\u65f6\u95f4\u70b9\uff09\u624d\u4f7f\u5f97\u8fd9\u9996\u6b4c\u6210\u4e3a\u4e86\u8fd9\u9996\u6b4c\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u9700\u8981\u6bcf\u4e2a\u9891\u7387\u51fa\u73b0\u7684\u65f6\u95f4\u70b9\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u5f15\u5165\u6ed1\u52a8\u7a97\u53e3\uff08sliding window\uff09\uff0c\u6216\u8005\u8bf4\u6570\u636e\u5757\uff08chunk of data\uff09\uff0c\u53ea\u8f6c\u6362\u4e00\u90e8\u5206\u4fe1\u606f\u3002\u6bcf\u4e2a\u5feb\u7684\u5927\u5c0f\u53ef\u4ee5\u7528\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u786e\u5b9a\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u7528\u7acb\u4f53\u58f0\uff0c16-bit\u91c7\u6837\u572844.1kHz\u5f55\u5236\u58f0\u97f3\uff0c\u8fd9\u79cd\u58f0\u97f3\u7684\u4e00\u79d2\u949f\u662f 44,100 samples*2 bytes * 2channels \\approx176kB 44,100 samples*2 bytes * 2channels \\approx176kB \u3002\u5982\u679c\u6211\u4eec\u9009\u62e94kB\u4f5c\u4e3a\u5757\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u79d2\u5c06\u670944\u4e2a\u6570\u636e\u5757\u8fdb\u884c\u5206\u6790\u3002\u8fd9\u4e2a\u7c92\u5ea6\u8db3\u591f\u7528\u6765\u8fdb\u884c\u97f3\u9891\u8bc6\u522b\u6240\u9700\u7684\u8be6\u7ec6\u5206\u6790\u3002 \u73b0\u5728\u56de\u5230\u7f16\u7a0b\uff0c\u8fd8\u662fJava\uff1a byte audio [] = out . toByteArray () int totalSize = audio . length int sampledChunkSize = totalSize / chunkSize ; Complex [][] result = ComplexMatrix [ sampledChunkSize ][] ; for ( int j = 0 ; i < sampledChunkSize ; j ++ ) { Complex [ chunkSize ] complexArray ; for ( int i = 0 ; i < chunkSize ; i ++ ) { // \u8fd9\u91cc\u5c06\u6837\u672c\u5757\u653e\u5165\u5230\u865a\u90e8\u4e3a0\u7684\u590d\u6570\u4e2d complexArray [ i ] = Complex ( audio [ ( j * chunkSize ) + i ] , 0 ); } result [ j ] = FFT . fft ( complexArray ); } \u5728for\u5faa\u73af\u5185\u90e8\uff0c\u6211\u4eec\u5c06\u65f6\u57df\u6570\u636e\uff08the samples\uff0c\u91c7\u6837\uff09\u653e\u5165\u5230\u4e00\u4e2a\u865a\u90e8\u4e3a0\u7684\u590d\u6570\u4e2d\u3002\u5728\u5916\u90e8\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u8fed\u4ee3\u4fbf\u5229\u6240\u6709\u7684\u5757\u5bf9\u6bcf\u4e00\u4e2a\u8fdb\u884cFFT\u5206\u6790\u3002 \u4e00\u65e6\u6211\u4eec\u638c\u63e1\u4e86\u4fe1\u53f7\u9891\u7387\u7684\u7ec4\u6210\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5f62\u6210\u6b4c\u66f2\u7684\u6570\u5b57\u6307\u7eb9\u3002\u8fd9\u662f\u6574\u4e2aShazam\u97f3\u9891\u8bc6\u522b\u8fc7\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u90a3\u90e8\u5206\u3002\u8fd9\u91cc\u7684\u4e3b\u8981\u6311\u6218\u662f\u5728\u5df2\u7ecf\u6355\u83b7\u7684\u9891\u7387\u6d77\u6d0b\u91cc\u53bb\u533a\u5206\uff0c\u54ea\u4e9b\u9891\u7387\u662f\u6700\u91cd\u8981\u7684\u3002\u76f4\u89c2\u5730\uff0c\u6211\u4eec\u641c\u7d22\u5177\u6709\u6700\u9ad8\u5e45\u5ea6\uff08\u5cf0\u503c\uff09\u7684\u9891\u7387\u3002 \u7136\u800c\u5728\u4e00\u9996\u6b4c\u4e2d\uff0c\u6700\u5f3a\u7684\u9891\u7387\u8303\u56f4\u53ef\u80fd\u5728\u4f4e\u97f3 C-C_1 C-C_1 \uff0832.70Hz\uff09\u548c\u9ad8\u97f3 C-C_8 C-C_8 \uff084186.01Hz\uff09\u4e4b\u95f4\u53d8\u5316\u3002\u8fd9\u8986\u76d6\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u8303\u56f4\u3002\u56e0\u6b64\uff0c\u9884\u671f\u4e00\u6b21\u6027\u5206\u6790\u5b8c\u6574\u4e2a\u9891\u7387\u7684\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u51e0\u4e2a\u8f83\u5c0f\u7684\u8303\u56f4\uff0c\u8fd9\u4e9b\u8303\u56f4\u662f\u6839\u636e\u91cd\u8981\u97f3\u4e50\u6210\u5206\u7684\u5171\u540c\u9891\u9009\u62e9\u7684\uff0c\u5e76\u5206\u522b\u8fdb\u884c\u5206\u6790\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9this guy ^5 ^5 \u4e3a\u5b9e\u73b0Shazam\u7684\u7b97\u6cd5\u6240\u9009\u62e9\u7684\u65f6\u95f4\u95f4\u9694\u3002\u8fd9\u4e9b\u95f4\u9694\u662f30Hz-40Hz\uff0c40Hz-80Hz\u548c80Hz-120Hz\u4e3a\u4f4e\u97f3(\u5305\u62ec\u4f4e\u97f3\u5409\u4ed6) \uff0c\u548c120Hz-180Hz\u548c180Hz-300Hz\u4e3a\u4e2d\u7b49\u548c\u9ad8\u97f3(\u5305\u62ec\u4eba\u58f0\u548c\u5927\u591a\u6570\u5176\u4ed6\u4e50\u5668)\u3002 \u73b0\u5728\u5728\u6bcf\u4e2a\u65f6\u95f4\u95f4\u9694\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u8bc6\u522b\u51fa\u5cf0\u503c\u7684\u9891\u7387\u3002\u8fd9\u4e9b\u4fe1\u606f\u5f62\u6210\u4e86\u6b4c\u66f2\u8fd9\u4e00\u6570\u636e\u5757\u7684\u7b7e\u540d\uff0c\u800c\u8fd9\u4e9b\u7b7e\u540d\u6210\u4e3a\u4e86\u6574\u9996\u6b4c\u66f2\u58f0\u7eb9\u7684\u4e00\u90e8\u5206\u3002 public final int [] RANGE = new int [] { 40 , 80 , 120 , 180 , 300 }; // \u83b7\u53d6\u9891\u7387\u6240\u5728\u8303\u56f4 public int getIndex ( int freq ) { int i = 0 ; while ( RANGE [ i ] < freq ) i ++ ; return i ; } // result is complex matrix obtained in previous step // \u7ed3\u679c\u662f\u4e0a\u4e00\u6b65\u6240\u83b7\u53d6\u7684\u590d\u6570\u77e9\u9635\uff08\u4e0a\u4e00\u4e2a\u4ee3\u7801\u5757\u2b06\ufe0f\uff09 for ( int t = 0 ; t < result . length ; t ++ ) { for ( int freq = 40 ; freq < 300 ; freq ++ ) { // \u83b7\u53d6\u5e45\u5ea6 double mag = Math . log ( results [ t ][ freq ] . abs () + 1 ); // \u83b7\u53d6\u9891\u7387\u6240\u5728\u8303\u56f4 int index = getIndex ( freq ); // \u4fdd\u5b58\u6700\u9ad8\u7684\u5e45\u5ea6\u548c\u5bf9\u5e94\u7684\u9891\u7387: if ( mag > highscores [ t ][ index ] ) { points [ t ][ index ] = freq ; } } // \u5f62\u6210hash tag long h = hash ( points [ t ][ 0 ] , points [ t ][ 1 ] , points [ t ][ 2 ] , points [ t ][ 3 ] ); } private static final int FUZ_FACTOR = 2 ; private long hash ( long p1 , long p2 , long p3 , long p4 ) { return ( p4 - ( p4 % FUZ_FACTOR )) * 100000000 + ( p3 - ( p3 % FUZ_FACTOR )) * 100000 + ( p2 - ( p2 % FUZ_FACTOR )) * 100 + ( p1 - ( p1 % FUZ_FACTOR )); } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u5047\u5b9a\u5f55\u97f3\u4e0d\u662f\u5728\u5b8c\u7f8e\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u5305\u542b\u6a21\u7cca\u56e0\u5b50\uff08fuzz factor\uff09\u3002\u6a21\u7cca\u56e0\u5b50\u7684\u5206\u6790\u5728\u4e00\u4e2a\u771f\u5b9e\u7684\u7cfb\u7edf\u4e2d\u5fc5\u987b\u88ab\u91cd\u89c6\u5230\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6709\u4e00\u4e2a\u6839\u636e\u8bb0\u5f55\u6761\u4ef6\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u7684\u9009\u9879\u3002 \u4e3a\u4e86\u65b9\u4fbf\u641c\u7d22\uff0c\u8fd9\u4e2a\u7b7e\u540d\u6210\u4e3a\u4e86hash\u8868\u4e2d\u7684key\u3002\u5bf9\u5e94\u7684value\u5219\u662f\u51fa\u73b0\u8fd9\u7ec4\u9891\u7387\u5728\u6b4c\u66f2\u4e2d\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u6b4c\u66f2\u7684ID\u548c\u6b4c\u624b\u3002\u4e0b\u9762\u662f\u8fd9\u4e9b\u6b4c\u66f2\u5982\u4f55\u8bb0\u5f55\u51fa\u73b0\u5728\u6570\u636e\u5e93\u4e2d\u7684\u793a\u4f8b\u3002 \\begin{array}{|c|c|c|}\\hline Hash\\ Tag&Time\\ in\\ Seconds&Song\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&53.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 33\\ 56\\ 92\\ 151\\ 185&12.32&Song\\ B\\ by\\ artist\\ B\\\\\\hline 39\\ 26\\ 89\\ 141\\ 251&15.34&Song\\ C\\ by\\ artist\\ C\\\\\\hline 32\\ 67\\ 100\\ 128\\ 270&78.43&Song\\ D\\ by\\ artist\\ D\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&10.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline 34\\ 57\\ 95\\ 111\\ 200&54.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 34\\ 41\\ 93\\ 161\\ 202&11.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline \\end{array} \\begin{array}{|c|c|c|}\\hline Hash\\ Tag&Time\\ in\\ Seconds&Song\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&53.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 33\\ 56\\ 92\\ 151\\ 185&12.32&Song\\ B\\ by\\ artist\\ B\\\\\\hline 39\\ 26\\ 89\\ 141\\ 251&15.34&Song\\ C\\ by\\ artist\\ C\\\\\\hline 32\\ 67\\ 100\\ 128\\ 270&78.43&Song\\ D\\ by\\ artist\\ D\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&10.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline 34\\ 57\\ 95\\ 111\\ 200&54.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 34\\ 41\\ 93\\ 161\\ 202&11.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline \\end{array} \u5982\u679c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u97f3\u4e50\u8bc6\u522b\u8fc7\u7a0b\u8fd0\u884c\u4e00\u4e2a\u5b8c\u6574\u7684\u6b4c\u66f2\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5305\u62ec\u4e86\uff0c \u6bcf\u9996\u6b4c\u66f2\u7684\u5b8c\u6574\u58f0\u7eb9\u3002 The Music Algorithm: Song Identification \u97f3\u4e50\u7b97\u6cd5\uff1a\u6b4c\u66f2\u8bc6\u522b \u4e3a\u4e86\u8bc6\u522b\u5f53\u524d\u5728\u4ff1\u4e50\u90e8\u64ad\u653e\u7684\u6b4c\uff0c\u6211\u4eec\u7528\u624b\u673a\u5f55\u5236\u4e86\u8fd9\u9996\u6b4c\uff0c\u7136\u540e\u50cf\u4e0a\u9762\u4e00\u6837\u901a\u8fc7\u76f8\u540c\u7684\u58f0\u7eb9\u8bc6\u522b\u7a0b\u5e8f\u8fdb\u884c\u5904\u7406\u3002\u63a5\u7740\uff0c\u6211\u4eec\u5728\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u5339\u914d\u7684hash\u6807\u7b7e\u3002 \u78b0\u5de7\uff0c\u8bb8\u591ahash\u6807\u7b7e\u5c06\u5bf9\u5e94\u7740\u591a\u9996\u6b4c\u7684\u97f3\u4e50\u6807\u5fd7\u7b26\u3002\u4f8b\u5982\uff0c\u67d0\u4e00\u9996\u6b4c\u7684a\u7684\u67d0\u4e00\u6bb5\u542c\u8d77\u6765\u5c31\u50cf\u662f\u6b4c\u66f2e\u7684\u67d0\u4e00\u6bb5\u3002\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\uff0c\u56e0\u4e3a\u97f3\u4e50\u5bb6\u4eec\u603b\u662f\u4f1a\u5f7c\u6b64\u201c\u501f\u9274\u201c\u4e00\u4e9blicks\u548criffs\uff0c\u800c\u4e14\u73b0\u5728\u6709\u7684\u5236\u4f5c\u4eba\u4f1a\u4ece\u522b\u7684\u6b4c\u66f2\u4e2d\u91c7\u6837\u3002\u6bcf\u6b21\u6211\u4eec\u5339\u914d\u4e00\u4e2ahash \u6807\u7b7e\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u5339\u914d\u7684\u6570\u91cf\u5c31\u4f1a\u53d8\u5f97\u66f4\u5c11\uff0c\u4f46\u662f\u8fd9\u4e2a\u4fe1\u606f\u672c\u7701\u53ef\u80fd\u4e0d\u4f1a\u5c06\u5339\u914d\u8303\u56f4\u7f29\u5c0f\u5230\u4e00\u9996\u6b4c\u4e2d\u3002\u6240\u4ee5\u8fd8\u6709\u4e00\u4ef6\u4e8b\u60c5\u9700\u8981\u53bb\u68c0\u67e5\u6211\u4eec\u7684\u8bc6\u522b\u7b97\u6cd5\uff0c\u5c31\u662f\u65f6\u95f4\u3002 \u6211\u4eec\u5728\u4ff1\u4e50\u90e8\u4e2d\u8bb0\u5f55\u7684\u6b4c\u66f2\u6837\u672c\u53ef\u80fd\u6765\u81ea\u4e8e\u97f3\u4e50\u7684\u4efb\u4f55\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u5c06\u5339\u914d\u7684Hash\u7684\u65f6\u95f4\u6233\u548c\u6837\u672c\u7684\u65f6\u95f4\u6233\u8fdb\u884c\u914d\u5bf9\u3002\u7136\u800c\uff0c\u4f7f\u7528\u591a\u4e2ahash\u8fdb\u884c\u5339\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u51fa\u76f8\u5bf9\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u589e\u52a0\u786e\u5b9a\u6027\u3002 \u4f8b\u5982\u4f60\u770b\u4e0a\u9762\u7684\u8868\u683c\uff0c\u4f60\u4f1a\u53d1\u73b0hash\u6807\u7b7e\u4e3a30 51 99 121 195\u5206\u522b\u5bf9\u5e94\u7684\u662fSong A\u548cSong E\u3002\u5982\u679c\u4e00\u79d2\u540e\uff0c\u6211\u4eec\u5339\u914d\u5230\u7684hash\u662f34 57 95 111 200\uff0c\u90a3\u66f4\u52a0\u7684\u5339\u914dSong A\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u77e5\u9053hash\u548c\u65f6\u95f4\u5dee\u90fd\u5339\u914d\u3002 // Class that represents specific moment in a song // \u4ee3\u8868\u4e86\u6b4c\u66f2\u7279\u5b9a\u65f6\u523b\u7684\u7c7b private class DataPoint { private int time ; private int songId ; public DataPoint ( int songId , int time ) { this . songId = songId ; this . time = time ; } public int getTime () { return time ; } public int getSongId () { return songId ; } } \u6211\u4eec\u5c06 i_1 i_1 \u548c i_2 i_2 \u4f5c\u4e3a\u5f55\u5236\u6b4c\u66f2\u4e2d\u7684\u65f6\u523b\uff0c j_1 j_1 \u548c j_2 j_2 \u4f5c\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u65f6\u523b\u3002\u6211\u4eec\u53ef\u8bf4\u6211\u4eec\u6709\u4e24\u4e2a\u65f6\u95f4\u5dee\u7684\u5339\u914d\uff1a RecordedHash(i_1) = SongInDataBaseHash(j_1) \\\\ \\&\\& \\\\ RecordedHash(i_2) = SongInDataBaseHash(j_2) RecordedHash(i_1) = SongInDataBaseHash(j_1) \\\\ \\&\\& \\\\ RecordedHash(i_2) = SongInDataBaseHash(j_2) \\\\ abs(i_1-i_2)=abs(j_1-j_2) \\\\ abs(i_1-i_2)=abs(j_1-j_2) \u8fd9\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u7075\u6d3b\u7684\u4ece\u5934\uff0c\u4e2d\u95f4\uff0c\u6216\u8005\u7ed3\u5c3e\u5f55\u5236\u6b4c\u66f2\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5728\u4ff1\u4e50\u90e8\u5f55\u5236\u7684\u6b4c\u66f2\u5728\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\u90fd\u4e0d\u53ef\u80fd\u8ddf\u6211\u4eec\u5728\u56fe\u4e66\u9986\u5f55\u5236\u7684\u4e00\u9996\u6b4c\u7684\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u65f6\u523b\u76f8\u5339\u914d\u3002\u5f55\u97f3\u4f1a\u5305\u542b\u5f88\u591a\u566a\u97f3\uff0c\u8fd9\u4e9b\u566a\u97f3\u4f1a\u5728\u5339\u914d\u4e2d\u5f15\u5165\u4e00\u4e9b\u9519\u8bef\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u6ca1\u6709\u8bd5\u56fe\u53bb\u4ece\u5339\u914d\u5217\u8868\u4e2d\u79fb\u9664\uff0c\u9664\u4e86\u6b63\u786e\u6b4c\u66f2\u4ee5\u5916\u7684\u6240\u6709\u6b4c\u66f2\uff0c\u800c\u662f\u5728\u6700\u540e\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5339\u914d\u7684\u6b4c\u66f2\u6309\u7167\u53ef\u80fd\u6027\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u9700\u8981\u8fd4\u56de\u7684\u5219\u662f\u6392\u540d\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6b4c\u66f2\u3002 From Top to Bottom \u81ea\u9876\u5411\u4e0b \u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u201cHow does Shazam work?\u201d\u4e0b\u9762\u5219\u662f\u6574\u4e2a\u97f3\u4e50\u8bc6\u522b\u548c\u5339\u914d\u8fc7\u7a0b\u7684\u6982\u8ff0\uff0c\u81ea\u9876\u5411\u4e0b\uff1a Processing Pipeline of Shazam \u5bf9\u4e8e\u8fd9\u79cd\u7cfb\u7edf\u6765\u8bf4\uff0c\u6570\u636e\u5e93\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u5e9e\u5927\uff0c\u56e0\u6b64\u4f7f\u7528\u4e00\u79cd\u53ef\u4f38\u7f29\u7684\u6570\u636e\u5e93\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u5b83\u4e0d\u9700\u8981\u5173\u7cfb\uff0c\u800c\u4e14\u6570\u636e\u6a21\u578b\u4e5f\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u4f7f\u7528\u4e00\u79cdNo SQL\u6570\u636e\u5e93\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002 How Does Shazam Work? Now You Know \u73b0\u5728\u4f60\u77e5\u9053\u4e86 \u8fd9\u79cd\u6b4c\u66f2\u8bc6\u522b\u8f6f\u4ef6\u53ef\u4ee5\u7528\u6765\u5bfb\u627e\u6b4c\u66f2\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u73b0\u5728\u4f60\u5df2\u7ecf\u4e86\u89e3\u4e86 Shazam \u7684\u5de5\u4f5c\u539f\u7406\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u9664\u4e86\u64ad\u653e\u51fa\u79df\u8f66\u6536\u97f3\u673a\u64ad\u653e\u7684\u6000\u65e7\u6b4c\u66f2 Shazaming \u4e4b\u5916\uff0c\u5b83\u8fd8\u5177\u6709\u5176\u4ed6\u5e94\u7528\u3002\u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u627e\u5230\u97f3\u4e50\u4e2d\u7684\u6284\u88ad\uff0c\u6216\u8005\u627e\u51fa\u8c01\u662f\u5e03\u9c81\u65af\u3001\u7235\u58eb\u3001\u6447\u6eda\u3001\u6d41\u884c\u97f3\u4e50\u6216\u4efb\u4f55\u5176\u4ed6\u6d41\u6d3e\u5148\u9a71\u7684\u6700\u521d\u7075\u611f\u6765\u6e90\u3002 \u4e5f\u8bb8\u4e00\u4e2a\u597d\u7684\u5b9e\u9a8c\u662f\u7528\u5df4\u8d6b\u3001\u8d1d\u591a\u82ac\u3001\u7ef4\u74e6\u5c14\u7b2c\u3001\u74e6\u683c\u7eb3\u3001\u8096\u90a6\u548c\u83ab\u624e\u7279\u7684\u53e4\u5178\u97f3\u4e50\u586b\u5145\u6b4c\u66f2\u6837\u672c\u6570\u636e\u5e93\uff0c\u8bd5\u7740\u627e\u51fa\u6b4c\u66f2\u4e4b\u95f4\u7684\u76f8\u4f3c\u4e4b\u5904\u3002\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fde\u9c8d\u52c3 \u00b7 \u8fea\u4f26\u3001\u732b\u738b\u548c\u7f57\u4f2f\u7279 \u00b7 \u7ea6\u7ff0\u900a\u90fd\u662f\u527d\u7a83\u8005\uff01 \u4f46\u662f\u6211\u4eec\u4ecd\u7136\u4e0d\u80fd\u7ed9\u4ed6\u4eec\u5b9a\u7f6a\u3002 \u56e0\u4e3a\u97f3\u4e50\u53ea\u662f\u6211\u4eec\u5728\u5934\u8111\u4e2d\u542c\u5230\u3001\u8bb0\u5fc6\u548c\u4e0d\u65ad\u91cd\u590d\u7684\u4e00\u4e2a\u6ce2\uff0c\u5b83\u5728\u8111\u6d77\u4e2d\u8fdb\u5316\u548c\u6f14\u53d8\uff0c\u76f4\u5230\u6211\u4eec\u5f55\u5236\u4e86\u5b83\uff0c\u7136\u540e\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u4f1f\u5927\u7684\u97f3\u4e50\u5929\u624d\u3002 \u8bd1\u5b8c\u8fd9\u7bc7\uff0c\u5176\u5b9e\u5df2\u7ecf\u80fd\u591f\u89e3\u51b3\u6211\u5728\u5de5\u4f5c\u573a\u666f\u4e2d\u9047\u5230\u7684\u95ee\u9898\uff0c\u5bf9\u51e0\u79cd\u5f55\u97f3\u8fdb\u884c\uff0c\u6355\u83b7\uff0c\u8f6c\u6362\u5230\u9891\u57df\uff0c\u8ba1\u7b97\u58f0\u7eb9\uff0c\u7136\u540e\u5339\u914d\u4e24\u4e2a\u65f6\u95f4\u5dee\u3002\u6211\u975e\u5e38\u8ba4\u540c\u6700\u540e\u4e00\u6bb5\u8bdd\uff0c\u8fd9\u6bb5\u672c\u4e0d\u5e94\u8be5\u51fa\u73b0\u5728\u6280\u672f\u6587\u7ae0\u4e2d\u7684\u8bdd\u3002\u7f8e\u597d\u7684\u4e8b\u60c5\u5e94\u8be5\u88ab\u4f20\u9012\u4e0b\u4e00\u4e2a\u4eba\u8111\u6d77\uff0c\u7ed9\u666e\u901a\u4eba\u5e26\u6765\u5feb\u4e50\uff0c\u7ed9\u5929\u624d\u4eec\u521b\u9020\u548c\u53d1\u6325\u7684\u7075\u611f\u3002\u6280\u672f\u4e5f\u662f\uff0c\u5c31\u50cf\u5927\u5bb6\u6240\u4fe1\u5949\u7684\u5f00\u6e90\u7cbe\u795e\u4e00\u6837\uff0c\u5e26\u7ed9\u8fd9\u4e2a\u4e16\u754c\u4ee5\u6539\u53d8\u3002 \u4f5c\u4e3a\u6536\u5c3e\uff0c\u6211\u4f1a\u53bb\u5b9e\u73b0\u4e00\u4e2aGo\u7684Shazam\u7b97\u6cd5\uff0c\u53ef\u80fd\u5df2\u7ecf\u6709\u4e86\u3002\u81f3\u6b64\uff0c\u7ffb\u8bd1\u8ba1\u5212\u7684\u7b2c\u4e09\u7bc7\u5df2\u7ecf\u5b8c\u6210\uff0c\u8ba1\u5212\u4e5f\u8fce\u6765\u4e86\u4e00\u4f4d\u65b0\u7684\u5c0f\u4f19\u4f34\uff0c\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5c06\u662f\u7531\u4ed6\u8fdb\u884c\u9009\u9898\uff0c\u7136\u540e\u5171\u540c\u7ffb\u8bd1\u3002 \u53c2\u8003 [1]\u5948\u594e\u65af\u7279-\u9999\u519c\u5b9a\u7406\uff1a https://en.wikipedia.org/wiki/Nyquist\u2013Shannon_sampling_theorem [2]\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\uff1a https://en.wikipedia.org/wiki/Discrete_Fourier_transform [3]Cooley-Tukey\u7b97\u6cd5: https://en.wikipedia.org/wiki/Cooley\u2013Tukey_FFT_algorithm [4]\u6b27\u62c9\u516c\u5f0f\u5b9a\u4e49\u590d\u6570\u4e0b\u4e09\u89d2\u51fd\u6570 \\sin z = \\frac{e^{iz}-e^{-iz}}{2i} \\sin z = \\frac{e^{iz}-e^{-iz}}{2i} \\cos z = \\frac{e^{iz}+e^{-iz}}{2} \\cos z = \\frac{e^{iz}+e^{-iz}}{2} e^{ix}=\\cos x +i \\sin x e^{ix}=\\cos x +i \\sin x e^{-ix}=\\cos x -i \\sin x e^{-ix}=\\cos x -i \\sin x [5]\u7528Java\u5b9e\u73b0Shazam \u7b97\u6cd5\uff1a https://www.royvanrijn.com/blog/2010/06/creating-shazam-in-java/","title":"Shazam\u662f\u5982\u4f55\u5de5\u4f5c\u7684"},{"location":"translate/tp2/#4how-does-shazam-work-music-recognition-algorithms-fingerprinting-and-processing","text":"Created: Mar 15, 2021 2:22 PM link: https://www.toptal.com/algorithms/shazam-it-music-processing-fingerprinting-and-recognition writer: JOVAN JOVANOVIC \u6807\u7b7e: \u6280\u672f, \u97f3\u9891\u5904\u7406 Jovan is an entrepreneur and engineer with a strong mathematical background and an extensive skillset for problem-solving. \u3010About Project\u3011\u4e0a\u4e00\u6b21\u8bf4\u5230\u7ffb\u8bd1\u8ba1\u5212\uff0c\u4f3c\u4e4e\u8fd8\u662f16\u5e74\u5728\u70b9\u77f3\u56e2\u961f\u7684\u65f6\u5019\u3002\u201cOpen Eyes Project\u201d\uff0c\u90a3\u65f6\u5019\u7f3a\u4e4f\u4e86\u63a8\u52a8\u529b\u3002\u8fd9\u6b21\u91cd\u65b0\u5f00\u59cb\uff0c\u7ffb\u8bd1\u4e00\u4e9b\u6280\u672f\u6587\u7ae0\u6216\u8005\uff0c\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002\u6682\u65f6\u4e0d\u7ed9\u4ed6\u4e00\u4e2a\u540d\u5b57\u5427\u3002 \u65b0\u7ffb\u8bd1\u8ba1\u5212 \u5b83\u6765\u4e86\u3002\u8fd9\u662f\u672c\u7cfb\u5217\u7684\u7b2c\u4e8c\u7bc7\u7ffb\u8bd1\u6587\u7ae0\u3002 \u4e0a\u5468\uff0c\u62ff\u5230\u5b9e\u4e60\u516c\u53f8\u7684\u4e00\u4e2a\u9700\u6c42\uff0c\u5bf9\u97f3\u9891\u8fdb\u884c\u6a21\u5f0f\u8bc6\u522b\uff0c\u5927\u81f4\u80fd\u591f\u533a\u5206\u8fd9\u6bb5\u97f3\u9891\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\uff0c\u5728\u5bfb\u6c42\u89e3\u51b3\u65b9\u6848\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u7bc7\u6587\u7ae0\u3002\u8bb2\u8ff0\u4e86Shazam\uff08\u542c\u6b4c\u8bc6\u66f2\u8f6f\u4ef6\uff09\u5b83\u662f\u600e\u4e48\u505a\u5230\u7684\u3002 \u4ee5\u4e0b\u662f\u672c\u6587\u7684\u6b63\u6587\u5185\u5bb9\uff1a","title":"\u3010\u7ffb\u8bd1\u8ba1\u52124\u3011How does Shazam work? Music Recognition Algorithms, Fingerprinting, and Processing"},{"location":"translate/tp2/#shazam","text":"","title":"Shazam\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\u97f3\u4e50\u8bc6\u522b\u7b97\u6cd5\uff0c\u58f0\u7eb9\u4ee5\u53ca\u5904\u7406\u8fc7\u7a0b"},{"location":"translate/tp2/#introduction","text":"\u4f60\u5728\u4ff1\u4e50\u90e8\u6216\u8005\u9910\u9986\u91cc\u542c\u5230\u4e86\u4e00\u9996\u719f\u6089\u7684\u6b4c\u3002\u8fd9\u9996\u6b4c\u771f\u8bda\u7684\u6253\u52a8\u4e86\u4f60\uff0c\u5c3d\u7ba1\u4f60\u5df2\u7ecf\u542c\u8fc7\u4e0a\u5343\u904d\uff0c\u4f60\u60f3\u660e\u5929\u518d\u6b21\u53bb\u542c\u8fd9\u9996\u6b4c\uff0c\u4f46\u662f\u4f60\u56de\u5fc6\u4e0d\u51fa\u6765\u5b83\u7684\u540d\u5b57\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5728\u8fd9\u4e2a\u795e\u5947\u7684\u4e16\u754c\u91cc\uff0c\u4f60\u6709\u4e00\u90e8\u5b89\u88c5\u4e86\u542c\u6b4c\u8bc6\u66f2\u7684\u624b\u673a\uff0c\u4f60\u5f97\u6551\u4e86\u3002\u4f60\u53ef\u4ee5\u653e\u8f7b\u677e\u4e86\uff0c\u56e0\u4e3a\u8f6f\u4ef6\u4f1a\u544a\u8bc9\u4f60\u8fd9\u9996\u6b4c\u7684\u540d\u5b57\uff0c\u4f60\u77e5\u9053\u4f60\u53c8\u80fd\u542c\u5b83\u4e86\uff0c\u53ea\u5230\u5b83\u6210\u4e3a\u4f60\u7684\u4e00\u90e8\u5206\u2026\u2026\u6216\u8005\u4f60\u538c\u5026\u4e86\u5b83\u3002 \u79fb\u52a8\u6280\u672f\uff0c\u548c\u97f3\u9891\u4fe1\u53f7\u5904\u7406\u6280\u672f\u7684\u5de8\u5927\u53d1\u5c55\uff0c\u8d4b\u4e88\u4e86\u6211\u4eec\u7684\u7b97\u6cd5\u5f00\u53d1\u4eba\u5458\u53bb\u521b\u9020\u97f3\u4e50\u8bc6\u522b\u8f6f\u4ef6\u7684\u80fd\u529b\u3002\u5176\u4e2d\u6700\u6709\u540d\u7684\u97f3\u4e50\u8bc6\u522b\u8f6f\u4ef6\u4e4b\u4e00\uff0cShazam\u3002\u5982\u679c\u4f60\u6355\u6349\u5230\u4e00\u9996\u6b4c\u7684\u4e8c\u5341\u79d2\uff0c\u65e0\u8bba\u662f\u524d\u594f(intro)\uff0c\u4e3b\u6b4c(verse)\u8fd8\u662f\u526f\u6b4c(chorus)\uff0c\u5b83\u90fd\u4f1a\u4e3a\u5f55\u97f3\u6837\u672c\u521b\u9020\u4e00\u4e2a\u58f0\u7eb9\uff08Voice Fingerprint\uff0cvoiceprint\uff09\uff0c\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u7528\u97f3\u4e50\u8bc6\u522b\u7b97\u6cd5\u544a\u8bc9\u4f60\u6b63\u5728\u542c\u54ea\u4e00\u9996\u6b4c\u3002 Music recognition software:' Shazam' \u4f46\u662fShazam\u662f\u600e\u6837\u5de5\u4f5c\u7684\u5462\uff1f2003\u5e74\uff0cAvery Li-Chung Wang\u5411\u4e16\u754c\u5c55\u793a\u4e86Shazam\u7684\u7b97\u6cd5\uff08\u4f5c\u4e3a\u8bba\u6587\u88ab\u53d1\u8868\uff09\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecdShazam\u7684\u97f3\u4e50\u8bc6\u522b\u7b97\u6cd5\u7684\u57fa\u672c\u539f\u7406\u3002","title":"Introduction"},{"location":"translate/tp2/#analog-to-digital-sampling-a-signal","text":"\u6a21\u62df\u4fe1\u53f7\u5230\u6570\u5b57\u4fe1\u53f7 - \u4fe1\u53f7\u91c7\u6837 \u58f0\u97f3\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\u5b83\u662f\u67d0\u79cd\u795e\u79d8\u7684\u7269\u8d28\uff0c\u6211\u4eec\u4e0d\u80fd\u89e6\u6478\uff0c\u4f46\u662f\u53ef\u4ee5\u98de\u5230\u6211\u4eec\u7684\u8033\u6735\u91cc\uff0c\u8ba9\u6211\u4eec\u542c\u5230\u4e00\u4e9b\u4e1c\u897f\uff1f \u5f53\u7136\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u5728\u73b0\u5b9e\u4e2d\uff0c\u58f0\u97f3\u662f\u4e00\u79cd\u9707\u52a8\uff0c\u5b83\u4ee5\u538b\u529b\u4e0e\u4f4d\u79fb\u7684\u673a\u68b0\u6ce2\u7684\u5f62\u5f0f\uff0c\u901a\u8fc7\u7a7a\u6c14\u6216\u8005\u6c34\u8fd9\u6837\u7684\u4ecb\u8d28\u4f20\u64ad\u3002\u5f53\u8fd9\u79cd\u9707\u52a8\u4f20\u5230\u6211\u4eec\u7684\u8033\u6735\uff0c\u7279\u522b\u662f\u9f13\u819c\u7684\u65f6\u5019\uff0c\u8033\u9aa8\u5c06\u9707\u52a8\u8fdb\u4e00\u6b65\u7684\u4f20\u5230\u6211\u4eec\u7684\u5185\u8033\u6df1\u5904\u7684\u6bdb\u7ec6\u80de\uff08Hair Cell\uff09\u3002\u6700\u540e\u8fd9\u4e9b\u6bdb\u7ec6\u80de\u4ea7\u751f\u7535\u8109\u51b2\uff0c\u901a\u8fc7\u542c\u89c9\u795e\u7ecf\u4f20\u5165\u6211\u4eec\u7684\u5927\u8111\u3002 \u5f55\u97f3\u8bbe\u5907\u76f8\u5f53\u63a5\u8fd1\u7684\u8fd8\u539f\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5229\u7528\u58f0\u6ce2\u7684\u538b\u529b\u4ea7\u751f\u7684\u9707\u52a8\u8f6c\u6362\u6210\u7535\u4fe1\u53f7\u3002\u7a7a\u6c14\u4e2d\u7684\u5b9e\u9645\u58f0\u6ce2\u662f\u4e00\u79cd\u8fde\u7eed\u7684\u538b\u529b\u4fe1\u53f7\u3002\u9ea6\u514b\u98ce\u662f\u8fd9\u79cd\u538b\u529b\u4fe1\u53f7\uff08\u58f0\u6ce2\uff09\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u7535\u5b50\u5143\u4ef6\uff0c\u5c06\u538b\u529b\u4fe1\u53f7\u8f6c\u6362\u6210\u4e86\u6a21\u62df\u7535\u538b\u4fe1\u53f7\u2014\u2014\u540c\u6837\u4e5f\u662f\u8fde\u7eed\uff08continuous\uff09\u7684\u3002\u8fd9\u79cd\u8fde\u7eed\u7684\u4fe1\u53f7\u5728\u6570\u7ec4\u4e16\u754c\u91cc\u6ca1\u6709\u591a\u5927\u7684\u7528\u5904\uff0c\u6240\u4ee5\u5728\u5904\u7406\u5b83\u4e4b\u524d\uff0c\u5fc5\u987b\u5c06\u5b83\u8f6c\u6362\u6210\u4e00\u4e2a\u79bb\u6563\uff08discrete\uff09\u7684\u7535\u4fe1\u53f7\u3002\u8fd9\u662f\u901a\u8fc7\u6355\u83b7\u4fe1\u53f7\u632f\u5e45\u7684\u6570\u5b57\u503c\u6765\u5b9e\u73b0\u7684\u3002 \u8fd9\u79cd\u8f6c\u6362\u6d89\u53ca\u5230\u4e86\u8f93\u5165\u7684\u91cf\u5316\uff0c\u5fc5\u7136\u4f1a\u5f15\u8d77\u5c11\u91cf\u7684\u8bef\u5dee\u3002\u56e0\u6b64\uff0c\u4e0d\u540c\u4e8e\u4e00\u6b21\u6027\u7684\u8f6c\u6362\uff0c\u6a21\u62df\u6570\u5b57\u8f6c\u6362\u5668\u9700\u8981\u5bf9\u5f88\u5c0f\u7684\u7247\u6bb5\u6267\u884c\u591a\u6b21\u8f6c\u6362\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u91c7\u6837\u3002 Analog to digital signal \u5948\u594e\u65af\u7279-\u9999\u519c\u5b9a\u7406 ^1 ^1 \u544a\u8bc9\u6211\u4eec\uff0c\u8981\u6355\u83b7\u8fde\u7eed\u4fe1\u53f7\u4e2d\u7684\u67d0\u4e2a\u9891\u7387\uff0c\u5fc5\u987b\u4f7f\u7528\u7279\u5b9a\u7684\u91c7\u6837\u7387\u3002\u7279\u522b\u662f\u4e3a\u4e86\u6355\u83b7\u6240\u6709\u4eba\u7c7b\u80fd\u591f\u5728\u97f3\u9891\u4fe1\u53f7\u4e2d\u542c\u5230\u7684\u6240\u6709\u9891\u7387\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u4eba\u7c7b\u542c\u89c9\u8303\u56f4\u5185\u7684\u4e24\u500d\u9891\u7387\u5bf9\u4fe1\u53f7\u8fdb\u884c\u91c7\u6837\u3002\u4eba\u7c7b\u7684\u8033\u6735\u80fd\u591f\u542c\u5230\u5927\u7ea6\u4ece20Hz\u523020000Hz\u4e4b\u95f4\u7684\u9891\u7387\u3002\u56e0\u6b64\uff0c\u97f3\u9891\u901a\u5e38\u4ee544,100Hz\u7684\u91c7\u6837\u7387\u8fdb\u884c\u8bb0\u5f55\u3002\u8fd9\u662f\u5149\u76d8\u7684\u91c7\u6837\u7387\uff0c\u4e5f\u662fMPEG-1\u97f3\u9891\uff08VCD\u3001MP3\uff09\u6700\u5e38\u7528\u7684\u91c7\u6837\u7387\u3002Sony\u516c\u53f8\u6700\u65e9\u91c7\u7528\u4e86\u8fd9\u4e2a\u9891\u7387\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u4ee5\u6bcf\u79d225\u5e27\uff08PAL\uff09\u6216\u6bcf\u79d230\u5e27\u7684\u901f\u5ea6\uff08\u4f7f\u7528NTSC\u5355\u8272\u5f55\u50cf\u673a\uff09\u5f55\u5236\u5728\u7ecf\u8fc7\u4fee\u6539\u7684\u89c6\u9891\u8bbe\u5907\u4e2d\uff0c\u8986\u76d620,000Hz\u7684\u5e26\u5bbd\uff0c\u5728\u5f53\u65f6\u88ab\u8ba4\u4e3a\u662f\u53ef\u4ee5\u4e0e\u4e13\u4e1a\u7684\u5f55\u97f3\u8bbe\u5907\u76f8\u5ab2\u7f8e\u3002\u6240\u4ee5\u5f53\u4f60\u9009\u62e9\u91c7\u6837\u7387\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u80fd\u4f1a\u8d8b\u5411\u4e8e\u9009\u62e944,100Hz\u3002","title":"Analog to Digital - Sampling a Signal"},{"location":"translate/tp2/#recording-capturing-the-sound","text":"\u5f55\u97f3-\u6355\u83b7\u58f0\u97f3 \u8bb0\u5f55\u5df2\u7ecf\u88ab\u91c7\u6837\u7684\u97f3\u9891\u4fe1\u53f7\u5f88\u5bb9\u6613\u3002\u56e0\u4e3a\u73b0\u4ee3\u58f0\u5361\u5df2\u7ecf\u6709\u4e86\u6a21\u6570\u8f6c\u6362\u5668\uff0c\u53ea\u9700\u8981\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u627e\u5230\u4e00\u4e2a\u5408\u9002\u5e93\uff0c\u8bbe\u7f6e\u91c7\u6837\u7387\u3001\u901a\u9053\u6570\u91cf\uff08\u901a\u5e38\u662f\u5355\u58f0\u9053\u6216\u7acb\u4f53\u58f0\uff09\uff0c\u91c7\u6837\u5927\u5c0f\uff08\u6bd4\u598216\u4f4d\u91c7\u6837\uff09\u3002\u7136\u540e\u50cf\u6253\u5f00\u4efb\u4f55\u8f93\u5165\u6d41\u4e00\u6837\u4ece\u58f0\u5361\u8bfb\u5165\u884c\u5199\u5165\u5230\u5b57\u8282\u6570\u7ec4\u4e2d\u3002\u4e0b\u9762\u6709\u4e00\u6bb5Java\u7684\u793a\u4f8b\u4ee3\u7801\uff1a private AudioFormat getFormat () { float sampleRate = 44100 ; int sampleSizeInBits = 16 ; int channels = 1 ; boolean signed = true ; //\u8868\u793a\u6570\u636e\u662f\u5426\u662f\u7b7e\u540d\u7684 boolean bigEndian = true ; //\u8868\u793a\u6570\u636e\u662f\u5426\u662f\u6309\u7167\u5927\u5b57\u8282\u5e8f\u6216\u8005\u5c0f\u5b57\u8282\u5e8f\u5b58\u50a8\u7684 return new AudioFormat ( sampleRate , sampleSizeIntBits , channels , signed , bigEndian ); } final AudioFormat format = getFormat (); //\u6309\u7167\u8bbe\u5b9a\u586b\u5145AudioFormat DataLine . Info info = new DataLine . Info ( TargetDataLine . class , format ); final TargetDataLine line = ( TargetDataLine ) AudioSystem . getLine ( info ); line . open ( format ); line . start ; \u53ea\u9700\u8981\u4eceTargetDateLined\u4e2d\u8bfb\u53d6\u6570\u636e\u5373\u53ef\u3002\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0crunning\u7684\u6807\u5fd7\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u88ab\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u505c\u6b62-\u4f8b\u5982\uff0c\u6211\u4eec\u6709\u5e26\u6709GUI\u7684STOP\u6309\u94ae\u3002\uff09 OutputStream out = new ByteArrayOutputStream (); running = true ; try { while ( running ) { int count = line . read ( buffer , 0 , buffer . length ); if ( count > 0 ) { out . write ( buffer , 0 , count ); } } out . close (); } catch ( IOException e ) { System . err . println ( \"I/O problems: \" + e ); System . exit ( - 1 ); } *\u4e00\u822c\u60c5\u51b5\u4e0b\u53ef\u4ee5\u6839\u636eRead\u7684\u5b57\u8282\u957f\u5ea6\u6765\u5224\u65ad\u662f\u5426\u5199\u5165\u5230buffer\u4e2d\u3002","title":"Recording - Capturing the Sound"},{"location":"translate/tp2/#time-domain-and-frequency-domain","text":"\u65f6\u57df\u548c\u9891\u57df \u8fd9\u4e2a\u5b57\u8282\u6570\u7ec4\u4e2d\u6709\u8bb0\u5f55\u5728\u65f6\u57df\u4e2d\u7684\u4fe1\u53f7\u3002\u65f6\u57df\uff08Time-Domain\uff09\u4fe1\u53f7\u8868\u793a\u7684\u662f\u4fe1\u53f7\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5e45\u5ea6\u3002 \u5728\u5341\u4e5d\u4e16\u7eaa\u65e9\u671f\uff0cJean-Baptiste Joseph Fourier\u53d1\u73b0\uff0c\u4efb\u4f55\u65f6\u57df\u4e2d\u7684\u4fe1\u53f7\u90fd\u7b49\u4ef7\u4e8e\u4e00\u4e9b\u7b80\u5355\u7684\u6b63\u5f26\u4fe1\u53f7\uff08\u53ef\u80fd\u662f\u65e0\u9650\u4e2a\uff09\u7684\u548c\uff0c\u7ed9\u5b9a\u6bcf\u4e2a\u5206\u91cf\u7684\u6b63\u5f26\u6ce2\u90fd\u6709\u7279\u5b9a\u7684\u9891\u7387\u3001\u632f\u5e45\u548c\u76f8\u4f4d\u3002\u5408\u5728\u4e00\u8d77\u5f62\u6210\u7684\u539f\u59cb\u65f6\u57df\u4fe1\u53f7\u7684\u6b63\u5f26\u6ce2\u5e8f\u5217\u88ab\u79f0\u4e3a\u4e86\u5085\u91cc\u53f6\u7ea7\u6570\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u8981\u7ed9\u51fa\u7ec4\u6210\u4fe1\u53f7\u7684\u6b63\u5f26\u6ce2\u6240\u5bf9\u5e94\u7684\u9891\u7387\u3001\u76f8\u4f4d\u548c\u632f\u5e45\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u65f6\u57df\u7684\u4fe1\u53f7\u3002\u8fd9\u79cd\u4fe1\u53f7\u7684\u8868\u793a\u65b9\u6cd5\u88ab\u79f0\u4e3a\u4e86\u9891\u57df\uff08Frequency-Domain\uff09\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u9891\u57df\u4f5c\u4e3a\u65f6\u57df\u4fe1\u53f7\u7684\u6307\u7eb9\u6216\u8005\u7b7e\u540d\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u63d0\u4f9b\u4e86\u52a8\u6001\u4fe1\u53f7\u7684\u9759\u6001\u8868\u793a\u3002 Time Domain & Frequency Domain \u4e0b\u9762\u7684GIF\u52a8\u753b\u6f14\u793a\u4e861Hz\u65b9\u6ce2\u7684\u5085\u91cc\u53f6\u7ea7\u6570\uff0c\u4ee5\u53ca\u5982\u4f55\u4ece\u6b63\u5f26\u5206\u91cf\u4e2d\u4ea7\u751f\uff08\u8fd1\u4f3c\uff09\u65b9\u6ce2\u3002\u4fe1\u53f7\u663e\u793a\u5728\u4e0a\u9762\u7684\u65f6\u57df\u4e2d\uff0c\u9891\u57df\u663e\u793a\u5728\u4e0b\u9762\u7684\u56fe\u50cf\u4e2d\u3002 1Hz Square Wave \u5728\u9891\u57df\u4e2d\u5206\u6790\u4fe1\u53f7\u53ef\u4ee5\u6781\u5927\u7684\u7b80\u5316\u8bb8\u591a\u4e8b\u60c5\u3002\u5728\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u9886\u57df\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u52a0\u7684\u7b80\u4fbf\uff0c\u56e0\u4e3a\u5de5\u7a0b\u5e08\u4eec\u53ef\u4ee5\u89c1\u5c31\u9891\u8c31\uff0c\u5e76\u786e\u5b9a\u54ea\u4e9b\u9891\u7387\u662f\u5b58\u5728\u7684\uff0c\u54ea\u4e9b\u9891\u7387\u662f\u7f3a\u5931\u7684\u3002\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u505a\u8fc7\u6ee4\uff0c\u589e\u52a0\u6216\u8005\u51cf\u5c11\u4e00\u4e9b\u9891\u7387\uff0c\u6216\u8005\u4ece\u7ed9\u5b9a\u7684\u9891\u7387\u4e2d\u8bc6\u522b\u786e\u5207\u7684\u97f3\u8c03\u3002","title":"Time-Domain and Frequency-Domain"},{"location":"translate/tp2/#the-discrete-fourier-transform","text":"\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u5316 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u6211\u4eec\u7684\u4fe1\u53f7\u4ece\u65f6\u57df\u8f6c\u5230\u9891\u57df\u4e2d\u6765\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362 ^2 ^2 \uff08DFT\uff0cDiscrete Fourier Transform\uff09\u3002 DFT\u662f\u4e00\u79cd\u7528\u4e8e\u5bf9\u79bb\u6563\uff08\u91c7\u6837\uff09\u4fe1\u53f7\u6267\u884c\u5085\u7acb\u53f6\u5206\u6790\u7684\u6570\u5b66\u65b9\u6cd5\u3002\u901a\u8fc7\u8003\u8651\u8fd9\u4e9b\u6b63\u5f26\u6ce2\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u91c7\u6837\u7387\uff0c\u4ed6\u5c06\u7531\u4e00\u4e2a\u51fd\u6570\u7684\u7b49\u8ddd\u91c7\u6837\u5217\u8868\uff0c\u8f6c\u6362\u6210\u4e86\u4e00\u4e2a\u6309\u7167\u9891\u7387\u6392\u5217\u7684\u6709\u9650\u7ec4\u5408\u7684\u6b63\u5f26\u66f2\u7ebf\u7684\u7cfb\u6570\u5217\u8868\u3002 \u8ba1\u7b97DFT\u7684\u6700\u6d41\u884c\u7684\u6570\u503c\u7b97\u6cd5\u4e4b\u4e00\uff0c\u5c31\u662f\u5feb\u901f\u5085\u7acb\u53f6\u53d8\u6362 ^3 ^3 \uff08FFT\uff0cFast Fourier Transform\uff09\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6700\u5e38\u7528\u7684FFT\u7b97\u6cd5\u662fCooley-Tukey\u7b97\u6cd5\u3002\u8fd9\u662f\u4e00\u79cd\u5206\u6cbb\u7b97\u6cd5\uff0c\u9012\u5f52\u7684\u5c06DFT\u5206\u89e3\u6210\u8bb8\u591a\u5c0f\u7684DFT\u8fdb\u884c\u8ba1\u7b97\u3002\u76f4\u63a5\u8ba1\u7b97DFT\u4f1a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n^2) O(n^2) \uff0c\u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230\u4e86 O(n log n) O(n log n) \u3002 \u627e\u5230\u4e00\u4e2a\u5408\u9002FFT\u5e93\u5e76\u4e0d\u96be\uff0c\u4e00\u4e0b\u5217\u4e3e\u4e86\u51e0\u4e2a\uff1a C - FFTW C++ - Eigen FFT Java - JTransform Python - NumPy Ruby - Ruby-FFTW3(Interface to FFTW) \u4e0b\u9762\u662f\u4e00\u4e2a\u7528Java\u7f16\u5199\u7684FFT\u51fd\u6570\u7684\u4f8b\u5b50\u3002\uff08FFT\u91c7\u7528\u590d\u6570\u4f5c\u4e3a\u8f93\u5165\u3002\u8981\u7406\u89e3\u590d\u6570\u548c\u4e09\u89d2\u51fd\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5efa\u8bae\u9605\u8bfb\u6b27\u62c9\u516c\u5f0f ^4 ^4 \uff09 public static Complex [] fft ( Complex [] x ) { int N = x . length ; // fft \u5076\u6570\u9879 Complex [] even = new Complex [ N / 2 ] ; for ( int k = 0 ; k < N / 2 ; k ++ ) { even [ k ] = x [ 2 * k ] ; } Complex [] q = fft ( even ); // fft \u5947\u6570\u9879 Complex [] odd = even ; // reuse the array for ( int k = 0 ; k < N / 2 ; k ++ ) { odd [ k ] = x [ 2 * k + 1 ] ; } Complex [] r = fft ( odd ); // \u5408\u5e76 Complex [] y = new Complex [ N ] ; for ( int k = 0 ; k < N / 2 ; k ++ ) { double kth = - 2 * k * Math . PI / N ; Complex wk = new Complex ( Math . cos ( kth ), Math . sin ( kth )); y [ k ] = q [ k ] . plus ( wk . times ( r [ k ] )); y [ k + N / 2 ] = q [ k ] . minus ( wk . times ( r [ k ] )); } return y ; } \u4e0b\u9762\u662f\u4e00\u4e2a\u4fe1\u53f7\u5728FFT\u5206\u6790\u524d\u540e\u7684\u6837\u5b50\uff1a before & after of FFT","title":"The Discrete Fourier Transform"},{"location":"translate/tp2/#music-recognition-fingerprinting-a-song","text":"\u97f3\u4e50\u8bc6\u522b\uff1a\u901a\u8fc7\u58f0\u7eb9\u8bc6\u522b\u4e00\u9996\u6b4c \u4e00\u4e2a\u4f7f\u7528FFT\u7684\u526f\u4f5c\u7528\u662f\u6211\u4eec\u4e22\u5931\u4e86\u5927\u91cf\u5173\u4e8e\u65f6\u95f4\u7ef4\u5ea6\u7684\u4fe1\u606f\u3002\uff08\u5c3d\u7ba1\u7406\u8bba\u4e0a\u662f\u53ef\u4ee5\u907f\u514d\u7684\uff0c\u4f46\u662f\u6027\u80fd\u5f00\u9500\u662f\u5de8\u5927\u7684\u3002\uff09\u5bf9\u4e8e\u4e00\u9996\u4e09\u5206\u949f\u7684\u6b4c\u66f2\uff0c\u6211\u4eec\u770b\u89c1\u4e86\u4ed6\u4eec\u6240\u6709\u7684\u9891\u7387\uff0c\u548c\u5b83\u4eec\u7684\u5927\u5c0f\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u4eec\u662f\u4ec0\u4e48\u65f6\u5019\u51fa\u73b0\u5728\u6b4c\u66f2\u4e2d\u7684\u3002\u4f46\u662f\u8fd9\u4e2a\u5173\u952e\u4fe1\u606f\uff08\u51fa\u73b0\u9891\u7387\u7684\u65f6\u95f4\u70b9\uff09\u624d\u4f7f\u5f97\u8fd9\u9996\u6b4c\u6210\u4e3a\u4e86\u8fd9\u9996\u6b4c\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u9700\u8981\u6bcf\u4e2a\u9891\u7387\u51fa\u73b0\u7684\u65f6\u95f4\u70b9\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u5f15\u5165\u6ed1\u52a8\u7a97\u53e3\uff08sliding window\uff09\uff0c\u6216\u8005\u8bf4\u6570\u636e\u5757\uff08chunk of data\uff09\uff0c\u53ea\u8f6c\u6362\u4e00\u90e8\u5206\u4fe1\u606f\u3002\u6bcf\u4e2a\u5feb\u7684\u5927\u5c0f\u53ef\u4ee5\u7528\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u786e\u5b9a\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u7528\u7acb\u4f53\u58f0\uff0c16-bit\u91c7\u6837\u572844.1kHz\u5f55\u5236\u58f0\u97f3\uff0c\u8fd9\u79cd\u58f0\u97f3\u7684\u4e00\u79d2\u949f\u662f 44,100 samples*2 bytes * 2channels \\approx176kB 44,100 samples*2 bytes * 2channels \\approx176kB \u3002\u5982\u679c\u6211\u4eec\u9009\u62e94kB\u4f5c\u4e3a\u5757\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u79d2\u5c06\u670944\u4e2a\u6570\u636e\u5757\u8fdb\u884c\u5206\u6790\u3002\u8fd9\u4e2a\u7c92\u5ea6\u8db3\u591f\u7528\u6765\u8fdb\u884c\u97f3\u9891\u8bc6\u522b\u6240\u9700\u7684\u8be6\u7ec6\u5206\u6790\u3002 \u73b0\u5728\u56de\u5230\u7f16\u7a0b\uff0c\u8fd8\u662fJava\uff1a byte audio [] = out . toByteArray () int totalSize = audio . length int sampledChunkSize = totalSize / chunkSize ; Complex [][] result = ComplexMatrix [ sampledChunkSize ][] ; for ( int j = 0 ; i < sampledChunkSize ; j ++ ) { Complex [ chunkSize ] complexArray ; for ( int i = 0 ; i < chunkSize ; i ++ ) { // \u8fd9\u91cc\u5c06\u6837\u672c\u5757\u653e\u5165\u5230\u865a\u90e8\u4e3a0\u7684\u590d\u6570\u4e2d complexArray [ i ] = Complex ( audio [ ( j * chunkSize ) + i ] , 0 ); } result [ j ] = FFT . fft ( complexArray ); } \u5728for\u5faa\u73af\u5185\u90e8\uff0c\u6211\u4eec\u5c06\u65f6\u57df\u6570\u636e\uff08the samples\uff0c\u91c7\u6837\uff09\u653e\u5165\u5230\u4e00\u4e2a\u865a\u90e8\u4e3a0\u7684\u590d\u6570\u4e2d\u3002\u5728\u5916\u90e8\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u8fed\u4ee3\u4fbf\u5229\u6240\u6709\u7684\u5757\u5bf9\u6bcf\u4e00\u4e2a\u8fdb\u884cFFT\u5206\u6790\u3002 \u4e00\u65e6\u6211\u4eec\u638c\u63e1\u4e86\u4fe1\u53f7\u9891\u7387\u7684\u7ec4\u6210\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5f62\u6210\u6b4c\u66f2\u7684\u6570\u5b57\u6307\u7eb9\u3002\u8fd9\u662f\u6574\u4e2aShazam\u97f3\u9891\u8bc6\u522b\u8fc7\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u90a3\u90e8\u5206\u3002\u8fd9\u91cc\u7684\u4e3b\u8981\u6311\u6218\u662f\u5728\u5df2\u7ecf\u6355\u83b7\u7684\u9891\u7387\u6d77\u6d0b\u91cc\u53bb\u533a\u5206\uff0c\u54ea\u4e9b\u9891\u7387\u662f\u6700\u91cd\u8981\u7684\u3002\u76f4\u89c2\u5730\uff0c\u6211\u4eec\u641c\u7d22\u5177\u6709\u6700\u9ad8\u5e45\u5ea6\uff08\u5cf0\u503c\uff09\u7684\u9891\u7387\u3002 \u7136\u800c\u5728\u4e00\u9996\u6b4c\u4e2d\uff0c\u6700\u5f3a\u7684\u9891\u7387\u8303\u56f4\u53ef\u80fd\u5728\u4f4e\u97f3 C-C_1 C-C_1 \uff0832.70Hz\uff09\u548c\u9ad8\u97f3 C-C_8 C-C_8 \uff084186.01Hz\uff09\u4e4b\u95f4\u53d8\u5316\u3002\u8fd9\u8986\u76d6\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u8303\u56f4\u3002\u56e0\u6b64\uff0c\u9884\u671f\u4e00\u6b21\u6027\u5206\u6790\u5b8c\u6574\u4e2a\u9891\u7387\u7684\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u51e0\u4e2a\u8f83\u5c0f\u7684\u8303\u56f4\uff0c\u8fd9\u4e9b\u8303\u56f4\u662f\u6839\u636e\u91cd\u8981\u97f3\u4e50\u6210\u5206\u7684\u5171\u540c\u9891\u9009\u62e9\u7684\uff0c\u5e76\u5206\u522b\u8fdb\u884c\u5206\u6790\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9this guy ^5 ^5 \u4e3a\u5b9e\u73b0Shazam\u7684\u7b97\u6cd5\u6240\u9009\u62e9\u7684\u65f6\u95f4\u95f4\u9694\u3002\u8fd9\u4e9b\u95f4\u9694\u662f30Hz-40Hz\uff0c40Hz-80Hz\u548c80Hz-120Hz\u4e3a\u4f4e\u97f3(\u5305\u62ec\u4f4e\u97f3\u5409\u4ed6) \uff0c\u548c120Hz-180Hz\u548c180Hz-300Hz\u4e3a\u4e2d\u7b49\u548c\u9ad8\u97f3(\u5305\u62ec\u4eba\u58f0\u548c\u5927\u591a\u6570\u5176\u4ed6\u4e50\u5668)\u3002 \u73b0\u5728\u5728\u6bcf\u4e2a\u65f6\u95f4\u95f4\u9694\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u8bc6\u522b\u51fa\u5cf0\u503c\u7684\u9891\u7387\u3002\u8fd9\u4e9b\u4fe1\u606f\u5f62\u6210\u4e86\u6b4c\u66f2\u8fd9\u4e00\u6570\u636e\u5757\u7684\u7b7e\u540d\uff0c\u800c\u8fd9\u4e9b\u7b7e\u540d\u6210\u4e3a\u4e86\u6574\u9996\u6b4c\u66f2\u58f0\u7eb9\u7684\u4e00\u90e8\u5206\u3002 public final int [] RANGE = new int [] { 40 , 80 , 120 , 180 , 300 }; // \u83b7\u53d6\u9891\u7387\u6240\u5728\u8303\u56f4 public int getIndex ( int freq ) { int i = 0 ; while ( RANGE [ i ] < freq ) i ++ ; return i ; } // result is complex matrix obtained in previous step // \u7ed3\u679c\u662f\u4e0a\u4e00\u6b65\u6240\u83b7\u53d6\u7684\u590d\u6570\u77e9\u9635\uff08\u4e0a\u4e00\u4e2a\u4ee3\u7801\u5757\u2b06\ufe0f\uff09 for ( int t = 0 ; t < result . length ; t ++ ) { for ( int freq = 40 ; freq < 300 ; freq ++ ) { // \u83b7\u53d6\u5e45\u5ea6 double mag = Math . log ( results [ t ][ freq ] . abs () + 1 ); // \u83b7\u53d6\u9891\u7387\u6240\u5728\u8303\u56f4 int index = getIndex ( freq ); // \u4fdd\u5b58\u6700\u9ad8\u7684\u5e45\u5ea6\u548c\u5bf9\u5e94\u7684\u9891\u7387: if ( mag > highscores [ t ][ index ] ) { points [ t ][ index ] = freq ; } } // \u5f62\u6210hash tag long h = hash ( points [ t ][ 0 ] , points [ t ][ 1 ] , points [ t ][ 2 ] , points [ t ][ 3 ] ); } private static final int FUZ_FACTOR = 2 ; private long hash ( long p1 , long p2 , long p3 , long p4 ) { return ( p4 - ( p4 % FUZ_FACTOR )) * 100000000 + ( p3 - ( p3 % FUZ_FACTOR )) * 100000 + ( p2 - ( p2 % FUZ_FACTOR )) * 100 + ( p1 - ( p1 % FUZ_FACTOR )); } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u5047\u5b9a\u5f55\u97f3\u4e0d\u662f\u5728\u5b8c\u7f8e\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u5305\u542b\u6a21\u7cca\u56e0\u5b50\uff08fuzz factor\uff09\u3002\u6a21\u7cca\u56e0\u5b50\u7684\u5206\u6790\u5728\u4e00\u4e2a\u771f\u5b9e\u7684\u7cfb\u7edf\u4e2d\u5fc5\u987b\u88ab\u91cd\u89c6\u5230\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6709\u4e00\u4e2a\u6839\u636e\u8bb0\u5f55\u6761\u4ef6\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u7684\u9009\u9879\u3002 \u4e3a\u4e86\u65b9\u4fbf\u641c\u7d22\uff0c\u8fd9\u4e2a\u7b7e\u540d\u6210\u4e3a\u4e86hash\u8868\u4e2d\u7684key\u3002\u5bf9\u5e94\u7684value\u5219\u662f\u51fa\u73b0\u8fd9\u7ec4\u9891\u7387\u5728\u6b4c\u66f2\u4e2d\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u6b4c\u66f2\u7684ID\u548c\u6b4c\u624b\u3002\u4e0b\u9762\u662f\u8fd9\u4e9b\u6b4c\u66f2\u5982\u4f55\u8bb0\u5f55\u51fa\u73b0\u5728\u6570\u636e\u5e93\u4e2d\u7684\u793a\u4f8b\u3002 \\begin{array}{|c|c|c|}\\hline Hash\\ Tag&Time\\ in\\ Seconds&Song\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&53.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 33\\ 56\\ 92\\ 151\\ 185&12.32&Song\\ B\\ by\\ artist\\ B\\\\\\hline 39\\ 26\\ 89\\ 141\\ 251&15.34&Song\\ C\\ by\\ artist\\ C\\\\\\hline 32\\ 67\\ 100\\ 128\\ 270&78.43&Song\\ D\\ by\\ artist\\ D\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&10.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline 34\\ 57\\ 95\\ 111\\ 200&54.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 34\\ 41\\ 93\\ 161\\ 202&11.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline \\end{array} \\begin{array}{|c|c|c|}\\hline Hash\\ Tag&Time\\ in\\ Seconds&Song\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&53.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 33\\ 56\\ 92\\ 151\\ 185&12.32&Song\\ B\\ by\\ artist\\ B\\\\\\hline 39\\ 26\\ 89\\ 141\\ 251&15.34&Song\\ C\\ by\\ artist\\ C\\\\\\hline 32\\ 67\\ 100\\ 128\\ 270&78.43&Song\\ D\\ by\\ artist\\ D\\\\\\hline 30\\ 51\\ 99\\ 121\\ 195&10.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline 34\\ 57\\ 95\\ 111\\ 200&54.52&Song\\ A\\ by\\ artist\\ A\\\\\\hline 34\\ 41\\ 93\\ 161\\ 202&11.89&Song\\ E\\ by\\ artist\\ E\\\\\\hline \\end{array} \u5982\u679c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u97f3\u4e50\u8bc6\u522b\u8fc7\u7a0b\u8fd0\u884c\u4e00\u4e2a\u5b8c\u6574\u7684\u6b4c\u66f2\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5305\u62ec\u4e86\uff0c \u6bcf\u9996\u6b4c\u66f2\u7684\u5b8c\u6574\u58f0\u7eb9\u3002","title":"Music Recognition: Fingerprinting a Song"},{"location":"translate/tp2/#the-music-algorithm-song-identification","text":"\u97f3\u4e50\u7b97\u6cd5\uff1a\u6b4c\u66f2\u8bc6\u522b \u4e3a\u4e86\u8bc6\u522b\u5f53\u524d\u5728\u4ff1\u4e50\u90e8\u64ad\u653e\u7684\u6b4c\uff0c\u6211\u4eec\u7528\u624b\u673a\u5f55\u5236\u4e86\u8fd9\u9996\u6b4c\uff0c\u7136\u540e\u50cf\u4e0a\u9762\u4e00\u6837\u901a\u8fc7\u76f8\u540c\u7684\u58f0\u7eb9\u8bc6\u522b\u7a0b\u5e8f\u8fdb\u884c\u5904\u7406\u3002\u63a5\u7740\uff0c\u6211\u4eec\u5728\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u5339\u914d\u7684hash\u6807\u7b7e\u3002 \u78b0\u5de7\uff0c\u8bb8\u591ahash\u6807\u7b7e\u5c06\u5bf9\u5e94\u7740\u591a\u9996\u6b4c\u7684\u97f3\u4e50\u6807\u5fd7\u7b26\u3002\u4f8b\u5982\uff0c\u67d0\u4e00\u9996\u6b4c\u7684a\u7684\u67d0\u4e00\u6bb5\u542c\u8d77\u6765\u5c31\u50cf\u662f\u6b4c\u66f2e\u7684\u67d0\u4e00\u6bb5\u3002\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\uff0c\u56e0\u4e3a\u97f3\u4e50\u5bb6\u4eec\u603b\u662f\u4f1a\u5f7c\u6b64\u201c\u501f\u9274\u201c\u4e00\u4e9blicks\u548criffs\uff0c\u800c\u4e14\u73b0\u5728\u6709\u7684\u5236\u4f5c\u4eba\u4f1a\u4ece\u522b\u7684\u6b4c\u66f2\u4e2d\u91c7\u6837\u3002\u6bcf\u6b21\u6211\u4eec\u5339\u914d\u4e00\u4e2ahash \u6807\u7b7e\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u5339\u914d\u7684\u6570\u91cf\u5c31\u4f1a\u53d8\u5f97\u66f4\u5c11\uff0c\u4f46\u662f\u8fd9\u4e2a\u4fe1\u606f\u672c\u7701\u53ef\u80fd\u4e0d\u4f1a\u5c06\u5339\u914d\u8303\u56f4\u7f29\u5c0f\u5230\u4e00\u9996\u6b4c\u4e2d\u3002\u6240\u4ee5\u8fd8\u6709\u4e00\u4ef6\u4e8b\u60c5\u9700\u8981\u53bb\u68c0\u67e5\u6211\u4eec\u7684\u8bc6\u522b\u7b97\u6cd5\uff0c\u5c31\u662f\u65f6\u95f4\u3002 \u6211\u4eec\u5728\u4ff1\u4e50\u90e8\u4e2d\u8bb0\u5f55\u7684\u6b4c\u66f2\u6837\u672c\u53ef\u80fd\u6765\u81ea\u4e8e\u97f3\u4e50\u7684\u4efb\u4f55\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u5c06\u5339\u914d\u7684Hash\u7684\u65f6\u95f4\u6233\u548c\u6837\u672c\u7684\u65f6\u95f4\u6233\u8fdb\u884c\u914d\u5bf9\u3002\u7136\u800c\uff0c\u4f7f\u7528\u591a\u4e2ahash\u8fdb\u884c\u5339\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u51fa\u76f8\u5bf9\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u589e\u52a0\u786e\u5b9a\u6027\u3002 \u4f8b\u5982\u4f60\u770b\u4e0a\u9762\u7684\u8868\u683c\uff0c\u4f60\u4f1a\u53d1\u73b0hash\u6807\u7b7e\u4e3a30 51 99 121 195\u5206\u522b\u5bf9\u5e94\u7684\u662fSong A\u548cSong E\u3002\u5982\u679c\u4e00\u79d2\u540e\uff0c\u6211\u4eec\u5339\u914d\u5230\u7684hash\u662f34 57 95 111 200\uff0c\u90a3\u66f4\u52a0\u7684\u5339\u914dSong A\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u77e5\u9053hash\u548c\u65f6\u95f4\u5dee\u90fd\u5339\u914d\u3002 // Class that represents specific moment in a song // \u4ee3\u8868\u4e86\u6b4c\u66f2\u7279\u5b9a\u65f6\u523b\u7684\u7c7b private class DataPoint { private int time ; private int songId ; public DataPoint ( int songId , int time ) { this . songId = songId ; this . time = time ; } public int getTime () { return time ; } public int getSongId () { return songId ; } } \u6211\u4eec\u5c06 i_1 i_1 \u548c i_2 i_2 \u4f5c\u4e3a\u5f55\u5236\u6b4c\u66f2\u4e2d\u7684\u65f6\u523b\uff0c j_1 j_1 \u548c j_2 j_2 \u4f5c\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u65f6\u523b\u3002\u6211\u4eec\u53ef\u8bf4\u6211\u4eec\u6709\u4e24\u4e2a\u65f6\u95f4\u5dee\u7684\u5339\u914d\uff1a RecordedHash(i_1) = SongInDataBaseHash(j_1) \\\\ \\&\\& \\\\ RecordedHash(i_2) = SongInDataBaseHash(j_2) RecordedHash(i_1) = SongInDataBaseHash(j_1) \\\\ \\&\\& \\\\ RecordedHash(i_2) = SongInDataBaseHash(j_2) \\\\ abs(i_1-i_2)=abs(j_1-j_2) \\\\ abs(i_1-i_2)=abs(j_1-j_2) \u8fd9\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u7075\u6d3b\u7684\u4ece\u5934\uff0c\u4e2d\u95f4\uff0c\u6216\u8005\u7ed3\u5c3e\u5f55\u5236\u6b4c\u66f2\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5728\u4ff1\u4e50\u90e8\u5f55\u5236\u7684\u6b4c\u66f2\u5728\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\u90fd\u4e0d\u53ef\u80fd\u8ddf\u6211\u4eec\u5728\u56fe\u4e66\u9986\u5f55\u5236\u7684\u4e00\u9996\u6b4c\u7684\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u65f6\u523b\u76f8\u5339\u914d\u3002\u5f55\u97f3\u4f1a\u5305\u542b\u5f88\u591a\u566a\u97f3\uff0c\u8fd9\u4e9b\u566a\u97f3\u4f1a\u5728\u5339\u914d\u4e2d\u5f15\u5165\u4e00\u4e9b\u9519\u8bef\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u6ca1\u6709\u8bd5\u56fe\u53bb\u4ece\u5339\u914d\u5217\u8868\u4e2d\u79fb\u9664\uff0c\u9664\u4e86\u6b63\u786e\u6b4c\u66f2\u4ee5\u5916\u7684\u6240\u6709\u6b4c\u66f2\uff0c\u800c\u662f\u5728\u6700\u540e\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5339\u914d\u7684\u6b4c\u66f2\u6309\u7167\u53ef\u80fd\u6027\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u9700\u8981\u8fd4\u56de\u7684\u5219\u662f\u6392\u540d\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6b4c\u66f2\u3002","title":"The Music Algorithm: Song Identification"},{"location":"translate/tp2/#from-top-to-bottom","text":"\u81ea\u9876\u5411\u4e0b \u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u201cHow does Shazam work?\u201d\u4e0b\u9762\u5219\u662f\u6574\u4e2a\u97f3\u4e50\u8bc6\u522b\u548c\u5339\u914d\u8fc7\u7a0b\u7684\u6982\u8ff0\uff0c\u81ea\u9876\u5411\u4e0b\uff1a Processing Pipeline of Shazam \u5bf9\u4e8e\u8fd9\u79cd\u7cfb\u7edf\u6765\u8bf4\uff0c\u6570\u636e\u5e93\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u5e9e\u5927\uff0c\u56e0\u6b64\u4f7f\u7528\u4e00\u79cd\u53ef\u4f38\u7f29\u7684\u6570\u636e\u5e93\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u5b83\u4e0d\u9700\u8981\u5173\u7cfb\uff0c\u800c\u4e14\u6570\u636e\u6a21\u578b\u4e5f\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u4f7f\u7528\u4e00\u79cdNo SQL\u6570\u636e\u5e93\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002","title":"From Top to Bottom"},{"location":"translate/tp2/#how-does-shazam-work-now-you-know","text":"\u73b0\u5728\u4f60\u77e5\u9053\u4e86 \u8fd9\u79cd\u6b4c\u66f2\u8bc6\u522b\u8f6f\u4ef6\u53ef\u4ee5\u7528\u6765\u5bfb\u627e\u6b4c\u66f2\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u73b0\u5728\u4f60\u5df2\u7ecf\u4e86\u89e3\u4e86 Shazam \u7684\u5de5\u4f5c\u539f\u7406\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u9664\u4e86\u64ad\u653e\u51fa\u79df\u8f66\u6536\u97f3\u673a\u64ad\u653e\u7684\u6000\u65e7\u6b4c\u66f2 Shazaming \u4e4b\u5916\uff0c\u5b83\u8fd8\u5177\u6709\u5176\u4ed6\u5e94\u7528\u3002\u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u627e\u5230\u97f3\u4e50\u4e2d\u7684\u6284\u88ad\uff0c\u6216\u8005\u627e\u51fa\u8c01\u662f\u5e03\u9c81\u65af\u3001\u7235\u58eb\u3001\u6447\u6eda\u3001\u6d41\u884c\u97f3\u4e50\u6216\u4efb\u4f55\u5176\u4ed6\u6d41\u6d3e\u5148\u9a71\u7684\u6700\u521d\u7075\u611f\u6765\u6e90\u3002 \u4e5f\u8bb8\u4e00\u4e2a\u597d\u7684\u5b9e\u9a8c\u662f\u7528\u5df4\u8d6b\u3001\u8d1d\u591a\u82ac\u3001\u7ef4\u74e6\u5c14\u7b2c\u3001\u74e6\u683c\u7eb3\u3001\u8096\u90a6\u548c\u83ab\u624e\u7279\u7684\u53e4\u5178\u97f3\u4e50\u586b\u5145\u6b4c\u66f2\u6837\u672c\u6570\u636e\u5e93\uff0c\u8bd5\u7740\u627e\u51fa\u6b4c\u66f2\u4e4b\u95f4\u7684\u76f8\u4f3c\u4e4b\u5904\u3002\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fde\u9c8d\u52c3 \u00b7 \u8fea\u4f26\u3001\u732b\u738b\u548c\u7f57\u4f2f\u7279 \u00b7 \u7ea6\u7ff0\u900a\u90fd\u662f\u527d\u7a83\u8005\uff01 \u4f46\u662f\u6211\u4eec\u4ecd\u7136\u4e0d\u80fd\u7ed9\u4ed6\u4eec\u5b9a\u7f6a\u3002 \u56e0\u4e3a\u97f3\u4e50\u53ea\u662f\u6211\u4eec\u5728\u5934\u8111\u4e2d\u542c\u5230\u3001\u8bb0\u5fc6\u548c\u4e0d\u65ad\u91cd\u590d\u7684\u4e00\u4e2a\u6ce2\uff0c\u5b83\u5728\u8111\u6d77\u4e2d\u8fdb\u5316\u548c\u6f14\u53d8\uff0c\u76f4\u5230\u6211\u4eec\u5f55\u5236\u4e86\u5b83\uff0c\u7136\u540e\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u4f1f\u5927\u7684\u97f3\u4e50\u5929\u624d\u3002 \u8bd1\u5b8c\u8fd9\u7bc7\uff0c\u5176\u5b9e\u5df2\u7ecf\u80fd\u591f\u89e3\u51b3\u6211\u5728\u5de5\u4f5c\u573a\u666f\u4e2d\u9047\u5230\u7684\u95ee\u9898\uff0c\u5bf9\u51e0\u79cd\u5f55\u97f3\u8fdb\u884c\uff0c\u6355\u83b7\uff0c\u8f6c\u6362\u5230\u9891\u57df\uff0c\u8ba1\u7b97\u58f0\u7eb9\uff0c\u7136\u540e\u5339\u914d\u4e24\u4e2a\u65f6\u95f4\u5dee\u3002\u6211\u975e\u5e38\u8ba4\u540c\u6700\u540e\u4e00\u6bb5\u8bdd\uff0c\u8fd9\u6bb5\u672c\u4e0d\u5e94\u8be5\u51fa\u73b0\u5728\u6280\u672f\u6587\u7ae0\u4e2d\u7684\u8bdd\u3002\u7f8e\u597d\u7684\u4e8b\u60c5\u5e94\u8be5\u88ab\u4f20\u9012\u4e0b\u4e00\u4e2a\u4eba\u8111\u6d77\uff0c\u7ed9\u666e\u901a\u4eba\u5e26\u6765\u5feb\u4e50\uff0c\u7ed9\u5929\u624d\u4eec\u521b\u9020\u548c\u53d1\u6325\u7684\u7075\u611f\u3002\u6280\u672f\u4e5f\u662f\uff0c\u5c31\u50cf\u5927\u5bb6\u6240\u4fe1\u5949\u7684\u5f00\u6e90\u7cbe\u795e\u4e00\u6837\uff0c\u5e26\u7ed9\u8fd9\u4e2a\u4e16\u754c\u4ee5\u6539\u53d8\u3002 \u4f5c\u4e3a\u6536\u5c3e\uff0c\u6211\u4f1a\u53bb\u5b9e\u73b0\u4e00\u4e2aGo\u7684Shazam\u7b97\u6cd5\uff0c\u53ef\u80fd\u5df2\u7ecf\u6709\u4e86\u3002\u81f3\u6b64\uff0c\u7ffb\u8bd1\u8ba1\u5212\u7684\u7b2c\u4e09\u7bc7\u5df2\u7ecf\u5b8c\u6210\uff0c\u8ba1\u5212\u4e5f\u8fce\u6765\u4e86\u4e00\u4f4d\u65b0\u7684\u5c0f\u4f19\u4f34\uff0c\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5c06\u662f\u7531\u4ed6\u8fdb\u884c\u9009\u9898\uff0c\u7136\u540e\u5171\u540c\u7ffb\u8bd1\u3002","title":"How Does Shazam Work? Now You Know"},{"location":"translate/tp2/#_1","text":"[1]\u5948\u594e\u65af\u7279-\u9999\u519c\u5b9a\u7406\uff1a https://en.wikipedia.org/wiki/Nyquist\u2013Shannon_sampling_theorem [2]\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\uff1a https://en.wikipedia.org/wiki/Discrete_Fourier_transform [3]Cooley-Tukey\u7b97\u6cd5: https://en.wikipedia.org/wiki/Cooley\u2013Tukey_FFT_algorithm [4]\u6b27\u62c9\u516c\u5f0f\u5b9a\u4e49\u590d\u6570\u4e0b\u4e09\u89d2\u51fd\u6570 \\sin z = \\frac{e^{iz}-e^{-iz}}{2i} \\sin z = \\frac{e^{iz}-e^{-iz}}{2i} \\cos z = \\frac{e^{iz}+e^{-iz}}{2} \\cos z = \\frac{e^{iz}+e^{-iz}}{2} e^{ix}=\\cos x +i \\sin x e^{ix}=\\cos x +i \\sin x e^{-ix}=\\cos x -i \\sin x e^{-ix}=\\cos x -i \\sin x [5]\u7528Java\u5b9e\u73b0Shazam \u7b97\u6cd5\uff1a https://www.royvanrijn.com/blog/2010/06/creating-shazam-in-java/","title":"\u53c2\u8003"},{"location":"translate/tp3/","text":"\u3010\u7ffb\u8bd1\u8ba1\u52123\u3011Handling 1 Million Requests per Minute with Golang Created: Mar 14, 2021 3:41 PM Year: 2017 link: https://medium.com/smsjunk/handling-1-million-requests-per-minute-with-golang-f70ac505fcaa writer: Marcio Castilho \u6807\u7b7e: golang, \u6280\u672f \u3010About Project\u3011\u7ffb\u8bd1\u8ba1\u5212\u662f\u65e8\u5728\u4e8e\u5206\u4eab\u4e00\u4e9b\u5916\u6587\u7684\u6280\u672f\u3001\u6216\u8005\u751f\u6d3b\u5185\u5bb9\u3002\u8fd9\u662f\u672c\u7cfb\u5217\u7684\u7b2c\u4e94\u7bc7\u7ffb\u8bd1\u6587\u7ae0\u3002 \u3010About Article\u3011\u5982\u4f55\u7528Golang\u5904\u7406\u6bcf\u5206\u949f\u767e\u4e07\u7ea7\u7684\u8bf7\u6c42\uff1f\u4e00\u4e2a\u534f\u7a0b\u6c60\uff0c\u5c31\u591f\u4e86\uff01 \u4ee5\u4e0b\u662f\u672c\u6587\u7684\u6b63\u5f0f\u5185\u5bb9\uff1a \u5982\u4f55\u7528golang\u5904\u7406\u767e\u4e07\u8bf7\u6c42 \u6211\u5728\u51e0\u5bb6\u4e0d\u540c\u7684\u516c\u53f8\u4ece\u4e8b\u53d1\u5783\u573e\u90ae\u4ef6\u3001\u53cd\u75c5\u6bd2\u548c\u53cd\u6076\u610f\u8f6f\u4ef6\u5de5\u4f5c\u5df2\u7ecf\u8d85\u8fc715\u5e74\u4e86\u3002\u56e0\u4e3a\u6211\u4eec\u6bcf\u5929\u8981\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u6211\u77e5\u9053\u8fd9\u4e9b\u7cfb\u7edf\u6700\u7ec8\u4f1a\u6709\u591a\u4e48\u590d\u6742\u3002 \u76ee\u524d\uff0c\u6211\u662fsmsjunk.com\u7684\u9996\u5e2d\u6267\u884c\u5b98\u4ee5\u53caKnowBe4\u7684\u9996\u5e2d\u67b6\u6784\u5e08(Chief Architect Officer)\uff0c\u90fd\u662f\u4ece\u4e8b\u7f51\u7edc\u5b89\u5168\u884c\u4e1a\u7684\u516c\u53f8\u3002 \u6709\u8da3\u7684\u662f\uff0c\u5728\u8fc7\u53bb\u5341\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u4f5c\u4e3a\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u6240\u53c2\u4e0e\u7684\u6240\u6709web\u540e\u7aef\u5f00\u53d1\u5927\u90e8\u5206\u90fd\u662f\u7528Ruby on Rails\u5b8c\u6210\u7684\u3002\u4e0d\u8981\u8bef\u4f1a\u6211\u7684\u610f\u601d\uff0c\u6211\u559c\u6b22Ruby on Rails\uff0c\u6211\u76f8\u4fe1\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u73af\u5883\uff0c\u4f46\u662f\u5728\u4f60\u5f00\u59cb\u7528Ruby\u7684\u65b9\u5f0f\u53bb\u601d\u8003\u548c\u8bbe\u8ba1\u7cfb\u7edf\u540e\uff0c\u4f60\u53ef\u80fd\u5fd8\u4e86\u53bb\u4f7f\u7528\u591a\u7ebf\u7a0b\u3001\u5e76\u884c\u5316\u3001\u5feb\u901f\u6267\u884c\u4ee5\u53ca\u5c0f\u7684\u5185\u5b58\u5f00\u9500\u6765\u4f7f\u8f6f\u4ef6\u67b6\u6784\u9ad8\u6548\u548c\u7b80\u5355\u3002\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u662f\u4e00\u540dC/C++\u3001Delphi\u548cC#\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u624d\u5f00\u59cb\u610f\u8bc6\u5230\uff0c\u4f7f\u7528\u5408\u9002\u7684\u5de5\u5177\uff0c\u80fd\u591f\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u3002 \u6211\u4e0d\u662f\u5f88\u7406\u89e3\u4e92\u8054\u7f51\u603b\u662f\u5728\u4e89\u8bba\u5404\u79cd\u8bed\u8a00\u548c\u6846\u67b6\u4f18\u52a3\u3002\u6211\u8ba4\u4e3a\uff0c \u9ad8\u6548\u3001\u751f\u4ea7\u529b\u5f3a\u548c\u4ee3\u7801\u53ef\u7ef4\u62a4\u6027\u4e3b\u8981\u53d6\u51b3\u4e8e\u6784\u5efa\u65b9\u6848\u7684\u7b80\u5355\u7a0b\u5ea6\u3002 \u95ee\u9898\u6240\u5728 The Problem \u5728\u5f00\u53d1\u4e00\u4e2a\u533f\u540d\u7684\u9065\u6d4b\u548c\u5206\u6790\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u80fd\u591f\u5904\u7406\u6765\u81ea\u6570\u767e\u4e07\u4e2aEndpoint\u7684\u5927\u91cfPOST\u8bf7\u6c42\u3002Web handler\u80fd\u6536\u5230\u4e00\u4e2aJSON\u683c\u5f0f\u7684\u6587\u6863\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u6709\u8981\u5199\u5165\u5230Amazon S3\u4e2d\u7684\u6709\u6548\u5185\u5bb9\uff0c\u4ee5\u4fbf\u4e8e\u6211\u4eec\u7684map-reduce\u7cfb\u7edf\u4ee5\u540e\u80fd\u591f\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002 \u4e00\u822c\u60c5\u51b5\uff0c\u6211\u4eec\u4f1a\u8003\u8651\u521b\u5efa\u4e00\u4e2aworker\u5c42\u7ea7\u7684\u67b6\u6784\uff0c\u5229\u7528\u4e00\u4e0b\u7684\u6280\u672f\uff1a Sidekiq Resque Reque DelayedJob Elasticbeanstalk Woker tier RabbitMQ and so on \u2026\u2026 \u8bbe\u7f6e\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u7fa4\uff0c\u4e00\u4e2a\u7528\u4e8eweb\u524d\u7aef\uff0c\u4e00\u4e2a\u7528\u4e8e\u5de5\u4f5c\u8282\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6269\u5927\u6211\u4eec\u540e\u53f0\u7684\u5de5\u4f5c\u91cf\u3002 \u4f46\u662f\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u7684\u56e2\u961f\u5c31\u77e5\u9053\u6211\u4eec\u8981\u7528Go\u8bed\u8a00\u6765\u505a\u4ed6\uff0c\u56e0\u4e3a\u5728\u8ba8\u8bba\u9636\u6bb5\u6211\u4eec\u5df2\u7ecf\u610f\u8bc6\u5230\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6d41\u91cf\u7cfb\u7edf\u3002\u6211\u5df2\u7ecf\u4f7f\u7528\u4e86Go\u4e24\u5e74\u4e86\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5f00\u53d1\u4e86\u4e00\u4e9b\u7cfb\u7edf\uff0c\u4f46\u662f\u6ca1\u6709\u4e00\u4e2a\u53ef\u4ee5\u627f\u8f7d\u8fd9\u4e48\u5927\u7684\u6d41\u91cf\u3002 \u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e9b\u7ed3\u6784\u6765\u5b9a\u4e49Post\u8bf7\u6c42\u8981\u63a5\u53d7\u7684web\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a\u5c06\u5176\u4e0a\u4f20\u5230\u6211\u4eecS3 bucket\u7684\u65b9\u6cd5\u3002 type PayloadCollection struct { WindowsVersion string `json:\"version\"` Token string `json:\"token\"` Payloads [] Payload `json:\"data\"` } type Payload struct { // [redacted] } func ( p * Payload ) UploadToS3 () error { // the storageFolder method ensures that there are no name collision in // case we get same timestamp in the key name storage_path := fmt . Sprintf ( \"%v/%v\" , p . storageFolder , time . Now (). UnixNano ()) bucket := S3Bucket b := new ( bytes . Buffer ) encodeErr := json . NewEncoder ( b ). Encode ( payload ) if encodeErr != nil { return encodeErr } // Everything we post to the S3 bucket should be marked 'private' var acl = s3 . Private var contentType = \"application/octet-stream\" return bucket . PutReader ( storage_path , b , int64 ( b . Len ()), contentType , acl , s3 . Options {}) } \u539f\u751f\u65b9\u6cd5\u4f7f\u7528Go routines Native approach to Go routines \u6700\u521d\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684POST\u5904\u7406\u7a0b\u5e8f\u5b9e\u73b0\u4e86\uff0c\u53ea\u662f\u8bd5\u56fe\u5c06\u4efb\u52a1\u5e76\u884c\u5316\u7684\u4e00\u4e2a\u7b80\u5355goroutine\uff1a func payloadHandler ( w http . ResponseWriter , r * http . Request ) { if r . Method != \"POST\" { w . WriteHeader ( http . StatusMethodNotAllowed ) return } // Read the body into a string for json decoding var content = & PayloadCollection {} err := json . NewDecoder ( io . LimitReader ( r . Body , MaxLength )). Decode ( & content ) if err != nil { w . Header (). Set ( \"Content-Type\" , \"application/json; charset=UTF-8\" ) w . WriteHeader ( http . StatusBadRequest ) return } // Go through each payload and queue items individually to be posted to S3 for _ , payload := range content . Payloads { go payload . UploadToS3 () // <----- DON'T DO THIS } w . WriteHeader ( http . StatusOK ) } \u5bf9\u4e8e\u4e2d\u7b49\u6e29\u548c\u7684\u8d1f\u8f7d\uff0c\u8fd9\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\u662f\u53ef\u884c\u7684\uff0c\u4f46\u662f\u8fd9\u5f88\u5feb\u88ab\u8bc1\u660e\u5728\u5927\u89c4\u6a21\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\u4e0d\u662f\u5f88\u597d\u3002\u6211\u4eec\u9884\u6599\u5230\u6709\u5f88\u591a\u8bf7\u6c42\uff0c\u4f46\u662f\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u7248\u672c\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u65f6\uff0c\u6570\u91cf\u5e76\u6ca1\u6709\u8fbe\u5230\u6211\u4eec\u5f00\u59cb\u540e\u770b\u5230\u7684\u6570\u91cf\u7ea7\u3002\u6211\u4eec\u5b8c\u5168\u4f4e\u4f30\u4e86\u8bf7\u6c42\u91cf\u3002 \u4e0a\u4e70\u5462\u65b9\u6cd5\u5728\u51e0\u4e2a\u4e0d\u540c\u7684\u65b9\u9762\u90fd\u5f88\u7cdf\u7cd5\uff0c\u6211\u4eec\u5b8c\u5168\u6ca1\u6709\u529e\u6cd5\u63a7\u5236\u6211\u4eec\u4ea7\u751f\u4e86\u591a\u5c11\u4e2aGo routines\u3002\u6240\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u5f88\u5feb\u5c31\u5d29\u6e83\u4e86\u3002 \u518d\u8bd5\u4e00\u6b21Trying again \u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u56e0\u4e3a\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u8ba8\u8bba\u5982\u4f55\u4f7f\u8bf7\u6c42\u5904\u7406\u7684\u751f\u547d\u5468\u671f\u975e\u5e38\u77ed\uff0c\u5e76\u5728\u540e\u53f0\u4ea7\u751f\u5904\u7406\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u5728Ruby on Rails\u7684\u4e16\u754c\u91cc\u5fc5\u987b\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u963b\u585e\u6240\u6709\u53ef\u4ee5\u5de5\u4f5c\u7684web\u5904\u7406\u5668\uff0c\u65e0\u8bba\u6211\u4eec\u4f7f\u7528\u7684\u662fpuma\u3001unicorn\u8fd8\u662fpassenger\uff08\u8bf7\u4e0d\u8981\u8ba8\u8bbaJRuby\uff09\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5229\u7528\u5e38\u89c1\u7684\u65b9\u6848\u53bb\u505a\u5230\u8fd9\u70b9\uff0c\u6bd4\u5982Resque\u3001Sidekip\u3001SQS\u7b49\u7b49\u3002\u8fd9\u6837\u7684\u65b9\u6848\u8fd8\u6709\u5f88\u591a\uff0c\u56e0\u4e3a\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u3002 \u56e0\u6b64\u7b2c\u4e8c\u6b21\u8fed\u4ee3\u662f\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u901a\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2abuffer channel\uff0c\u5728\u5176\u4e2d\u6392\u961f\u4e00\u4e9b\u4efb\u52a1\uff0c\u7136\u540e\u4e0a\u4f20\u5230S3\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u80fd\u591f\u63a7\u5236\u961f\u5217\u6700\u5927\u6570\u91cf\uff0c\u5e76\u4e14\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u6392\u961f\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\u6211\u4eec\u8ba4\u4e3a\u53ef\u4ee5\u53ea\u5728channel queue\u91cc\u7f13\u5b58\u4efb\u52a1\u3002 var Queue chan Payload func init () { Queue = make ( chan Payload , MAX_QUEUE ) } func payloadHandler ( w http . ResponseWriter , r * http . Request ) { ... // Go through each payload and queue items individually to be posted to S3 for _ , payload := range content . Payloads { Queue <- payload } ... } \u7136\u540e\uff0c\u4e3a\u4e86\u5b9e\u9645\u5730\u63a5\u89e6\u4efb\u52a1\u961f\u5217\u5e76\u6d88\u9664\u4ed6\u4eec\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u4e1c\u897f\uff1a func StartProcessor () { for { select { case job := <- Queue : job . payload . UploadToS3 () // <-- STILL NOT GOOD } } } \u8001\u5b9e\u8bf4\uff0c\u6211\u4e0d\u77e5\u9053\u6211\u4eec\u90a3\u65f6\u5019\u5230\u5e95\u5728\u60f3\u4ec0\u4e48\u3002\u8fd9\u4e00\u5b9a\u662f\u4e00\u4e2a\u7528\u7ea2\u725b\u586b\u6ee1\u7684\u591c\u665a\u3002\u8fd9\u79cd\u65b9\u6cd5\u6ca1\u6709\u7ed9\u6211\u4eec\u5e26\u963f\u91cc\u4efb\u4f55\u597d\u5904\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u7f13\u51b2\u961f\u5217\u6765\u4ea4\u6362\u6709\u7f3a\u9677\u7684\u5e76\u53d1\u6027\uff0c\u53ea\u662f\u7b80\u5355\u7684\u63a8\u8fdf\u4e86\u95ee\u9898\u7684\u89e3\u51b3\u3002\u6211\u4eec\u7684\u540c\u6b65\u5904\u7406\u5668\u4e00\u6b21\u53ea\u4e0a\u4f20\u4e00\u4e2a\u6709\u6548\u5185\u5bb9\u5230S3\u4e0a\uff0c\u800c\u4f20\u5165\u901f\u7387\u8fdc\u8fdc\u5927\u4e8e\u4e86\u5355\u4e2a\u5904\u7406\u5668\u4e0a\u4f20\u5230S3\u7684\u80fd\u529b\uff0c\u6211\u4eec\u7684\u7f13\u51b2\u901a\u9053\u5f88\u5feb\u5230\u8fbe\u4e86\u6781\u9650\uff0c\u963b\u585e\u4e86Request handler\u53bb\u628a\u66f4\u591a\u7684\u4efb\u52a1\u52a0\u5165\u5230\u961f\u5217\u3002 \u6211\u4eec\u53ea\u662f\u5728\u56de\u907f\u8fd9\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u5f00\u59cb\u5012\u8ba1\u65f6\uff0c\u77e5\u9053\u6211\u4eec\u7cfb\u7edf\u6700\u540e\u6b7b\u4ea1\u3002\u5728\u6211\u4eec\u90e8\u7f72\u8fd9\u4e2a\u6709\u7f3a\u5c0f\u7684\u7248\u672c\u540e\uff0c\u5ef6\u8fdf\u7387\u4ee5\u4e00\u4e2a\u6052\u5b9a\u7684\u901f\u5ea6\u4e0d\u65ad\u589e\u52a0\u3002 \u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848 \u6211\u4eec\u5df2\u7ecf\u51b3\u5b9a\u5728\u4f7f\u7528Go channels\u7684\u65f6\u4f7f\u7528\u4e00\u4e2a\u901a\u7528\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u4e8e\u521b\u5efa\u4e00\u4e2a\u4e24\u5c42\u7684channel\u7cfb\u7edf\uff0c\u4e00\u4e2a\u7528\u4e8e\u6392\u961f\u4f5c\u4e1a\uff0c\u4e00\u4e2a\u7528\u4e8e\u63a7\u5236\u5728JobQueue\u4e0a\u7684\u5e76\u53d1\u64cd\u4f5c\u7684woker\u6570\u91cf\u3002 \u6211\u4eec\u7684\u60f3\u6cd5\u662f\u5c06\u4e0a\u4f20\u5230S3\u7684\u64cd\u4f5c\u5e76\u884c\u5316\u5230\u4e00\u4e2a\u53ef\u6301\u7eed\u7684\u901f\u7387\uff0c\u8fd9\u4e2a\u901f\u7387\u4e0d\u4f1a\u4f7f\u5f97\u673a\u5668\u762b\u75ea\uff0c\u4f46\u662f\u4e5f\u4e0d\u4f1a\u4eceS3\u4ea7\u751f\u8fde\u63a5\u9519\u8bef\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e2aJob/Worker\u7684\u6a21\u5f0f\u3002\u5bf9\u4e8e\u90a3\u4e9b\u719f\u6089Java\u3001C#\u7684\u4eba\u6765\u8bf4\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u770b\u4f5c\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u901a\u8fc7channel\u5b9e\u73b0\u7684worker\u7ebf\u7a0b\u6c60\u7684Golang\u65b9\u6cd5\u3002 var ( MaxWorker = os . Getenv ( \"MAX_WORKERS\" ) MaxQueue = os . Getenv ( \"MAX_QUEUE\" ) ) // Job represents the job to be run type Job struct { Payload Payload } // A buffered channel that we can send work requests on. var JobQueue chan Job // Worker represents the worker that executes the job type Worker struct { WorkerPool chan chan Job JobChannel chan Job quit chan bool } func NewWorker ( workerPool chan chan Job ) Worker { return Worker { WorkerPool : workerPool , JobChannel : make ( chan Job ), quit : make ( chan bool )} } // Start method starts the run loop for the worker, listening for a quit channel in // case we need to stop it func ( w Worker ) Start () { go func () { for { // register the current worker into the worker queue. w . WorkerPool <- w . JobChannel select { case job := <- w . JobChannel : // we have received a work request. if err := job . Payload . UploadToS3 (); err != nil { log . Errorf ( \"Error uploading to S3: %s\" , err . Error ()) } case <- w . quit : // we have received a signal to stop return } } }() } // Stop signals the worker to stop listening for work requests. func ( w Worker ) Stop () { go func () { w . quit <- true }() } \u6211\u4eec\u4fee\u6539\u4e86web\u8bf7\u6c42\u7684handler\uff0c\u4f7f\u7528\u6709\u6548\u8d1f\u8f7d\u521b\u5efaJob struct\u7684\u5b9e\u529b\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u5230Job Queue\u901a\u9053\uff0c\u4ee5\u4fbf\u4e8eworker\u8fdb\u884c\u63d0\u53d6 func payloadHandler ( w http . ResponseWriter , r * http . Request ) { if r . Method != \"POST\" { w . WriteHeader ( http . StatusMethodNotAllowed ) return } // Read the body into a string for json decoding var content = & PayloadCollection {} err := json . NewDecoder ( io . LimitReader ( r . Body , MaxLength )). Decode ( & content ) if err != nil { w . Header (). Set ( \"Content-Type\" , \"application/json; charset=UTF-8\" ) w . WriteHeader ( http . StatusBadRequest ) return } // Go through each payload and queue items individually to be posted to S3 for _ , payload := range content . Payloads { // let's create a job with the payload work := Job { Payload : payload } // Push the work onto the queue. JobQueue <- work } w . WriteHeader ( http . StatusOK ) } \u5728web\u670d\u52a1\u5668\u521d\u59cb\u5316\u671f\u95f4\uff0c\u6211\u4eec\u7a7f\u4ef6\u4e86\u4e00\u4e2aDispatcher\u5e76\u8c03\u5ea6Run()\u51fd\u6570\u6765\u521b\u5efaworkerpool\uff0c\u5e76\u5f00\u59cb\u4fa6\u542c\u51fa\u73b0\u5728Job Queue\u4e2d\u7684\u4efb\u52a1\u3002 dispatcher := NewDispatcher ( MaxWorker ) dispatcher . Run () \u4e0b\u9762\u662f\u6211\u4eec\u7684dispatcher\u7684\u5b9e\u73b0\u4ee3\u7801\uff1a type Dispatcher struct { // A pool of workers channels that are registered with the dispatcher WorkerPool chan chan Job } func NewDispatcher ( maxWorkers int ) * Dispatcher { pool := make ( chan chan Job , maxWorkers ) return & Dispatcher { WorkerPool : pool } } func ( d * Dispatcher ) Run () { // starting n number of workers for i := 0 ; i < d . maxWorkers ; i ++ { worker := NewWorker ( d . pool ) worker . Start () } go d . dispatch () } func ( d * Dispatcher ) dispatch () { for { select { case job := <- JobQueue : // a job request has been received go func ( job Job ) { // try to obtain a worker job channel that is available. // this will block until a worker is idle jobChannel := <- d . WorkerPool // dispatch the job to the worker job channel jobChannel <- job }( job ) } } } \u6ce8\u610f\u5230\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u8981\u5b9e\u4f8b\u5316\u5e76\u6dfb\u52a0\u5230worker pool\u4e2d\u6700\u5927worker\u6570\u91cf\u3002\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u5728Amazon Elastic beanstalk\u4e3a\u8fd9\u4e2a\u9879\u76ee\u4f7f\u7528\u4e86\u5bb9\u5668\u5316\u7684Go\u73af\u5883\uff0c\u6211\u4eec\u4e5f\u8bd5\u56fe\u53bb\u9075\u5faa \u5341\u4e8c\u56e0\u7d20 \u7684\u65b9\u6cd5\u6765\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u914d\u7f6e\u6211\u4eec\u7684\u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u73af\u5883\u53d8\u91cf\u4e2d\u8bfb\u53d6\u51fa\u8fd9\u4e9b\u503c\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u591f\u63a7\u5236\u4efb\u52a1\u961f\u5217\u548cworker\u7684\u6570\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u91cd\u65b0\u90e8\u7f72\u96c6\u7fa4\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u8c03\u6574\u8fd9\u4e9b\u503c\u7684\u5927\u5c0f\u3002 var ( MaxWorker = os . Getenv ( \"MAX_WORKERS\" ) MaxQueue = os . Getenv ( \"MAX_QUEUE\" ) ) \u5728\u6211\u4eec\u90e8\u7f72\u5b83\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6240\u6709\u7684\u5ef6\u8fdf\u7387\u90fd\u53c8\u4e86\u663e\u8457\u7684\u964d\u4f4e\uff0c\u6211\u4eec\u5904\u7406\u8bf7\u6c42\u7684\u80fd\u529b\u5feb\u901f\u4e0a\u5347\u3002 \u5728\u5f39\u6027\u8d1f\u8f7d\u5747\u8861\u5668(Elastic Load Balancer)\u5b8c\u5168\u51c6\u5907\u597d\u7684\u51e0\u5206\u949f\u540e\uff0c\u6211\u4eec\u770b\u5230Elastic Bean stalk\u4e0a\uff0c\u6bcf\u5206\u949f\u5904\u7406\u4e86\u63a5\u8fd1\u4e00\u767e\u4e07\u4e2a\u8bf7\u6c42\u3002\u6211\u4eec\u901a\u5e38\u5728\u65e9\u4e0a\u7684\u51e0\u4e2a\u5c0f\u65f6\u5185\uff0c\u6211\u4eec\u7684\u6d41\u91cf\u4f1a\u8fbe\u5230\u6bcf\u5206\u949f\u4e00\u767e\u4e07\u4ee5\u4e0a\u3002 \u5f53\u6211\u4eec\u91cd\u65b0\u90e8\u7f72\u4e86\u65b0\u7684\u4ee3\u7801\uff0c\u670d\u52a1\u5668\u7684\u6570\u91cf\u5c31\u4ece\u4e00\u767e\u53f0\u5927\u5e45\u4e0b\u964d\u5230\u4e8620\u53f0\u5de6\u53f3\u3002 \u5728\u6211\u4eec\u6070\u5f53\u7684\u914d\u7f6e\u597d\u96c6\u7fa4\u548c\u81ea\u52a8\u7f29\u653e\u8bbe\u7f6e\u4e4b\u540e\uff0c\u6211\u4eec\u80fd\u591f\u5c06\u5b83\u964d\u4f4e\u5230\u53ea\u67094x EC2 c4\u3002\u5982\u679cCPU\u8fde\u7eed\u4e94\u5206\u949f\u8d85\u8fc7\u4e8690%\uff0c\u5f39\u6027\u81ea\u52a8\u4f38\u7f29\u5219\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002 \u603b\u7ed3 \u5728\u6211\u770b\u6765\uff0c\u7b80\u6d01\u603b\u662f\u5360\u4e0a\u98ce\u7684\u3002(Simplicity always wins in my book)\u3002\u6211\u4eec\u672c\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u5305\u62ec\u8bb8\u591a\u7684\u961f\u5217\u3001\u540e\u53f0worker\u3001\u590d\u6742\u7684\u90e8\u7f72\uff0c\u4f46\u662f\u6211\u4eec\u51b3\u5b9a\u5229\u7528Elasticbeanstalk\u81ea\u52a8\u5723\u6240\u7684\u80fd\u529b\uff0c\u4ee5\u53cagolang\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u9ad8\u6548\u3001\u7b80\u5355\u7684\u5e76\u53d1\u65b9\u6cd5\u3002 \u5de5\u4f5c\u603b\u6709\u5408\u9002\u7684\u5de5\u5177\u3002\u6709\u65f6\u5019\u5f53\u4f60\u7684Ruby on Rails\u7cfb\u7edf\u9700\u8981\u4e00\u4e2a\u5206\u573a\u5f3a\u5927\u7684web\u5904\u7406\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u8003\u8651\u4e00\u4e0bRuby\u751f\u6001\u4ee5\u5916\u7684\u66f4\u7b80\u5355\u800c\u4e14\u66f4\u5f3a\u5927\u7684\u66ff\u4ee3\u65b9\u6848\u3002 \u53c2\u8003 [1] \u5341\u4e8c\u56e0\u7d20\uff1a\u8f6f\u4ef6\u5373\u670d\u52a1(SaaS)\u7684\u4ea4\u4ed8\u51c6\u5219\uff1b https://12factor.net/zh_cn/","title":"\u4f7f\u7528golang\u5904\u7406\u767e\u4e07\u8bf7\u6c42"},{"location":"translate/tp3/#3handling-1-million-requests-per-minute-with-golang","text":"Created: Mar 14, 2021 3:41 PM Year: 2017 link: https://medium.com/smsjunk/handling-1-million-requests-per-minute-with-golang-f70ac505fcaa writer: Marcio Castilho \u6807\u7b7e: golang, \u6280\u672f \u3010About Project\u3011\u7ffb\u8bd1\u8ba1\u5212\u662f\u65e8\u5728\u4e8e\u5206\u4eab\u4e00\u4e9b\u5916\u6587\u7684\u6280\u672f\u3001\u6216\u8005\u751f\u6d3b\u5185\u5bb9\u3002\u8fd9\u662f\u672c\u7cfb\u5217\u7684\u7b2c\u4e94\u7bc7\u7ffb\u8bd1\u6587\u7ae0\u3002 \u3010About Article\u3011\u5982\u4f55\u7528Golang\u5904\u7406\u6bcf\u5206\u949f\u767e\u4e07\u7ea7\u7684\u8bf7\u6c42\uff1f\u4e00\u4e2a\u534f\u7a0b\u6c60\uff0c\u5c31\u591f\u4e86\uff01 \u4ee5\u4e0b\u662f\u672c\u6587\u7684\u6b63\u5f0f\u5185\u5bb9\uff1a","title":"\u3010\u7ffb\u8bd1\u8ba1\u52123\u3011Handling 1 Million Requests per Minute with Golang"},{"location":"translate/tp3/#golang","text":"\u6211\u5728\u51e0\u5bb6\u4e0d\u540c\u7684\u516c\u53f8\u4ece\u4e8b\u53d1\u5783\u573e\u90ae\u4ef6\u3001\u53cd\u75c5\u6bd2\u548c\u53cd\u6076\u610f\u8f6f\u4ef6\u5de5\u4f5c\u5df2\u7ecf\u8d85\u8fc715\u5e74\u4e86\u3002\u56e0\u4e3a\u6211\u4eec\u6bcf\u5929\u8981\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u6211\u77e5\u9053\u8fd9\u4e9b\u7cfb\u7edf\u6700\u7ec8\u4f1a\u6709\u591a\u4e48\u590d\u6742\u3002 \u76ee\u524d\uff0c\u6211\u662fsmsjunk.com\u7684\u9996\u5e2d\u6267\u884c\u5b98\u4ee5\u53caKnowBe4\u7684\u9996\u5e2d\u67b6\u6784\u5e08(Chief Architect Officer)\uff0c\u90fd\u662f\u4ece\u4e8b\u7f51\u7edc\u5b89\u5168\u884c\u4e1a\u7684\u516c\u53f8\u3002 \u6709\u8da3\u7684\u662f\uff0c\u5728\u8fc7\u53bb\u5341\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u4f5c\u4e3a\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u6240\u53c2\u4e0e\u7684\u6240\u6709web\u540e\u7aef\u5f00\u53d1\u5927\u90e8\u5206\u90fd\u662f\u7528Ruby on Rails\u5b8c\u6210\u7684\u3002\u4e0d\u8981\u8bef\u4f1a\u6211\u7684\u610f\u601d\uff0c\u6211\u559c\u6b22Ruby on Rails\uff0c\u6211\u76f8\u4fe1\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u73af\u5883\uff0c\u4f46\u662f\u5728\u4f60\u5f00\u59cb\u7528Ruby\u7684\u65b9\u5f0f\u53bb\u601d\u8003\u548c\u8bbe\u8ba1\u7cfb\u7edf\u540e\uff0c\u4f60\u53ef\u80fd\u5fd8\u4e86\u53bb\u4f7f\u7528\u591a\u7ebf\u7a0b\u3001\u5e76\u884c\u5316\u3001\u5feb\u901f\u6267\u884c\u4ee5\u53ca\u5c0f\u7684\u5185\u5b58\u5f00\u9500\u6765\u4f7f\u8f6f\u4ef6\u67b6\u6784\u9ad8\u6548\u548c\u7b80\u5355\u3002\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u662f\u4e00\u540dC/C++\u3001Delphi\u548cC#\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u624d\u5f00\u59cb\u610f\u8bc6\u5230\uff0c\u4f7f\u7528\u5408\u9002\u7684\u5de5\u5177\uff0c\u80fd\u591f\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u3002 \u6211\u4e0d\u662f\u5f88\u7406\u89e3\u4e92\u8054\u7f51\u603b\u662f\u5728\u4e89\u8bba\u5404\u79cd\u8bed\u8a00\u548c\u6846\u67b6\u4f18\u52a3\u3002\u6211\u8ba4\u4e3a\uff0c \u9ad8\u6548\u3001\u751f\u4ea7\u529b\u5f3a\u548c\u4ee3\u7801\u53ef\u7ef4\u62a4\u6027\u4e3b\u8981\u53d6\u51b3\u4e8e\u6784\u5efa\u65b9\u6848\u7684\u7b80\u5355\u7a0b\u5ea6\u3002","title":"\u5982\u4f55\u7528golang\u5904\u7406\u767e\u4e07\u8bf7\u6c42"},{"location":"translate/tp3/#the-problem","text":"\u5728\u5f00\u53d1\u4e00\u4e2a\u533f\u540d\u7684\u9065\u6d4b\u548c\u5206\u6790\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u80fd\u591f\u5904\u7406\u6765\u81ea\u6570\u767e\u4e07\u4e2aEndpoint\u7684\u5927\u91cfPOST\u8bf7\u6c42\u3002Web handler\u80fd\u6536\u5230\u4e00\u4e2aJSON\u683c\u5f0f\u7684\u6587\u6863\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u6709\u8981\u5199\u5165\u5230Amazon S3\u4e2d\u7684\u6709\u6548\u5185\u5bb9\uff0c\u4ee5\u4fbf\u4e8e\u6211\u4eec\u7684map-reduce\u7cfb\u7edf\u4ee5\u540e\u80fd\u591f\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002 \u4e00\u822c\u60c5\u51b5\uff0c\u6211\u4eec\u4f1a\u8003\u8651\u521b\u5efa\u4e00\u4e2aworker\u5c42\u7ea7\u7684\u67b6\u6784\uff0c\u5229\u7528\u4e00\u4e0b\u7684\u6280\u672f\uff1a Sidekiq Resque Reque DelayedJob Elasticbeanstalk Woker tier RabbitMQ and so on \u2026\u2026 \u8bbe\u7f6e\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u7fa4\uff0c\u4e00\u4e2a\u7528\u4e8eweb\u524d\u7aef\uff0c\u4e00\u4e2a\u7528\u4e8e\u5de5\u4f5c\u8282\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6269\u5927\u6211\u4eec\u540e\u53f0\u7684\u5de5\u4f5c\u91cf\u3002 \u4f46\u662f\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u7684\u56e2\u961f\u5c31\u77e5\u9053\u6211\u4eec\u8981\u7528Go\u8bed\u8a00\u6765\u505a\u4ed6\uff0c\u56e0\u4e3a\u5728\u8ba8\u8bba\u9636\u6bb5\u6211\u4eec\u5df2\u7ecf\u610f\u8bc6\u5230\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6d41\u91cf\u7cfb\u7edf\u3002\u6211\u5df2\u7ecf\u4f7f\u7528\u4e86Go\u4e24\u5e74\u4e86\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5f00\u53d1\u4e86\u4e00\u4e9b\u7cfb\u7edf\uff0c\u4f46\u662f\u6ca1\u6709\u4e00\u4e2a\u53ef\u4ee5\u627f\u8f7d\u8fd9\u4e48\u5927\u7684\u6d41\u91cf\u3002 \u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e9b\u7ed3\u6784\u6765\u5b9a\u4e49Post\u8bf7\u6c42\u8981\u63a5\u53d7\u7684web\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a\u5c06\u5176\u4e0a\u4f20\u5230\u6211\u4eecS3 bucket\u7684\u65b9\u6cd5\u3002 type PayloadCollection struct { WindowsVersion string `json:\"version\"` Token string `json:\"token\"` Payloads [] Payload `json:\"data\"` } type Payload struct { // [redacted] } func ( p * Payload ) UploadToS3 () error { // the storageFolder method ensures that there are no name collision in // case we get same timestamp in the key name storage_path := fmt . Sprintf ( \"%v/%v\" , p . storageFolder , time . Now (). UnixNano ()) bucket := S3Bucket b := new ( bytes . Buffer ) encodeErr := json . NewEncoder ( b ). Encode ( payload ) if encodeErr != nil { return encodeErr } // Everything we post to the S3 bucket should be marked 'private' var acl = s3 . Private var contentType = \"application/octet-stream\" return bucket . PutReader ( storage_path , b , int64 ( b . Len ()), contentType , acl , s3 . Options {}) }","title":"\u95ee\u9898\u6240\u5728 The Problem"},{"location":"translate/tp3/#go-routines","text":"Native approach to Go routines \u6700\u521d\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684POST\u5904\u7406\u7a0b\u5e8f\u5b9e\u73b0\u4e86\uff0c\u53ea\u662f\u8bd5\u56fe\u5c06\u4efb\u52a1\u5e76\u884c\u5316\u7684\u4e00\u4e2a\u7b80\u5355goroutine\uff1a func payloadHandler ( w http . ResponseWriter , r * http . Request ) { if r . Method != \"POST\" { w . WriteHeader ( http . StatusMethodNotAllowed ) return } // Read the body into a string for json decoding var content = & PayloadCollection {} err := json . NewDecoder ( io . LimitReader ( r . Body , MaxLength )). Decode ( & content ) if err != nil { w . Header (). Set ( \"Content-Type\" , \"application/json; charset=UTF-8\" ) w . WriteHeader ( http . StatusBadRequest ) return } // Go through each payload and queue items individually to be posted to S3 for _ , payload := range content . Payloads { go payload . UploadToS3 () // <----- DON'T DO THIS } w . WriteHeader ( http . StatusOK ) } \u5bf9\u4e8e\u4e2d\u7b49\u6e29\u548c\u7684\u8d1f\u8f7d\uff0c\u8fd9\u5bf9\u5927\u591a\u6570\u4eba\u6765\u8bf4\u662f\u53ef\u884c\u7684\uff0c\u4f46\u662f\u8fd9\u5f88\u5feb\u88ab\u8bc1\u660e\u5728\u5927\u89c4\u6a21\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\u4e0d\u662f\u5f88\u597d\u3002\u6211\u4eec\u9884\u6599\u5230\u6709\u5f88\u591a\u8bf7\u6c42\uff0c\u4f46\u662f\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u7248\u672c\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u65f6\uff0c\u6570\u91cf\u5e76\u6ca1\u6709\u8fbe\u5230\u6211\u4eec\u5f00\u59cb\u540e\u770b\u5230\u7684\u6570\u91cf\u7ea7\u3002\u6211\u4eec\u5b8c\u5168\u4f4e\u4f30\u4e86\u8bf7\u6c42\u91cf\u3002 \u4e0a\u4e70\u5462\u65b9\u6cd5\u5728\u51e0\u4e2a\u4e0d\u540c\u7684\u65b9\u9762\u90fd\u5f88\u7cdf\u7cd5\uff0c\u6211\u4eec\u5b8c\u5168\u6ca1\u6709\u529e\u6cd5\u63a7\u5236\u6211\u4eec\u4ea7\u751f\u4e86\u591a\u5c11\u4e2aGo routines\u3002\u6240\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u5f88\u5feb\u5c31\u5d29\u6e83\u4e86\u3002","title":"\u539f\u751f\u65b9\u6cd5\u4f7f\u7528Go routines"},{"location":"translate/tp3/#trying-again","text":"\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u56e0\u4e3a\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u8ba8\u8bba\u5982\u4f55\u4f7f\u8bf7\u6c42\u5904\u7406\u7684\u751f\u547d\u5468\u671f\u975e\u5e38\u77ed\uff0c\u5e76\u5728\u540e\u53f0\u4ea7\u751f\u5904\u7406\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u5728Ruby on Rails\u7684\u4e16\u754c\u91cc\u5fc5\u987b\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u963b\u585e\u6240\u6709\u53ef\u4ee5\u5de5\u4f5c\u7684web\u5904\u7406\u5668\uff0c\u65e0\u8bba\u6211\u4eec\u4f7f\u7528\u7684\u662fpuma\u3001unicorn\u8fd8\u662fpassenger\uff08\u8bf7\u4e0d\u8981\u8ba8\u8bbaJRuby\uff09\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5229\u7528\u5e38\u89c1\u7684\u65b9\u6848\u53bb\u505a\u5230\u8fd9\u70b9\uff0c\u6bd4\u5982Resque\u3001Sidekip\u3001SQS\u7b49\u7b49\u3002\u8fd9\u6837\u7684\u65b9\u6848\u8fd8\u6709\u5f88\u591a\uff0c\u56e0\u4e3a\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u3002 \u56e0\u6b64\u7b2c\u4e8c\u6b21\u8fed\u4ee3\u662f\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u901a\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2abuffer channel\uff0c\u5728\u5176\u4e2d\u6392\u961f\u4e00\u4e9b\u4efb\u52a1\uff0c\u7136\u540e\u4e0a\u4f20\u5230S3\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u80fd\u591f\u63a7\u5236\u961f\u5217\u6700\u5927\u6570\u91cf\uff0c\u5e76\u4e14\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u6392\u961f\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\u6211\u4eec\u8ba4\u4e3a\u53ef\u4ee5\u53ea\u5728channel queue\u91cc\u7f13\u5b58\u4efb\u52a1\u3002 var Queue chan Payload func init () { Queue = make ( chan Payload , MAX_QUEUE ) } func payloadHandler ( w http . ResponseWriter , r * http . Request ) { ... // Go through each payload and queue items individually to be posted to S3 for _ , payload := range content . Payloads { Queue <- payload } ... } \u7136\u540e\uff0c\u4e3a\u4e86\u5b9e\u9645\u5730\u63a5\u89e6\u4efb\u52a1\u961f\u5217\u5e76\u6d88\u9664\u4ed6\u4eec\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u4e1c\u897f\uff1a func StartProcessor () { for { select { case job := <- Queue : job . payload . UploadToS3 () // <-- STILL NOT GOOD } } } \u8001\u5b9e\u8bf4\uff0c\u6211\u4e0d\u77e5\u9053\u6211\u4eec\u90a3\u65f6\u5019\u5230\u5e95\u5728\u60f3\u4ec0\u4e48\u3002\u8fd9\u4e00\u5b9a\u662f\u4e00\u4e2a\u7528\u7ea2\u725b\u586b\u6ee1\u7684\u591c\u665a\u3002\u8fd9\u79cd\u65b9\u6cd5\u6ca1\u6709\u7ed9\u6211\u4eec\u5e26\u963f\u91cc\u4efb\u4f55\u597d\u5904\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u7f13\u51b2\u961f\u5217\u6765\u4ea4\u6362\u6709\u7f3a\u9677\u7684\u5e76\u53d1\u6027\uff0c\u53ea\u662f\u7b80\u5355\u7684\u63a8\u8fdf\u4e86\u95ee\u9898\u7684\u89e3\u51b3\u3002\u6211\u4eec\u7684\u540c\u6b65\u5904\u7406\u5668\u4e00\u6b21\u53ea\u4e0a\u4f20\u4e00\u4e2a\u6709\u6548\u5185\u5bb9\u5230S3\u4e0a\uff0c\u800c\u4f20\u5165\u901f\u7387\u8fdc\u8fdc\u5927\u4e8e\u4e86\u5355\u4e2a\u5904\u7406\u5668\u4e0a\u4f20\u5230S3\u7684\u80fd\u529b\uff0c\u6211\u4eec\u7684\u7f13\u51b2\u901a\u9053\u5f88\u5feb\u5230\u8fbe\u4e86\u6781\u9650\uff0c\u963b\u585e\u4e86Request handler\u53bb\u628a\u66f4\u591a\u7684\u4efb\u52a1\u52a0\u5165\u5230\u961f\u5217\u3002 \u6211\u4eec\u53ea\u662f\u5728\u56de\u907f\u8fd9\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u5f00\u59cb\u5012\u8ba1\u65f6\uff0c\u77e5\u9053\u6211\u4eec\u7cfb\u7edf\u6700\u540e\u6b7b\u4ea1\u3002\u5728\u6211\u4eec\u90e8\u7f72\u8fd9\u4e2a\u6709\u7f3a\u5c0f\u7684\u7248\u672c\u540e\uff0c\u5ef6\u8fdf\u7387\u4ee5\u4e00\u4e2a\u6052\u5b9a\u7684\u901f\u5ea6\u4e0d\u65ad\u589e\u52a0\u3002","title":"\u518d\u8bd5\u4e00\u6b21Trying again"},{"location":"translate/tp3/#_1","text":"\u6211\u4eec\u5df2\u7ecf\u51b3\u5b9a\u5728\u4f7f\u7528Go channels\u7684\u65f6\u4f7f\u7528\u4e00\u4e2a\u901a\u7528\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u4e8e\u521b\u5efa\u4e00\u4e2a\u4e24\u5c42\u7684channel\u7cfb\u7edf\uff0c\u4e00\u4e2a\u7528\u4e8e\u6392\u961f\u4f5c\u4e1a\uff0c\u4e00\u4e2a\u7528\u4e8e\u63a7\u5236\u5728JobQueue\u4e0a\u7684\u5e76\u53d1\u64cd\u4f5c\u7684woker\u6570\u91cf\u3002 \u6211\u4eec\u7684\u60f3\u6cd5\u662f\u5c06\u4e0a\u4f20\u5230S3\u7684\u64cd\u4f5c\u5e76\u884c\u5316\u5230\u4e00\u4e2a\u53ef\u6301\u7eed\u7684\u901f\u7387\uff0c\u8fd9\u4e2a\u901f\u7387\u4e0d\u4f1a\u4f7f\u5f97\u673a\u5668\u762b\u75ea\uff0c\u4f46\u662f\u4e5f\u4e0d\u4f1a\u4eceS3\u4ea7\u751f\u8fde\u63a5\u9519\u8bef\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e2aJob/Worker\u7684\u6a21\u5f0f\u3002\u5bf9\u4e8e\u90a3\u4e9b\u719f\u6089Java\u3001C#\u7684\u4eba\u6765\u8bf4\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u770b\u4f5c\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u901a\u8fc7channel\u5b9e\u73b0\u7684worker\u7ebf\u7a0b\u6c60\u7684Golang\u65b9\u6cd5\u3002 var ( MaxWorker = os . Getenv ( \"MAX_WORKERS\" ) MaxQueue = os . Getenv ( \"MAX_QUEUE\" ) ) // Job represents the job to be run type Job struct { Payload Payload } // A buffered channel that we can send work requests on. var JobQueue chan Job // Worker represents the worker that executes the job type Worker struct { WorkerPool chan chan Job JobChannel chan Job quit chan bool } func NewWorker ( workerPool chan chan Job ) Worker { return Worker { WorkerPool : workerPool , JobChannel : make ( chan Job ), quit : make ( chan bool )} } // Start method starts the run loop for the worker, listening for a quit channel in // case we need to stop it func ( w Worker ) Start () { go func () { for { // register the current worker into the worker queue. w . WorkerPool <- w . JobChannel select { case job := <- w . JobChannel : // we have received a work request. if err := job . Payload . UploadToS3 (); err != nil { log . Errorf ( \"Error uploading to S3: %s\" , err . Error ()) } case <- w . quit : // we have received a signal to stop return } } }() } // Stop signals the worker to stop listening for work requests. func ( w Worker ) Stop () { go func () { w . quit <- true }() } \u6211\u4eec\u4fee\u6539\u4e86web\u8bf7\u6c42\u7684handler\uff0c\u4f7f\u7528\u6709\u6548\u8d1f\u8f7d\u521b\u5efaJob struct\u7684\u5b9e\u529b\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u5230Job Queue\u901a\u9053\uff0c\u4ee5\u4fbf\u4e8eworker\u8fdb\u884c\u63d0\u53d6 func payloadHandler ( w http . ResponseWriter , r * http . Request ) { if r . Method != \"POST\" { w . WriteHeader ( http . StatusMethodNotAllowed ) return } // Read the body into a string for json decoding var content = & PayloadCollection {} err := json . NewDecoder ( io . LimitReader ( r . Body , MaxLength )). Decode ( & content ) if err != nil { w . Header (). Set ( \"Content-Type\" , \"application/json; charset=UTF-8\" ) w . WriteHeader ( http . StatusBadRequest ) return } // Go through each payload and queue items individually to be posted to S3 for _ , payload := range content . Payloads { // let's create a job with the payload work := Job { Payload : payload } // Push the work onto the queue. JobQueue <- work } w . WriteHeader ( http . StatusOK ) } \u5728web\u670d\u52a1\u5668\u521d\u59cb\u5316\u671f\u95f4\uff0c\u6211\u4eec\u7a7f\u4ef6\u4e86\u4e00\u4e2aDispatcher\u5e76\u8c03\u5ea6Run()\u51fd\u6570\u6765\u521b\u5efaworkerpool\uff0c\u5e76\u5f00\u59cb\u4fa6\u542c\u51fa\u73b0\u5728Job Queue\u4e2d\u7684\u4efb\u52a1\u3002 dispatcher := NewDispatcher ( MaxWorker ) dispatcher . Run () \u4e0b\u9762\u662f\u6211\u4eec\u7684dispatcher\u7684\u5b9e\u73b0\u4ee3\u7801\uff1a type Dispatcher struct { // A pool of workers channels that are registered with the dispatcher WorkerPool chan chan Job } func NewDispatcher ( maxWorkers int ) * Dispatcher { pool := make ( chan chan Job , maxWorkers ) return & Dispatcher { WorkerPool : pool } } func ( d * Dispatcher ) Run () { // starting n number of workers for i := 0 ; i < d . maxWorkers ; i ++ { worker := NewWorker ( d . pool ) worker . Start () } go d . dispatch () } func ( d * Dispatcher ) dispatch () { for { select { case job := <- JobQueue : // a job request has been received go func ( job Job ) { // try to obtain a worker job channel that is available. // this will block until a worker is idle jobChannel := <- d . WorkerPool // dispatch the job to the worker job channel jobChannel <- job }( job ) } } } \u6ce8\u610f\u5230\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u8981\u5b9e\u4f8b\u5316\u5e76\u6dfb\u52a0\u5230worker pool\u4e2d\u6700\u5927worker\u6570\u91cf\u3002\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u5728Amazon Elastic beanstalk\u4e3a\u8fd9\u4e2a\u9879\u76ee\u4f7f\u7528\u4e86\u5bb9\u5668\u5316\u7684Go\u73af\u5883\uff0c\u6211\u4eec\u4e5f\u8bd5\u56fe\u53bb\u9075\u5faa \u5341\u4e8c\u56e0\u7d20 \u7684\u65b9\u6cd5\u6765\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u914d\u7f6e\u6211\u4eec\u7684\u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u73af\u5883\u53d8\u91cf\u4e2d\u8bfb\u53d6\u51fa\u8fd9\u4e9b\u503c\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u591f\u63a7\u5236\u4efb\u52a1\u961f\u5217\u548cworker\u7684\u6570\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u91cd\u65b0\u90e8\u7f72\u96c6\u7fa4\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u8c03\u6574\u8fd9\u4e9b\u503c\u7684\u5927\u5c0f\u3002 var ( MaxWorker = os . Getenv ( \"MAX_WORKERS\" ) MaxQueue = os . Getenv ( \"MAX_QUEUE\" ) ) \u5728\u6211\u4eec\u90e8\u7f72\u5b83\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6240\u6709\u7684\u5ef6\u8fdf\u7387\u90fd\u53c8\u4e86\u663e\u8457\u7684\u964d\u4f4e\uff0c\u6211\u4eec\u5904\u7406\u8bf7\u6c42\u7684\u80fd\u529b\u5feb\u901f\u4e0a\u5347\u3002 \u5728\u5f39\u6027\u8d1f\u8f7d\u5747\u8861\u5668(Elastic Load Balancer)\u5b8c\u5168\u51c6\u5907\u597d\u7684\u51e0\u5206\u949f\u540e\uff0c\u6211\u4eec\u770b\u5230Elastic Bean stalk\u4e0a\uff0c\u6bcf\u5206\u949f\u5904\u7406\u4e86\u63a5\u8fd1\u4e00\u767e\u4e07\u4e2a\u8bf7\u6c42\u3002\u6211\u4eec\u901a\u5e38\u5728\u65e9\u4e0a\u7684\u51e0\u4e2a\u5c0f\u65f6\u5185\uff0c\u6211\u4eec\u7684\u6d41\u91cf\u4f1a\u8fbe\u5230\u6bcf\u5206\u949f\u4e00\u767e\u4e07\u4ee5\u4e0a\u3002 \u5f53\u6211\u4eec\u91cd\u65b0\u90e8\u7f72\u4e86\u65b0\u7684\u4ee3\u7801\uff0c\u670d\u52a1\u5668\u7684\u6570\u91cf\u5c31\u4ece\u4e00\u767e\u53f0\u5927\u5e45\u4e0b\u964d\u5230\u4e8620\u53f0\u5de6\u53f3\u3002 \u5728\u6211\u4eec\u6070\u5f53\u7684\u914d\u7f6e\u597d\u96c6\u7fa4\u548c\u81ea\u52a8\u7f29\u653e\u8bbe\u7f6e\u4e4b\u540e\uff0c\u6211\u4eec\u80fd\u591f\u5c06\u5b83\u964d\u4f4e\u5230\u53ea\u67094x EC2 c4\u3002\u5982\u679cCPU\u8fde\u7eed\u4e94\u5206\u949f\u8d85\u8fc7\u4e8690%\uff0c\u5f39\u6027\u81ea\u52a8\u4f38\u7f29\u5219\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002","title":"\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848"},{"location":"translate/tp3/#_2","text":"\u5728\u6211\u770b\u6765\uff0c\u7b80\u6d01\u603b\u662f\u5360\u4e0a\u98ce\u7684\u3002(Simplicity always wins in my book)\u3002\u6211\u4eec\u672c\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u5305\u62ec\u8bb8\u591a\u7684\u961f\u5217\u3001\u540e\u53f0worker\u3001\u590d\u6742\u7684\u90e8\u7f72\uff0c\u4f46\u662f\u6211\u4eec\u51b3\u5b9a\u5229\u7528Elasticbeanstalk\u81ea\u52a8\u5723\u6240\u7684\u80fd\u529b\uff0c\u4ee5\u53cagolang\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u9ad8\u6548\u3001\u7b80\u5355\u7684\u5e76\u53d1\u65b9\u6cd5\u3002 \u5de5\u4f5c\u603b\u6709\u5408\u9002\u7684\u5de5\u5177\u3002\u6709\u65f6\u5019\u5f53\u4f60\u7684Ruby on Rails\u7cfb\u7edf\u9700\u8981\u4e00\u4e2a\u5206\u573a\u5f3a\u5927\u7684web\u5904\u7406\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u8003\u8651\u4e00\u4e0bRuby\u751f\u6001\u4ee5\u5916\u7684\u66f4\u7b80\u5355\u800c\u4e14\u66f4\u5f3a\u5927\u7684\u66ff\u4ee3\u65b9\u6848\u3002","title":"\u603b\u7ed3"},{"location":"translate/tp3/#_3","text":"[1] \u5341\u4e8c\u56e0\u7d20\uff1a\u8f6f\u4ef6\u5373\u670d\u52a1(SaaS)\u7684\u4ea4\u4ed8\u51c6\u5219\uff1b https://12factor.net/zh_cn/","title":"\u53c2\u8003"},{"location":"translate/re/fsm-1/","text":"\u4ece if-else \u5730\u72f1\u5230\u72b6\u6001\u673a\u6d41\u8f6c 1. intro \u5728\u4e00\u6b21\u9762\u8bd5\u4e2d\uff0c\u9762\u8bd5\u5b98\u63d0\u5230\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9898\u76ee\uff0c\u5728\u4e0d\u5229\u7528Go\u81ea\u5e26\u5305\u6216\u8005\u7b2c\u4e09\u5305\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u5206\u3002 \u6bd4\u5982\u5bf9\u4e8e\u5b57\u7b26\u4e32 i come from somewhere you do not know\" \u8fdb\u884c\u5207\u5206\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u662f [\"i\",\"come\",\"from\",\"somewhere\",\"you\",\"do\",\"not\",\"know\"] \u3002 \u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9700\u6c42\uff0c\u6211\u4eec\u53ea\u7528\u8bb0\u5f55\u4ece\u8bfb\u53d6\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u5230\u7a7a\u683c\u5c31\u7ed3\u675f\u4e86\u3002\u4ee3\u7801\u5199\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\u3002 2. \u9010\u6e10\u590d\u6742 2.1 \u5355\u8bcd\u548c\u7a7a\u683c \u4e5f\u5c31\u662fintro\u4e2d\u7684\u9700\u6c42\uff0c\u601d\u8def\u5982\u4e0b \u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u662f\u5b57\u6bcd\u5219\u8bb0\u5f55\u4e0b\u6807\u4e3a index1 \u76f4\u5230\u9047\u5230\u4e86\u7a7a\u683c\uff0c\u5219\u5c06\u6b64\u65f6\u4e0b\u6807 index2 \u4e4b\u95f4\u7684\u5355\u8bcd\u52a0\u5165\u5230\u5217\u8868\u4e2d\uff0c\u91cd\u7f6e index1 \u3002 \u5230\u4e86\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u5982\u679c\u4ecd\u7136 index1 \u4e0d\u4e3a\u91cd\u7f6e\u503c\u5219\u5c06\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u4e5f\u52a0\u5165 \u5b9e\u9645\u4ee3\u7801\u5982\u4e0b\uff1a // stringSplit func stringSplit ( str string ) [] string { index1 := - 1 wordList := [] string {} for i , v := range str { if v != ' ' { if index1 == - 1 { index1 = i } continue } else { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } if index1 != - 1 { wordList = append ( wordList , str [ index1 :]) } return wordList } // input: \"i come from somewhere you do not know\" // output: [i come from somewhere you do not know] \u8fd9\u4e2a\u4ee3\u7801\u5f88\u597d\u7684\u80dc\u4efb\u4e86\uff0c\u9762\u8bd5\u5b98\u7684\u9700\u6c42\u3002 2.2 \u5355\u8bcd\u548c\u53e5\u53f7\u7b26\u53f7 \u8fd9\u65f6\u5019\u9762\u8bd5\u5b98\u8bf4\uff0c\u5982\u679c\u6211\u8f93\u5165\u7684 i come from somewhere you do not know.And I will tell you \u3002\u663e\u7136\uff0c know.And \u5e94\u8be5\u662f\u4e24\u4e2a\u5355\u8bcd\uff0c\u4f60\u7684\u8f93\u51fa\u662f konw.And \uff0c\u4e0d\u7b26\u5408\u6211\u7684\u9700\u6c42\u4e86\u3002 \u4e8e\u662f\uff0c\u8fdb\u884c\u4fee\u6539\uff0c\u53ea\u662f\u589e\u52a0\u6761\u4ef6\u7f62\u4e86\uff0c\u53ea\u8981\u628a' \u2018.\u2018 \u4e5f\u4f5c\u4e3a\u5206\u5272\u7b26\u5373\u53ef\u3002\u65b0\u4e00\u7248\u7684\u4ee3\u7801\u5f88\u5feb\u6539\u597d\u51fa\u6765\u3002 func stringSplit ( str string ) [] string { index1 := - 1 wordList := [] string {} for i , v := range str { // \u589e\u52a0\u4e86\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6 if v != ' ' && v != '.' { if index1 == - 1 { index1 = i } continue } // \u589e\u52a0\u4e86\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6 if v == ' ' || v == '.' { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } if index1 != - 1 { wordList = append ( wordList , str [ index1 :]) } return wordList } \u4f46\u662f\u522b\u9ad8\u5174\u8fd8\u6ca1\u5b8c\u5462\uff0c\u4e5f\u6709\u4eba\u4f1a\u4f7f\u7528 , \u6765\u5bf9\u6587\u672c\u8fdb\u884c\u5206\u5272\uff0c\u5f53\u7136\u8fd9\u65f6\u5019\u5728\u6dfb\u52a0\u6761\u4ef6\u7684\u533a\u57df\u65b0\u589e\u4e00\u4e2a\u6761\u4ef6\u5373\u53ef\u3002 func stringSplit ( str string ) [] string { index1 := - 1 wordList := [] string {} for i , v := range str { // \u5224\u65ad\u5206\u5272\u7b26 if ! isSeparator ( v ) { if index1 == - 1 { index1 = i } continue } else { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } if index1 != - 1 { wordList = append ( wordList , str [ index1 :]) } return wordList } // \u5224\u65ad\u662f\u5426\u662f\u5206\u5272\u7b26 func isSeparator ( character rune ) bool { seps := [] rune { ' ' , '.' , ',' } for _ , s := range seps { if s == character { return true } } return false } \u8fd9\u65f6\u5019\u4ee3\u7801\u770b\u8d77\u6765\u53c8\u53ef\u4ee5\u4e86\u3002 2.3\u5355\u8bcd\u548c\u5c0f\u6570 \u9762\u8bd5\u5b98\u8bf4\u5230\uff0c\u90a3\u4e48 I come from somewhere you do not know.And It's 10.1 km away. \u663e\u7136\u8fd9\u65f6\u5019\uff0c 10.1 \u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u6570\uff0c\u5f53\u4e2d\u7684 . \u4e0d\u53ef\u4ee5\u518d\u88ab\u4f5c\u4e3a\uff0c\u5206\u5272\u7b26\u53f7\u4e86\u3002\u5bf9\u4e8e\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4 . \uff0c\u6211\u4eec\u9700\u8981\u628a\u4ed6\u4f5c\u4e3a\u5c0f\u6570\u7b26\u53f7\u6765\u770b\u5f85\u3002 func stringSplit ( str string ) [] string { ... . for i , v := range str { // \u5982\u679c\u8fd9\u4e2a . \u524d\u540e\u662f\u6570\u5b57\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fdb\u884c\u8df3\u8fc7 if v == '.' && index1 != - 1 && isDigit ( str [ index1 ]) && i + 1 < len ( str ) && isDigit ( str [ i + 1 ]) { continue } else if ! isSeparator ( byte ( v )) { if index1 == - 1 { index1 = i } continue } else { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } ...... return wordList } ...... // \u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\uff0c\u901a\u8fc7ASCII\u8fdb\u884c\u5224\u65ad func isDigit ( character byte ) bool { if character >= 48 && character <= 57 { return true } return false } \u8fd9\u65f6\u5019\uff0c\u4ee3\u7801\u9010\u6e10\u8d8b\u4e8e\u590d\u6742\u4e86\u3002 2.4\u5355\u8bcd\u3001\u5c0f\u6570\u3001\u65f6\u95f4 \u9762\u8bd5\u5b98\u63a5\u7740\u8bf4\u5230\uff0c\u5982\u679c\u6211\u73b0\u5728\u7684\u5b57\u7b26\u4e32\u662f\uff0c I come from somewhere you do not know.And It's 10.1 km away. I will tell you at 10:00 am \u90a3\u4e48 10:00 am \u6211\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u65f6\u95f4\u7684\u3002 emmmm\uff0c\u5176\u5b9e\u53ea\u8981\u7ee7\u7eed\u5728\u5206\u5272\u51fd\u6570\u4e2d\u6dfb\u52a0\uff0c\u903b\u8f91\u5224\u65ad\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u4e00\u5c42\u53c8\u4e00\u5c42\u7684 if-else \u6211\u4eec\u4eff \u4f5b\u9677\u5165\u4e86\u4e00\u4e2a\u5faa\u73af\u267b\ufe0f\uff0c\u53ea\u8981\u6709\u65b0\u7684\u9700\u6c42\uff0c\u90a3\u4e48\u6211\u5c31\u4e00\u5b9a\u5f97\u589e\u52a0\uff0c if-else \u7684\u4ee3\u7801\u3002\u751a\u81f3\u4e5f\u9700\u8981\u5427\u4ee5\u524d\u5df2\u7ecf\u5b8c\u6210\u4e86\u7684\u4ee3\u7801\uff0c\u8fdb\u884c\u4fee\u6539\u3002 \u8fd9\u663e\u7136\u662f\u4e0d\u5408\u7406 \u3002 \u5982\u4f55\u53bb\u4f18\u5316\u4e86\uff1f 3.\u6709\u9650\u72b6\u6001\u673a \u4f7f\u7528\u72b6\u6001\u673a\uff0c\u8ba9\u5206\u8bcd\u548c\u5355\u8bcd\u6240\u51fa\u7684\u72b6\u6001\uff0c\u8fdb\u884c\u6d41\u8f6c\u3002 \u6709\u9650\u72b6\u6001\u673a\u6709\u4e24\u4e2a\u5fc5\u8981\u7684\u7279\u70b9\uff0c\u4e00\u662f\u79bb\u6563\u7684\uff0c\u4e8c\u662f\u6709\u9650\u7684\u3002\u57fa\u4e8e\u8fd9\u4e24\u70b9\uff0c\u73b0\u5b9e\u4e16\u754c\u4e0a\u7edd\u5927\u591a\u6570\u4e8b\u7269\u56e0\u4e3a\u590d\u6742\u7684\u72b6\u6001\u800c\u65e0\u6cd5\u7528\u6709\u9650\u72b6\u6001\u673a\u8868\u793a\u3002 \u800c\u63cf\u8ff0\u4e8b\u7269\u7684\u6709\u9650\u72b6\u6001\u673a\u6a21\u578b\u7684\u5143\u7d20\u7531\u4ee5\u4e0b\u7ec4\u6210\uff1a \u72b6\u6001(State)\uff1a\u4e8b\u7269\u7684\u72b6\u6001\uff0c\u5305\u62ec\u521d\u59cb\u72b6\u6001\u548c\u6240\u6709\u4e8b\u4ef6\u89e6\u53d1\u540e\u7684\u72b6\u6001 \u4e8b\u4ef6(Event)\uff1a\u89e6\u53d1\u72b6\u6001\u53d8\u5316\u6216\u8005\u4fdd\u6301\u539f\u72b6\u6001\u7684\u4e8b\u4ef6 \u884c\u4e3a\u6216\u8f6c\u6362(Action/Transition)\uff1a\u6267\u884c\u72b6\u6001\u8f6c\u6362\u7684\u8fc7\u7a0b \u68c0\u6d4b\u5668(Guard)\uff1a\u68c0\u6d4b\u67d0\u79cd\u72b6\u6001\u8981\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u72b6\u6001\u7684\u6761\u4ef6\u662f\u5426\u6ee1\u8db3 \u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 \"I'm a 10 years old boy, 'And i sleep at 10 pm,and' i eat 10.10 kg food everyday\" \u4f60\u9700\u8981\u505a\u7684\u662f\u5bf9\u8fd9\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u5206\uff0c\u5224\u65ad\u5f53\u524d\u6570\u7ec4\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\u3002 \u5f97\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u6570\u7ec4 [I'm, a , 10, years, old, boy, And, i, sleep, at, 10 pm, and, i ,eat, 10.10, kg, food, everyday] \uff0c \u5373 \u5207\u5206\u51fa\uff0c \u5c0f\u6570 , \u65f6\u95f4 ,\u4ee5\u53ca \u5355\u8bcd \u7684\u603b\u5171\u4e2a\u6570","title":"\u4eceif-else\u5730\u72f1\u5230\u72b6\u6001\u673a\u6d41\u8f6c"},{"location":"translate/re/fsm-1/#if-else","text":"","title":"\u4ece if-else \u5730\u72f1\u5230\u72b6\u6001\u673a\u6d41\u8f6c"},{"location":"translate/re/fsm-1/#1-intro","text":"\u5728\u4e00\u6b21\u9762\u8bd5\u4e2d\uff0c\u9762\u8bd5\u5b98\u63d0\u5230\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9898\u76ee\uff0c\u5728\u4e0d\u5229\u7528Go\u81ea\u5e26\u5305\u6216\u8005\u7b2c\u4e09\u5305\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u5206\u3002 \u6bd4\u5982\u5bf9\u4e8e\u5b57\u7b26\u4e32 i come from somewhere you do not know\" \u8fdb\u884c\u5207\u5206\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u662f [\"i\",\"come\",\"from\",\"somewhere\",\"you\",\"do\",\"not\",\"know\"] \u3002 \u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9700\u6c42\uff0c\u6211\u4eec\u53ea\u7528\u8bb0\u5f55\u4ece\u8bfb\u53d6\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u5230\u7a7a\u683c\u5c31\u7ed3\u675f\u4e86\u3002\u4ee3\u7801\u5199\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\u3002","title":"1. intro"},{"location":"translate/re/fsm-1/#2","text":"","title":"2. \u9010\u6e10\u590d\u6742"},{"location":"translate/re/fsm-1/#21","text":"\u4e5f\u5c31\u662fintro\u4e2d\u7684\u9700\u6c42\uff0c\u601d\u8def\u5982\u4e0b \u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u662f\u5b57\u6bcd\u5219\u8bb0\u5f55\u4e0b\u6807\u4e3a index1 \u76f4\u5230\u9047\u5230\u4e86\u7a7a\u683c\uff0c\u5219\u5c06\u6b64\u65f6\u4e0b\u6807 index2 \u4e4b\u95f4\u7684\u5355\u8bcd\u52a0\u5165\u5230\u5217\u8868\u4e2d\uff0c\u91cd\u7f6e index1 \u3002 \u5230\u4e86\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u5982\u679c\u4ecd\u7136 index1 \u4e0d\u4e3a\u91cd\u7f6e\u503c\u5219\u5c06\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u4e5f\u52a0\u5165 \u5b9e\u9645\u4ee3\u7801\u5982\u4e0b\uff1a // stringSplit func stringSplit ( str string ) [] string { index1 := - 1 wordList := [] string {} for i , v := range str { if v != ' ' { if index1 == - 1 { index1 = i } continue } else { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } if index1 != - 1 { wordList = append ( wordList , str [ index1 :]) } return wordList } // input: \"i come from somewhere you do not know\" // output: [i come from somewhere you do not know] \u8fd9\u4e2a\u4ee3\u7801\u5f88\u597d\u7684\u80dc\u4efb\u4e86\uff0c\u9762\u8bd5\u5b98\u7684\u9700\u6c42\u3002","title":"2.1 \u5355\u8bcd\u548c\u7a7a\u683c"},{"location":"translate/re/fsm-1/#22","text":"\u8fd9\u65f6\u5019\u9762\u8bd5\u5b98\u8bf4\uff0c\u5982\u679c\u6211\u8f93\u5165\u7684 i come from somewhere you do not know.And I will tell you \u3002\u663e\u7136\uff0c know.And \u5e94\u8be5\u662f\u4e24\u4e2a\u5355\u8bcd\uff0c\u4f60\u7684\u8f93\u51fa\u662f konw.And \uff0c\u4e0d\u7b26\u5408\u6211\u7684\u9700\u6c42\u4e86\u3002 \u4e8e\u662f\uff0c\u8fdb\u884c\u4fee\u6539\uff0c\u53ea\u662f\u589e\u52a0\u6761\u4ef6\u7f62\u4e86\uff0c\u53ea\u8981\u628a' \u2018.\u2018 \u4e5f\u4f5c\u4e3a\u5206\u5272\u7b26\u5373\u53ef\u3002\u65b0\u4e00\u7248\u7684\u4ee3\u7801\u5f88\u5feb\u6539\u597d\u51fa\u6765\u3002 func stringSplit ( str string ) [] string { index1 := - 1 wordList := [] string {} for i , v := range str { // \u589e\u52a0\u4e86\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6 if v != ' ' && v != '.' { if index1 == - 1 { index1 = i } continue } // \u589e\u52a0\u4e86\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6 if v == ' ' || v == '.' { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } if index1 != - 1 { wordList = append ( wordList , str [ index1 :]) } return wordList } \u4f46\u662f\u522b\u9ad8\u5174\u8fd8\u6ca1\u5b8c\u5462\uff0c\u4e5f\u6709\u4eba\u4f1a\u4f7f\u7528 , \u6765\u5bf9\u6587\u672c\u8fdb\u884c\u5206\u5272\uff0c\u5f53\u7136\u8fd9\u65f6\u5019\u5728\u6dfb\u52a0\u6761\u4ef6\u7684\u533a\u57df\u65b0\u589e\u4e00\u4e2a\u6761\u4ef6\u5373\u53ef\u3002 func stringSplit ( str string ) [] string { index1 := - 1 wordList := [] string {} for i , v := range str { // \u5224\u65ad\u5206\u5272\u7b26 if ! isSeparator ( v ) { if index1 == - 1 { index1 = i } continue } else { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } if index1 != - 1 { wordList = append ( wordList , str [ index1 :]) } return wordList } // \u5224\u65ad\u662f\u5426\u662f\u5206\u5272\u7b26 func isSeparator ( character rune ) bool { seps := [] rune { ' ' , '.' , ',' } for _ , s := range seps { if s == character { return true } } return false } \u8fd9\u65f6\u5019\u4ee3\u7801\u770b\u8d77\u6765\u53c8\u53ef\u4ee5\u4e86\u3002","title":"2.2 \u5355\u8bcd\u548c\u53e5\u53f7\u7b26\u53f7"},{"location":"translate/re/fsm-1/#23","text":"\u9762\u8bd5\u5b98\u8bf4\u5230\uff0c\u90a3\u4e48 I come from somewhere you do not know.And It's 10.1 km away. \u663e\u7136\u8fd9\u65f6\u5019\uff0c 10.1 \u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u6570\uff0c\u5f53\u4e2d\u7684 . \u4e0d\u53ef\u4ee5\u518d\u88ab\u4f5c\u4e3a\uff0c\u5206\u5272\u7b26\u53f7\u4e86\u3002\u5bf9\u4e8e\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4 . \uff0c\u6211\u4eec\u9700\u8981\u628a\u4ed6\u4f5c\u4e3a\u5c0f\u6570\u7b26\u53f7\u6765\u770b\u5f85\u3002 func stringSplit ( str string ) [] string { ... . for i , v := range str { // \u5982\u679c\u8fd9\u4e2a . \u524d\u540e\u662f\u6570\u5b57\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fdb\u884c\u8df3\u8fc7 if v == '.' && index1 != - 1 && isDigit ( str [ index1 ]) && i + 1 < len ( str ) && isDigit ( str [ i + 1 ]) { continue } else if ! isSeparator ( byte ( v )) { if index1 == - 1 { index1 = i } continue } else { if index1 != - 1 { wordList = append ( wordList , str [ index1 : i ]) index1 = - 1 } } } ...... return wordList } ...... // \u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\uff0c\u901a\u8fc7ASCII\u8fdb\u884c\u5224\u65ad func isDigit ( character byte ) bool { if character >= 48 && character <= 57 { return true } return false } \u8fd9\u65f6\u5019\uff0c\u4ee3\u7801\u9010\u6e10\u8d8b\u4e8e\u590d\u6742\u4e86\u3002","title":"2.3\u5355\u8bcd\u548c\u5c0f\u6570"},{"location":"translate/re/fsm-1/#24","text":"\u9762\u8bd5\u5b98\u63a5\u7740\u8bf4\u5230\uff0c\u5982\u679c\u6211\u73b0\u5728\u7684\u5b57\u7b26\u4e32\u662f\uff0c I come from somewhere you do not know.And It's 10.1 km away. I will tell you at 10:00 am \u90a3\u4e48 10:00 am \u6211\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u65f6\u95f4\u7684\u3002 emmmm\uff0c\u5176\u5b9e\u53ea\u8981\u7ee7\u7eed\u5728\u5206\u5272\u51fd\u6570\u4e2d\u6dfb\u52a0\uff0c\u903b\u8f91\u5224\u65ad\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u4e00\u5c42\u53c8\u4e00\u5c42\u7684 if-else \u6211\u4eec\u4eff \u4f5b\u9677\u5165\u4e86\u4e00\u4e2a\u5faa\u73af\u267b\ufe0f\uff0c\u53ea\u8981\u6709\u65b0\u7684\u9700\u6c42\uff0c\u90a3\u4e48\u6211\u5c31\u4e00\u5b9a\u5f97\u589e\u52a0\uff0c if-else \u7684\u4ee3\u7801\u3002\u751a\u81f3\u4e5f\u9700\u8981\u5427\u4ee5\u524d\u5df2\u7ecf\u5b8c\u6210\u4e86\u7684\u4ee3\u7801\uff0c\u8fdb\u884c\u4fee\u6539\u3002 \u8fd9\u663e\u7136\u662f\u4e0d\u5408\u7406 \u3002 \u5982\u4f55\u53bb\u4f18\u5316\u4e86\uff1f","title":"2.4\u5355\u8bcd\u3001\u5c0f\u6570\u3001\u65f6\u95f4"},{"location":"translate/re/fsm-1/#3","text":"\u4f7f\u7528\u72b6\u6001\u673a\uff0c\u8ba9\u5206\u8bcd\u548c\u5355\u8bcd\u6240\u51fa\u7684\u72b6\u6001\uff0c\u8fdb\u884c\u6d41\u8f6c\u3002 \u6709\u9650\u72b6\u6001\u673a\u6709\u4e24\u4e2a\u5fc5\u8981\u7684\u7279\u70b9\uff0c\u4e00\u662f\u79bb\u6563\u7684\uff0c\u4e8c\u662f\u6709\u9650\u7684\u3002\u57fa\u4e8e\u8fd9\u4e24\u70b9\uff0c\u73b0\u5b9e\u4e16\u754c\u4e0a\u7edd\u5927\u591a\u6570\u4e8b\u7269\u56e0\u4e3a\u590d\u6742\u7684\u72b6\u6001\u800c\u65e0\u6cd5\u7528\u6709\u9650\u72b6\u6001\u673a\u8868\u793a\u3002 \u800c\u63cf\u8ff0\u4e8b\u7269\u7684\u6709\u9650\u72b6\u6001\u673a\u6a21\u578b\u7684\u5143\u7d20\u7531\u4ee5\u4e0b\u7ec4\u6210\uff1a \u72b6\u6001(State)\uff1a\u4e8b\u7269\u7684\u72b6\u6001\uff0c\u5305\u62ec\u521d\u59cb\u72b6\u6001\u548c\u6240\u6709\u4e8b\u4ef6\u89e6\u53d1\u540e\u7684\u72b6\u6001 \u4e8b\u4ef6(Event)\uff1a\u89e6\u53d1\u72b6\u6001\u53d8\u5316\u6216\u8005\u4fdd\u6301\u539f\u72b6\u6001\u7684\u4e8b\u4ef6 \u884c\u4e3a\u6216\u8f6c\u6362(Action/Transition)\uff1a\u6267\u884c\u72b6\u6001\u8f6c\u6362\u7684\u8fc7\u7a0b \u68c0\u6d4b\u5668(Guard)\uff1a\u68c0\u6d4b\u67d0\u79cd\u72b6\u6001\u8981\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u72b6\u6001\u7684\u6761\u4ef6\u662f\u5426\u6ee1\u8db3 \u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 \"I'm a 10 years old boy, 'And i sleep at 10 pm,and' i eat 10.10 kg food everyday\" \u4f60\u9700\u8981\u505a\u7684\u662f\u5bf9\u8fd9\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u5206\uff0c\u5224\u65ad\u5f53\u524d\u6570\u7ec4\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\u3002 \u5f97\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u6570\u7ec4 [I'm, a , 10, years, old, boy, And, i, sleep, at, 10 pm, and, i ,eat, 10.10, kg, food, everyday] \uff0c \u5373 \u5207\u5206\u51fa\uff0c \u5c0f\u6570 , \u65f6\u95f4 ,\u4ee5\u53ca \u5355\u8bcd \u7684\u603b\u5171\u4e2a\u6570","title":"3.\u6709\u9650\u72b6\u6001\u673a"},{"location":"translate/sharing/mac-app/","text":"\u6211\u5728macOS\u4e0b\u7528\u4ec0\u4e48 Mbp\uff0c\u4e00\u76f4\u4f5c\u4e3a\u6211\u7684\u4e3b\u529b\u673a\uff0c\u966a\u4f34\u6211\u4ece\u5927\u5b66\u65f6\u5149\u3001\u5230\u73b0\u5728\u5feb\u7814\u7a76\u751f\u6bd5\u4e1a\u3002\u5c1d\u8bd5\u8fc7\u5f88\u591a\u8f6f\u4ef6\uff0c\u8fd9\u4e9b\u5e38\u7528\u7684\u8f6f\u4ef6\u53ef\u4ee5\u63a8\u8350\u7ed9\u4f60\u3002 \u5982\u679c\u4f60\u662fmacOS\u65b0\u624b\u4f7f\u7528\u8005\uff0c\u6216\u8005\u4f60\u4e00\u76f4\u6709\u5728\u5c1d\u8bd5\u65b0\u7684\u8f6f\u4ef6\uff0c\u90a3\u4e48\u8fd9\u7bc7\u6587\u7ae0\u6216\u8bb8\u53ef\u4ee5\u5e2e\u5230\u4f60\u3002 \u7f16\u8f91\uff0c\u6587\u5b57\u548c\u77e5\u8bc6\u7ba1\u7406 \u6587\u5b57\u5de5\u4f5c\u8d2f\u7a7f\u4e86\u5b66\u751f\u3001\u804c\u4e1a\u751f\u6daf\uff0c\u6211\u4eec\u4f1a\u63a5\u89e6\u5230\u5927\u91cf\u7684\u5185\u5bb9\uff0c\u4e5f\u4f1a\u6709\u503e\u5411\u7684\u8f93\u51fa\u3002\u8fd9\u4e09\u6b3e\u8f6f\u4ef6\u662f\u6211\u5e38\u7528\u7684\u3002 Notion Notion\u662f\u4e2a\u5341\u5206\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u5f3a\u5927\u5230\u6211\u4e5f\u53ea\u662f\u4f7f\u7528\u4e86\u5b83\u7684\u51b0\u5c71\u4e00\u89d2\u3002\u4f5c\u4e3a\u65b0\u624b\u4f7f\u7528\u8005\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4e0a\u624b\u5b98\u65b9\u63d0\u4f9b\u7684template\uff0c\u5f53\u4f60\u719f\u6089\u4ee5\u540e\uff0c\u53ef\u4ee5\u7740\u624b\u6784\u5efa\u81ea\u5df1\u7684\u5de5\u4f5c\u533a\u3002\u4ece\u76ee\u6807\u7ba1\u7406\uff0c\u5230\u65e5\u7a0b\u77e5\u8bc6\u4f60\u751f\u6d3b\u7684\u65b9\u65b9\u9762\u9762\u90fd\u53ef\u4ee5\u7531\u5b83\u5305\u529e\u3002 \u5982\u679c\u4f60\u521a\u597d\u662f\u5b66\u751f\uff0c\u521a\u597d\u6709\u81ea\u5df1\u5f97edu\u90ae\u7bb1\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u514d\u8d39\u8ba2\u9605Personal Pro\u3002 Typora \u5982\u679c\u4f60\u65f6\u5e38\u9700\u8981\u5904\u7406\u6587\u5b57\uff0c\u6216\u8005\u8f93\u51fa\u4e00\u4e9b\u5185\u5bb9\uff0ctypora\u53ef\u4ee5\u662f\u4f60\u7684\u5f97\u529b\u52a9\u624b\u3002\u8fd9\u662f\u4e00\u6b3e\u7b80\u6d01\u3001\u7f8e\u89c2\u7684Markdown\u7f16\u8f91\u5668\u3002\u7a0d\u5fae\u5b66\u4e60\u4e00\u70b9\u70b9Markdown\u8bed\u6cd5\u5c31\u80fd\u591f\u5b8c\u5168\u7684\u9a7e\u9a6d\u5b83\uff01 \u65b0\u7248\u672c\u5f00\u59cb\u4ed8\u8d39\u4e86\uff0c\u4f46\u662fbeta\u514d\u8d39\u7248\u7684\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e14\u4e5f\u6ca1\u6709\u4efb\u4f55\u7684\u533a\u522b\u3002 Microsoft 365 \u8fd9\u4e2a\u662f\u88c5\u673a\u5fc5\u5907\u4e86\uff0c\u5904\u7406word\uff0cexcel\uff0c\u6ca1\u6709\u66f4\u597d\u7684\u9009\u62e9\u3002 \u7f16\u7801 HappyCoding\uff01 \u4f5c\u4e3a\u4e00\u53ea\u7a0b\u5e8f\u5458(Gopher)\uff0chappy coding\u662f\u5fc5\u987b\u7684\uff0c\u9ad8\u6548\u7387\u3001\u7b80\u6d01\u7684\u5f00\u53d1\u5de5\u5177\u66f4\u53d7\u6211\u7684\u9752\u7750 VS Code \u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\uff0c\u8ba9VS Code\u65e0\u6240\u4e0d\u80fd\uff01 JetBarins Goland Jetbrains More than Java\uff01 iTerm2 + Zsh \u4e00\u4e2a\u597d\u770b\u7684\u7ec8\u7aef\uff0c\u4f7f\u7528\u5230zsh\u7684\u63d2\u4ef6\uff0c\u90a3\u4e48\u8d77\u98de\uff01 \u5de5\u5177 uPic \u65f6\u5e38\u5199\u6587\u7ae0\uff0c\u82e6\u4e8e\u6ca1\u6709\u56fe\u5e8a\uff1f\u90a3\u4e48upic\u53ef\u4ee5\u5e2e\u4f60\u5feb\u901f\u7684\u89e3\u51b3\u8fd9\u4e2a\u75db\u70b9\u3002 \u6536\u8d39\u8f6f\u4ef6\uff0c\u7269\u8d85\u6240\u503c\u3002 Dowine 4 \u5982\u679c\u4f60\u662f\u4e00\u4e2a\u4e0d\u4ec5\u770b\u4e86\u89c6\u9891\u8fd8\u60f3\u4e0b\u8f7d\u4e0b\u6765\u7684\u4eba\uff0c\u90a3\u4e48\u8fd9\u6b3e\u8f6f\u4ef6\u662f\u4f60\u7684\u597d\u5e2e\u624b\u4e86\uff01 \u540c\u6837\u6536\u8d39\uff0c\u540c\u6837\u7269\u8d85\u6240\u503c istat menus \u4f60\u9700\u8981\u4e86\u89e3\u4f60\u7684\u7535\u8111\uff0cistat meuns\uff0c\u5448\u73b0\u7ed9\u4f60mac\u6240\u6709 app cleaner \u5378\u8f7d\u8f6f\u4ef6\u5728macOS\u662f\u4ef6\u9ebb\u70e6\u4e8b\u60c5\uff0c\u867d\u7136\u62d6\u8fdb\u5783\u573e\u6876\u662f\u4e00\u4ef6\u5bb9\u6613\u4e8b\u60c5\uff0c\u4f46\u662f\u4f60\u6ca1\u6709\u5f7b\u5e95\u5220\u9664\u5b83\u3002app cleaner\u662f\u4e00\u6b3e\u514d\u8d39\u3001\u7b80\u5355\u7684\u5c0f\u7a0b\u5e8f\uff0c\u5e2e\u52a9\u4f60\u5f7b\u5e95\u5220\u9664\u8f6f\u4ef6\u3002 Clash x \u8bbf\u95ee\u516c\u5171\u8d44\u6e90Google Scholar\u4e4b\u7c7b\u7684\u7f51\u7ad9\uff0cClash X\u80fd\u591f\u5e2e\u52a9\u4f60\u3002","title":"\u6211\u5728mac\u4e0b\u7528\u4ec0\u4e48"},{"location":"translate/sharing/mac-app/#macos","text":"Mbp\uff0c\u4e00\u76f4\u4f5c\u4e3a\u6211\u7684\u4e3b\u529b\u673a\uff0c\u966a\u4f34\u6211\u4ece\u5927\u5b66\u65f6\u5149\u3001\u5230\u73b0\u5728\u5feb\u7814\u7a76\u751f\u6bd5\u4e1a\u3002\u5c1d\u8bd5\u8fc7\u5f88\u591a\u8f6f\u4ef6\uff0c\u8fd9\u4e9b\u5e38\u7528\u7684\u8f6f\u4ef6\u53ef\u4ee5\u63a8\u8350\u7ed9\u4f60\u3002 \u5982\u679c\u4f60\u662fmacOS\u65b0\u624b\u4f7f\u7528\u8005\uff0c\u6216\u8005\u4f60\u4e00\u76f4\u6709\u5728\u5c1d\u8bd5\u65b0\u7684\u8f6f\u4ef6\uff0c\u90a3\u4e48\u8fd9\u7bc7\u6587\u7ae0\u6216\u8bb8\u53ef\u4ee5\u5e2e\u5230\u4f60\u3002","title":"\u6211\u5728macOS\u4e0b\u7528\u4ec0\u4e48"},{"location":"translate/sharing/mac-app/#_1","text":"\u6587\u5b57\u5de5\u4f5c\u8d2f\u7a7f\u4e86\u5b66\u751f\u3001\u804c\u4e1a\u751f\u6daf\uff0c\u6211\u4eec\u4f1a\u63a5\u89e6\u5230\u5927\u91cf\u7684\u5185\u5bb9\uff0c\u4e5f\u4f1a\u6709\u503e\u5411\u7684\u8f93\u51fa\u3002\u8fd9\u4e09\u6b3e\u8f6f\u4ef6\u662f\u6211\u5e38\u7528\u7684\u3002","title":"\u7f16\u8f91\uff0c\u6587\u5b57\u548c\u77e5\u8bc6\u7ba1\u7406"},{"location":"translate/sharing/mac-app/#notion","text":"Notion\u662f\u4e2a\u5341\u5206\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u5f3a\u5927\u5230\u6211\u4e5f\u53ea\u662f\u4f7f\u7528\u4e86\u5b83\u7684\u51b0\u5c71\u4e00\u89d2\u3002\u4f5c\u4e3a\u65b0\u624b\u4f7f\u7528\u8005\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4e0a\u624b\u5b98\u65b9\u63d0\u4f9b\u7684template\uff0c\u5f53\u4f60\u719f\u6089\u4ee5\u540e\uff0c\u53ef\u4ee5\u7740\u624b\u6784\u5efa\u81ea\u5df1\u7684\u5de5\u4f5c\u533a\u3002\u4ece\u76ee\u6807\u7ba1\u7406\uff0c\u5230\u65e5\u7a0b\u77e5\u8bc6\u4f60\u751f\u6d3b\u7684\u65b9\u65b9\u9762\u9762\u90fd\u53ef\u4ee5\u7531\u5b83\u5305\u529e\u3002 \u5982\u679c\u4f60\u521a\u597d\u662f\u5b66\u751f\uff0c\u521a\u597d\u6709\u81ea\u5df1\u5f97edu\u90ae\u7bb1\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u514d\u8d39\u8ba2\u9605Personal Pro\u3002","title":"Notion"},{"location":"translate/sharing/mac-app/#typora","text":"\u5982\u679c\u4f60\u65f6\u5e38\u9700\u8981\u5904\u7406\u6587\u5b57\uff0c\u6216\u8005\u8f93\u51fa\u4e00\u4e9b\u5185\u5bb9\uff0ctypora\u53ef\u4ee5\u662f\u4f60\u7684\u5f97\u529b\u52a9\u624b\u3002\u8fd9\u662f\u4e00\u6b3e\u7b80\u6d01\u3001\u7f8e\u89c2\u7684Markdown\u7f16\u8f91\u5668\u3002\u7a0d\u5fae\u5b66\u4e60\u4e00\u70b9\u70b9Markdown\u8bed\u6cd5\u5c31\u80fd\u591f\u5b8c\u5168\u7684\u9a7e\u9a6d\u5b83\uff01 \u65b0\u7248\u672c\u5f00\u59cb\u4ed8\u8d39\u4e86\uff0c\u4f46\u662fbeta\u514d\u8d39\u7248\u7684\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e14\u4e5f\u6ca1\u6709\u4efb\u4f55\u7684\u533a\u522b\u3002","title":"Typora"},{"location":"translate/sharing/mac-app/#microsoft-365","text":"\u8fd9\u4e2a\u662f\u88c5\u673a\u5fc5\u5907\u4e86\uff0c\u5904\u7406word\uff0cexcel\uff0c\u6ca1\u6709\u66f4\u597d\u7684\u9009\u62e9\u3002","title":"Microsoft 365"},{"location":"translate/sharing/mac-app/#happycoding","text":"\u4f5c\u4e3a\u4e00\u53ea\u7a0b\u5e8f\u5458(Gopher)\uff0chappy coding\u662f\u5fc5\u987b\u7684\uff0c\u9ad8\u6548\u7387\u3001\u7b80\u6d01\u7684\u5f00\u53d1\u5de5\u5177\u66f4\u53d7\u6211\u7684\u9752\u7750","title":"\u7f16\u7801 HappyCoding\uff01"},{"location":"translate/sharing/mac-app/#vs-code","text":"\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\uff0c\u8ba9VS Code\u65e0\u6240\u4e0d\u80fd\uff01","title":"VS Code"},{"location":"translate/sharing/mac-app/#jetbarins-goland","text":"Jetbrains More than Java\uff01","title":"JetBarins Goland"},{"location":"translate/sharing/mac-app/#iterm2-zsh","text":"\u4e00\u4e2a\u597d\u770b\u7684\u7ec8\u7aef\uff0c\u4f7f\u7528\u5230zsh\u7684\u63d2\u4ef6\uff0c\u90a3\u4e48\u8d77\u98de\uff01","title":"iTerm2 + Zsh"},{"location":"translate/sharing/mac-app/#_2","text":"","title":"\u5de5\u5177"},{"location":"translate/sharing/mac-app/#upic","text":"\u65f6\u5e38\u5199\u6587\u7ae0\uff0c\u82e6\u4e8e\u6ca1\u6709\u56fe\u5e8a\uff1f\u90a3\u4e48upic\u53ef\u4ee5\u5e2e\u4f60\u5feb\u901f\u7684\u89e3\u51b3\u8fd9\u4e2a\u75db\u70b9\u3002 \u6536\u8d39\u8f6f\u4ef6\uff0c\u7269\u8d85\u6240\u503c\u3002","title":"uPic"},{"location":"translate/sharing/mac-app/#dowine-4","text":"\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u4e0d\u4ec5\u770b\u4e86\u89c6\u9891\u8fd8\u60f3\u4e0b\u8f7d\u4e0b\u6765\u7684\u4eba\uff0c\u90a3\u4e48\u8fd9\u6b3e\u8f6f\u4ef6\u662f\u4f60\u7684\u597d\u5e2e\u624b\u4e86\uff01 \u540c\u6837\u6536\u8d39\uff0c\u540c\u6837\u7269\u8d85\u6240\u503c","title":"Dowine 4"},{"location":"translate/sharing/mac-app/#istat-menus","text":"\u4f60\u9700\u8981\u4e86\u89e3\u4f60\u7684\u7535\u8111\uff0cistat meuns\uff0c\u5448\u73b0\u7ed9\u4f60mac\u6240\u6709","title":"istat menus"},{"location":"translate/sharing/mac-app/#app-cleaner","text":"\u5378\u8f7d\u8f6f\u4ef6\u5728macOS\u662f\u4ef6\u9ebb\u70e6\u4e8b\u60c5\uff0c\u867d\u7136\u62d6\u8fdb\u5783\u573e\u6876\u662f\u4e00\u4ef6\u5bb9\u6613\u4e8b\u60c5\uff0c\u4f46\u662f\u4f60\u6ca1\u6709\u5f7b\u5e95\u5220\u9664\u5b83\u3002app cleaner\u662f\u4e00\u6b3e\u514d\u8d39\u3001\u7b80\u5355\u7684\u5c0f\u7a0b\u5e8f\uff0c\u5e2e\u52a9\u4f60\u5f7b\u5e95\u5220\u9664\u8f6f\u4ef6\u3002","title":"app cleaner"},{"location":"translate/sharing/mac-app/#clash-x","text":"\u8bbf\u95ee\u516c\u5171\u8d44\u6e90Google Scholar\u4e4b\u7c7b\u7684\u7f51\u7ad9\uff0cClash X\u80fd\u591f\u5e2e\u52a9\u4f60\u3002","title":"Clash x"}]}